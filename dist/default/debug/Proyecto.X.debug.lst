

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Jun 08 22:01:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    32                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Version 2.40
    51                           ; Generated 04/07/2022 GMT
    52                           ; 
    53                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution. Publication is not required when
    67                           ;        this file is used in an embedded application.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4550 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85   000000                     
    86                           	psect	idataCOMRAM
    87   001346                     __pidataCOMRAM:
    88                           	callstack 0
    89                           
    90                           ;initializer for _interfaz
    91   001346  08                 	db	8
    92   000000                     _CCPR2	set	4027
    93   000000                     _EECON2	set	4007
    94   000000                     _RCREG	set	4014
    95   000000                     _TXREG	set	4013
    96   000000                     _PR2	set	4043
    97   000000                     _TMR2	set	4044
    98   000000                     _SPBRG	set	4015
    99   000000                     _BAUDCON	set	4024
   100   000000                     _TRISC	set	3988
   101   000000                     _TRISD	set	3989
   102   000000                     _RC1	set	31761
   103   000000                     _LATD3	set	31843
   104   000000                     _LATD2	set	31842
   105   000000                     _EEIF	set	32012
   106   000000                     _WR	set	32049
   107   000000                     _WREN	set	32050
   108   000000                     _CFGS	set	32054
   109   000000                     _CREN	set	32092
   110   000000                     _OERR	set	32089
   111   000000                     _TRMT	set	32097
   112   000000                     _TMR1ON	set	32360
   113   000000                     _TMR2ON	set	32338
   114   000000                     _INTEDG0	set	32654
   115   000000                     _INT0IF	set	32657
   116   000000                     _INT0IE	set	32660
   117   000000                     _LATD	set	3980
   118   000000                     _USBEN	set	31595
   119   000000                     _RCSTA	set	4011
   120   000000                     _TXSTA	set	4012
   121   000000                     _OSCCON	set	4051
   122   000000                     _CCP2IE	set	32000
   123   000000                     _RCIF	set	31989
   124   000000                     _RCIE	set	31981
   125   000000                     _RBPU	set	32655
   126   000000                     _TRISB0	set	31896
   127   000000                     _GIE	set	32663
   128   000000                     _CCP2CON	set	4026
   129   000000                     _CCP1CON	set	4029
   130   000000                     _ADCON1	set	4033
   131   000000                     _T2CON	set	4042
   132   000000                     _T1CON	set	4045
   133   000000                     _EEDATA	set	4008
   134   000000                     _EEADR	set	4009
   135   000000                     _EEPGD	set	32055
   136   000000                     _CCP2IF	set	32008
   137   000000                     _TMR1	set	4046
   138   000000                     _UTRDIS	set	31611
   139   000000                     _RC0	set	31760
   140   000000                     _CCPR1L	set	4030
   141                           
   142                           	psect	smallconst
   143   000800                     __psmallconst:
   144                           	callstack 0
   145   000800  00                 	db	0
   146   000801                     STR_5:
   147   000801  49                 	db	73	;'I'
   148   000802  6E                 	db	110	;'n'
   149   000803  67                 	db	103	;'g'
   150   000804  72                 	db	114	;'r'
   151   000805  65                 	db	101	;'e'
   152   000806  73                 	db	115	;'s'
   153   000807  65                 	db	101	;'e'
   154   000808  20                 	db	32
   155   000809  44                 	db	68	;'D'
   156   00080A  69                 	db	105	;'i'
   157   00080B  73                 	db	115	;'s'
   158   00080C  74                 	db	116	;'t'
   159   00080D  2E                 	db	46
   160   00080E  20                 	db	32
   161   00080F  64                 	db	100	;'d'
   162   000810  65                 	db	101	;'e'
   163   000811  00                 	db	0
   164   000812                     STR_14:
   165   000812  4E                 	db	78	;'N'
   166   000813  75                 	db	117	;'u'
   167   000814  65                 	db	101	;'e'
   168   000815  76                 	db	118	;'v'
   169   000816  61                 	db	97	;'a'
   170   000817  20                 	db	32
   171   000818  44                 	db	68	;'D'
   172   000819  69                 	db	105	;'i'
   173   00081A  73                 	db	115	;'s'
   174   00081B  74                 	db	116	;'t'
   175   00081C  61                 	db	97	;'a'
   176   00081D  6E                 	db	110	;'n'
   177   00081E  63                 	db	99	;'c'
   178   00081F  69                 	db	105	;'i'
   179   000820  61                 	db	97	;'a'
   180   000821  00                 	db	0
   181   000822                     STR_11:
   182   000822  4E                 	db	78	;'N'
   183   000823  75                 	db	117	;'u'
   184   000824  65                 	db	101	;'e'
   185   000825  76                 	db	118	;'v'
   186   000826  61                 	db	97	;'a'
   187   000827  20                 	db	32
   188   000828  64                 	db	100	;'d'
   189   000829  69                 	db	105	;'i'
   190   00082A  73                 	db	115	;'s'
   191   00082B  74                 	db	116	;'t'
   192   00082C  2E                 	db	46
   193   00082D  20                 	db	32
   194   00082E  64                 	db	100	;'d'
   195   00082F  65                 	db	101	;'e'
   196   000830  00                 	db	0
   197   000831                     STR_1:
   198   000831  42                 	db	66	;'B'
   199   000832  69                 	db	105	;'i'
   200   000833  65                 	db	101	;'e'
   201   000834  6E                 	db	110	;'n'
   202   000835  76                 	db	118	;'v'
   203   000836  65                 	db	101	;'e'
   204   000837  6E                 	db	110	;'n'
   205   000838  69                 	db	105	;'i'
   206   000839  64                 	db	100	;'d'
   207   00083A  6F                 	db	111	;'o'
   208   00083B  20                 	db	32
   209   00083C  61                 	db	97	;'a'
   210   00083D  6C                 	db	108	;'l'
   211   00083E  00                 	db	0
   212   00083F                     STR_3:
   213   00083F  64                 	db	100	;'d'
   214   000840  65                 	db	101	;'e'
   215   000841  74                 	db	116	;'t'
   216   000842  65                 	db	101	;'e'
   217   000843  63                 	db	99	;'c'
   218   000844  63                 	db	99	;'c'
   219   000845  69                 	db	105	;'i'
   220   000846  6F                 	db	111	;'o'
   221   000847  6E                 	db	110	;'n'
   222   000848  20                 	db	32
   223   000849  64                 	db	100	;'d'
   224   00084A  65                 	db	101	;'e'
   225   00084B  00                 	db	0
   226   00084C                     STR_15:
   227   00084C  43                 	db	67	;'C'
   228   00084D  6F                 	db	111	;'o'
   229   00084E  6E                 	db	110	;'n'
   230   00084F  66                 	db	102	;'f'
   231   000850  69                 	db	105	;'i'
   232   000851  67                 	db	103	;'g'
   233   000852  75                 	db	117	;'u'
   234   000853  72                 	db	114	;'r'
   235   000854  61                 	db	97	;'a'
   236   000855  64                 	db	100	;'d'
   237   000856  61                 	db	97	;'a'
   238   000857  00                 	db	0
   239   000858                     STR_9:
   240   000858  44                 	db	68	;'D'
   241   000859  69                 	db	105	;'i'
   242   00085A  73                 	db	115	;'s'
   243   00085B  74                 	db	116	;'t'
   244   00085C  61                 	db	97	;'a'
   245   00085D  6E                 	db	110	;'n'
   246   00085E  63                 	db	99	;'c'
   247   00085F  69                 	db	105	;'i'
   248   000860  61                 	db	97	;'a'
   249   000861  3A                 	db	58	;':'
   250   000862  00                 	db	0
   251   000863                     STR_2:
   252   000863  73                 	db	115	;'s'
   253   000864  69                 	db	105	;'i'
   254   000865  73                 	db	115	;'s'
   255   000866  74                 	db	116	;'t'
   256   000867  65                 	db	101	;'e'
   257   000868  6D                 	db	109	;'m'
   258   000869  61                 	db	97	;'a'
   259   00086A  20                 	db	32
   260   00086B  64                 	db	100	;'d'
   261   00086C  65                 	db	101	;'e'
   262   00086D  00                 	db	0
   263   00086E                     STR_4:
   264   00086E  64                 	db	100	;'d'
   265   00086F  69                 	db	105	;'i'
   266   000870  73                 	db	115	;'s'
   267   000871  74                 	db	116	;'t'
   268   000872  61                 	db	97	;'a'
   269   000873  6E                 	db	110	;'n'
   270   000874  63                 	db	99	;'c'
   271   000875  69                 	db	105	;'i'
   272   000876  61                 	db	97	;'a'
   273   000877  73                 	db	115	;'s'
   274   000878  00                 	db	0
   275   000879                     STR_8:
   276   000879  49                 	db	73	;'I'
   277   00087A  6E                 	db	110	;'n'
   278   00087B  69                 	db	105	;'i'
   279   00087C  63                 	db	99	;'c'
   280   00087D  69                 	db	105	;'i'
   281   00087E  61                 	db	97	;'a'
   282   00087F  6E                 	db	110	;'n'
   283   000880  64                 	db	100	;'d'
   284   000881  6F                 	db	111	;'o'
   285   000882  00                 	db	0
   286   000883                     STR_6:
   287   000883  61                 	db	97	;'a'
   288   000884  6C                 	db	108	;'l'
   289   000885  61                 	db	97	;'a'
   290   000886  72                 	db	114	;'r'
   291   000887  6D                 	db	109	;'m'
   292   000888  61                 	db	97	;'a'
   293   000889  3A                 	db	58	;':'
   294   00088A  20                 	db	32
   295   00088B  00                 	db	0
   296   00088C                     STR_7:
   297   00088C  63                 	db	99	;'c'
   298   00088D  6D                 	db	109	;'m'
   299   00088E  00                 	db	0
   300   00088F  00                 	db	0	; dummy byte at the end
   301   000000                     
   302                           ; #config settings
   303                           
   304                           	psect	cinit
   305   001142                     __pcinit:
   306                           	callstack 0
   307   001142                     start_initialization:
   308                           	callstack 0
   309   001142                     __initialization:
   310                           	callstack 0
   311                           
   312                           ; Initialize objects allocated to COMRAM (1 bytes)
   313                           ; load TBLPTR registers with __pidataCOMRAM
   314   001142  0E46               	movlw	low __pidataCOMRAM
   315   001144  6EF6               	movwf	tblptrl,c
   316   001146  0E13               	movlw	high __pidataCOMRAM
   317   001148  6EF7               	movwf	tblptrh,c
   318   00114A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   319   00114C  6EF8               	movwf	tblptru,c
   320   00114E  0009               	tblrd		*+	;fetch initializer
   321   001150  CFF5 F03A          	movff	tablat,__pdataCOMRAM
   322                           
   323                           ; Clear objects allocated to COMRAM (14 bytes)
   324   001154  EE00  F02C         	lfsr	0,__pbssCOMRAM
   325   001158  0E0E               	movlw	14
   326   00115A                     clear_0:
   327   00115A  6AEE               	clrf	postinc0,c
   328   00115C  06E8               	decf	wreg,f,c
   329   00115E  E1FD               	bnz	clear_0
   330   001160                     end_of_initialization:
   331                           	callstack 0
   332   001160                     __end_of__initialization:
   333                           	callstack 0
   334   001160  903B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   335   001162  923B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   336   001164  0E00               	movlw	low (__Lmediumconst shr (0+16))
   337   001166  6EF8               	movwf	tblptru,c
   338   001168  0100               	movlb	0
   339   00116A  EF48  F004         	goto	_main	;jump to C main() function
   340                           
   341                           	psect	bssCOMRAM
   342   00002C                     __pbssCOMRAM:
   343                           	callstack 0
   344   00002C                     _Minimo:
   345                           	callstack 0
   346   00002C                     	ds	2
   347   00002E                     _Distancia:
   348                           	callstack 0
   349   00002E                     	ds	1
   350   00002F                     _Tecla:
   351                           	callstack 0
   352   00002F                     	ds	1
   353   000030                     _Minimo_Consola:
   354                           	callstack 0
   355   000030                     	ds	10
   356                           
   357                           	psect	dataCOMRAM
   358   00003A                     __pdataCOMRAM:
   359                           	callstack 0
   360   00003A                     _interfaz:
   361                           	callstack 0
   362   00003A                     	ds	1
   363                           
   364                           	psect	cstackCOMRAM
   365   000001                     __pcstackCOMRAM:
   366                           	callstack 0
   367   000001                     ??i2_RetardoLCD:
   368   000001                     ?i2_Recibir:
   369                           	callstack 0
   370   000001                     ?i2___wmul:
   371                           	callstack 0
   372   000001                     ?i2_strlen:
   373                           	callstack 0
   374   000001                     i2strlen@s:
   375                           	callstack 0
   376   000001                     i2___wmul@multiplier:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x0
   380   000001                     	ds	1
   381   000002                     i2RetardoLCD@a:
   382                           	callstack 0
   383                           
   384                           ; 1 bytes @ 0x1
   385   000002                     	ds	1
   386   000003                     ??i2_EnviaDato:
   387   000003                     i2strlen@cp:
   388                           	callstack 0
   389   000003                     i2___wmul@multiplicand:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x2
   393   000003                     	ds	1
   394   000004                     i2EnviaDato@a:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x3
   398   000004                     	ds	1
   399   000005                     i2EscribeLCD_c@a:
   400                           	callstack 0
   401   000005                     i2DireccionaLCD@a:
   402                           	callstack 0
   403   000005                     i2___wmul@product:
   404                           	callstack 0
   405                           
   406                           ; 2 bytes @ 0x4
   407   000005                     	ds	1
   408   000006                     i2MensajeLCD_Var@a:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x5
   412   000006                     	ds	1
   413   000007                     ??i2_MensajeLCD_Var:
   414   000007                     i2Recibir_Cadena@Buffer:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x6
   418   000007                     	ds	1
   419   000008                     i2MensajeLCD_Var@i:
   420                           	callstack 0
   421   000008                     i2Recibir_Cadena@tamano:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x7
   425   000008                     	ds	2
   426   00000A                     ??i2_Recibir_Cadena:
   427                           
   428                           ; 1 bytes @ 0x9
   429   00000A                     	ds	1
   430   00000B                     i2Recibir_Cadena@c:
   431                           	callstack 0
   432                           
   433                           ; 1 bytes @ 0xA
   434   00000B                     	ds	1
   435   00000C                     i2Recibir_Cadena@valor:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0xB
   439   00000C                     	ds	2
   440   00000E                     i2Recibir_Cadena@i:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0xD
   444   00000E                     	ds	2
   445   000010                     ??_ISR:
   446                           
   447                           ; 1 bytes @ 0xF
   448   000010                     	ds	10
   449   00001A                     ??_RetardoLCD:
   450   00001A                     ?_strlen:
   451                           	callstack 0
   452   00001A                     ?_Recibir:
   453                           	callstack 0
   454   00001A                     ?___wmul:
   455                           	callstack 0
   456   00001A                     ?___lwdiv:
   457                           	callstack 0
   458   00001A                     ConfiguraLCD@a:
   459                           	callstack 0
   460   00001A                     Transmitir@BufferT:
   461                           	callstack 0
   462   00001A                     ___lbmod@divisor:
   463                           	callstack 0
   464   00001A                     strlen@s:
   465                           	callstack 0
   466   00001A                     SaveData@dir:
   467                           	callstack 0
   468   00001A                     ___wmul@multiplier:
   469                           	callstack 0
   470   00001A                     ___lwdiv@dividend:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x19
   474   00001A                     	ds	1
   475   00001B                     RetardoLCD@a:
   476                           	callstack 0
   477   00001B                     ___lbmod@dividend:
   478                           	callstack 0
   479                           
   480                           ; 1 bytes @ 0x1A
   481   00001B                     	ds	1
   482   00001C                     ??_EnviaDato:
   483   00001C                     SaveData@dato:
   484                           	callstack 0
   485   00001C                     ___lbmod@counter:
   486                           	callstack 0
   487   00001C                     strlen@cp:
   488                           	callstack 0
   489   00001C                     ___wmul@multiplicand:
   490                           	callstack 0
   491   00001C                     ___lwdiv@divisor:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x1B
   495   00001C                     	ds	1
   496   00001D                     EnviaDato@a:
   497                           	callstack 0
   498   00001D                     ___lbmod@rem:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x1C
   502   00001D                     	ds	1
   503   00001E                     EscribeLCD_c@a:
   504                           	callstack 0
   505   00001E                     DireccionaLCD@a:
   506                           	callstack 0
   507   00001E                     ___lbdiv@divisor:
   508                           	callstack 0
   509   00001E                     ___wmul@product:
   510                           	callstack 0
   511   00001E                     ___lwdiv@quotient:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x1D
   515   00001E                     	ds	1
   516   00001F                     MensajeLCD_Var@a:
   517                           	callstack 0
   518   00001F                     ___lbdiv@dividend:
   519                           	callstack 0
   520                           
   521                           ; 1 bytes @ 0x1E
   522   00001F                     	ds	1
   523   000020                     ??_MensajeLCD_Var:
   524   000020                     Recibir_Cadena@Buffer:
   525                           	callstack 0
   526   000020                     ___lbdiv@counter:
   527                           	callstack 0
   528   000020                     ___lwdiv@counter:
   529                           	callstack 0
   530                           
   531                           ; 1 bytes @ 0x1F
   532   000020                     	ds	1
   533   000021                     ___lbdiv@quotient:
   534                           	callstack 0
   535   000021                     MensajeLCD_Var@i:
   536                           	callstack 0
   537   000021                     Recibir_Cadena@tamano:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x20
   541   000021                     	ds	2
   542   000023                     ??_Recibir_Cadena:
   543   000023                     TransmitirDatos@Minimo:
   544                           	callstack 0
   545                           
   546                           ; 2 bytes @ 0x22
   547   000023                     	ds	1
   548   000024                     Recibir_Cadena@c:
   549                           	callstack 0
   550                           
   551                           ; 1 bytes @ 0x23
   552   000024                     	ds	1
   553   000025                     Recibir_Cadena@valor:
   554                           	callstack 0
   555   000025                     TransmitirDatos@MinC:
   556                           	callstack 0
   557                           
   558                           ; 2 bytes @ 0x24
   559   000025                     	ds	2
   560   000027                     Recibir_Cadena@i:
   561                           	callstack 0
   562                           
   563                           ; 2 bytes @ 0x26
   564   000027                     	ds	2
   565   000029                     ??_main:
   566                           
   567                           ; 1 bytes @ 0x28
   568   000029                     	ds	3
   569                           
   570 ;;
   571 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   572 ;;
   573 ;; *************** function _main *****************
   574 ;; Defined at:
   575 ;;		line 28 in file "Proyecto.c"
   576 ;; Parameters:    Size  Location     Type
   577 ;;		None
   578 ;; Auto vars:     Size  Location     Type
   579 ;;		None
   580 ;; Return value:  Size  Location     Type
   581 ;;                  1    wreg      void 
   582 ;; Registers used:
   583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   584 ;; Tracked objects:
   585 ;;		On entry : 0/0
   586 ;;		On exit  : 0/0
   587 ;;		Unchanged: 0/0
   588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   589 ;;      Params:         0       0       0       0       0       0       0       0       0
   590 ;;      Locals:         0       0       0       0       0       0       0       0       0
   591 ;;      Temps:          3       0       0       0       0       0       0       0       0
   592 ;;      Totals:         3       0       0       0       0       0       0       0       0
   593 ;;Total ram usage:        3 bytes
   594 ;; Hardware stack levels required when called: 10
   595 ;; This function calls:
   596 ;;		_BorraLCD
   597 ;;		_ConfiguraLCD
   598 ;;		_DireccionaLCD
   599 ;;		_EscribeLCD_c
   600 ;;		_InicializaLCD
   601 ;;		_MensajeLCD_Var
   602 ;;		_Recibir_Cadena
   603 ;;		_SaveData
   604 ;;		_TransmitirDatos
   605 ;;		___lwdiv
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612   000890                     __ptext0:
   613                           	callstack 0
   614   000890                     _main:
   615                           	callstack 21
   616                           
   617                           ;Proyecto.c: 29: BorraLCD();
   618                           
   619                           ;incstack = 0
   620   000890  EC7B  F009         	call	_BorraLCD	;wreg free
   621                           
   622                           ;Proyecto.c: 30: RBPU = 0;
   623   000894  9EF1               	bcf	4081,7,c	;volatile
   624                           
   625                           ;Proyecto.c: 31: TRISB0 = 1;
   626   000896  8093               	bsf	3987,0,c	;volatile
   627                           
   628                           ;Proyecto.c: 32: TRISD = 0;
   629   000898  0E00               	movlw	0
   630   00089A  6E95               	movwf	149,c	;volatile
   631                           
   632                           ;Proyecto.c: 33: TRISC = 0b11010010;
   633   00089C  0ED2               	movlw	210
   634   00089E  6E94               	movwf	148,c	;volatile
   635                           
   636                           ;Proyecto.c: 34: OSCCON = 0b01110000;
   637   0008A0  0E70               	movlw	112
   638   0008A2  6ED3               	movwf	211,c	;volatile
   639                           
   640                           ;Proyecto.c: 35: _delay((unsigned long)((1)*(8000000/4000.0)));
   641   0008A4  0E03               	movlw	3
   642   0008A6  6E29               	movwf	??_main^0,c
   643   0008A8  0E98               	movlw	152
   644   0008AA                     u767:
   645   0008AA  2EE8               	decfsz	wreg,f,c
   646   0008AC  D7FE               	bra	u767
   647   0008AE  2E29               	decfsz	??_main^0,f,c
   648   0008B0  D7FC               	bra	u767
   649                           
   650                           ;Proyecto.c: 36: TXSTA = 0b00100000;
   651   0008B2  0E20               	movlw	32
   652   0008B4  6EAC               	movwf	172,c	;volatile
   653                           
   654                           ;Proyecto.c: 37: RCSTA = 0b10010000;
   655   0008B6  0E90               	movlw	144
   656   0008B8  6EAB               	movwf	171,c	;volatile
   657                           
   658                           ;Proyecto.c: 38: BAUDCON = 0b00000000;
   659   0008BA  0E00               	movlw	0
   660   0008BC  6EB8               	movwf	184,c	;volatile
   661                           
   662                           ;Proyecto.c: 39: SPBRG = 12;
   663   0008BE  0E0C               	movlw	12
   664   0008C0  6EAF               	movwf	175,c	;volatile
   665                           
   666                           ;Proyecto.c: 40: ADCON1 = 15;
   667   0008C2  0E0F               	movlw	15
   668   0008C4  6EC1               	movwf	193,c	;volatile
   669                           
   670                           ;Proyecto.c: 41: RCIE = 1;
   671   0008C6  8A9D               	bsf	3997,5,c	;volatile
   672                           
   673                           ;Proyecto.c: 42: RCIF = 0;
   674   0008C8  9A9E               	bcf	3998,5,c	;volatile
   675                           
   676                           ;Proyecto.c: 43: GIE = 1;
   677   0008CA  8EF2               	bsf	4082,7,c	;volatile
   678                           
   679                           ;Proyecto.c: 45: INT0IE = 1;
   680   0008CC  88F2               	bsf	4082,4,c	;volatile
   681                           
   682                           ;Proyecto.c: 46: INT0IF = 0;
   683   0008CE  92F2               	bcf	4082,1,c	;volatile
   684                           
   685                           ;Proyecto.c: 47: INTEDG0 = 1;
   686   0008D0  8CF1               	bsf	4081,6,c	;volatile
   687                           
   688                           ;Proyecto.c: 48: CCP2IE = 1;
   689   0008D2  80A0               	bsf	4000,0,c	;volatile
   690                           
   691                           ;Proyecto.c: 49: CCP2IF = 0;
   692   0008D4  90A1               	bcf	4001,0,c	;volatile
   693                           
   694                           ;Proyecto.c: 52: T1CON = 0b10010000;
   695   0008D6  0E90               	movlw	144
   696   0008D8  6ECD               	movwf	205,c	;volatile
   697                           
   698                           ;Proyecto.c: 53: USBEN = 0;
   699   0008DA  966D               	bcf	3949,3,c	;volatile
   700                           
   701                           ;Proyecto.c: 54: UTRDIS = 1;
   702   0008DC  866F               	bsf	3951,3,c	;volatile
   703                           
   704                           ;Proyecto.c: 56: CCP1CON = 0b00001100;
   705   0008DE  0E0C               	movlw	12
   706   0008E0  6EBD               	movwf	189,c	;volatile
   707                           
   708                           ;Proyecto.c: 57: T2CON = 0b00000010;
   709   0008E2  0E02               	movlw	2
   710   0008E4  6ECA               	movwf	202,c	;volatile
   711                           
   712                           ;Proyecto.c: 58: TMR2 = 0;
   713   0008E6  0E00               	movlw	0
   714   0008E8  6ECC               	movwf	204,c	;volatile
   715                           
   716                           ;Proyecto.c: 59: PR2 = 249;
   717   0008EA  0EF9               	movlw	249
   718   0008EC  6ECB               	movwf	203,c	;volatile
   719                           
   720                           ;Proyecto.c: 60: CCPR1L = 0;
   721   0008EE  0E00               	movlw	0
   722   0008F0  6EBE               	movwf	190,c	;volatile
   723                           
   724                           ;Proyecto.c: 63: ConfiguraLCD(4);
   725   0008F2  0E04               	movlw	4
   726   0008F4  EC2D  F009         	call	_ConfiguraLCD
   727                           
   728                           ;Proyecto.c: 64: InicializaLCD();
   729   0008F8  EC0F  F007         	call	_InicializaLCD	;wreg free
   730                           
   731                           ;Proyecto.c: 65: DireccionaLCD(0x80);
   732   0008FC  0E80               	movlw	128
   733   0008FE  EC39  F009         	call	_DireccionaLCD
   734                           
   735                           ;Proyecto.c: 66: MensajeLCD_Var("Bienvenido al");
   736   000902  0E31               	movlw	low STR_1
   737   000904  6E1F               	movwf	MensajeLCD_Var@a^0,c
   738   000906  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   739                           
   740                           ;Proyecto.c: 67: DireccionaLCD(0xC0);
   741   00090A  0EC0               	movlw	192
   742   00090C  EC39  F009         	call	_DireccionaLCD
   743                           
   744                           ;Proyecto.c: 68: MensajeLCD_Var("sistema de");
   745   000910  0E63               	movlw	low STR_2
   746   000912  6E1F               	movwf	MensajeLCD_Var@a^0,c
   747   000914  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   748                           
   749                           ;Proyecto.c: 69: _delay((unsigned long)((1500)*(8000000/4000.0)));
   750   000918  0E10               	movlw	16
   751   00091A  6E2A               	movwf	(??_main+1)^0,c
   752   00091C  0E39               	movlw	57
   753   00091E  6E29               	movwf	??_main^0,c
   754   000920  0E0E               	movlw	14
   755   000922                     u777:
   756   000922  2EE8               	decfsz	wreg,f,c
   757   000924  D7FE               	bra	u777
   758   000926  2E29               	decfsz	??_main^0,f,c
   759   000928  D7FC               	bra	u777
   760   00092A  2E2A               	decfsz	(??_main+1)^0,f,c
   761   00092C  D7FA               	bra	u777
   762                           
   763                           ;Proyecto.c: 70: BorraLCD();
   764   00092E  EC7B  F009         	call	_BorraLCD	;wreg free
   765                           
   766                           ;Proyecto.c: 71: MensajeLCD_Var("deteccion de");
   767   000932  0E3F               	movlw	low STR_3
   768   000934  6E1F               	movwf	MensajeLCD_Var@a^0,c
   769   000936  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   770                           
   771                           ;Proyecto.c: 72: DireccionaLCD(0xC0);
   772   00093A  0EC0               	movlw	192
   773   00093C  EC39  F009         	call	_DireccionaLCD
   774                           
   775                           ;Proyecto.c: 73: MensajeLCD_Var("distancias");
   776   000940  0E6E               	movlw	low STR_4
   777   000942  6E1F               	movwf	MensajeLCD_Var@a^0,c
   778   000944  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   779                           
   780                           ;Proyecto.c: 74: _delay((unsigned long)((1500)*(8000000/4000.0)));
   781   000948  0E10               	movlw	16
   782   00094A  6E2A               	movwf	(??_main+1)^0,c
   783   00094C  0E39               	movlw	57
   784   00094E  6E29               	movwf	??_main^0,c
   785   000950  0E0E               	movlw	14
   786   000952                     u787:
   787   000952  2EE8               	decfsz	wreg,f,c
   788   000954  D7FE               	bra	u787
   789   000956  2E29               	decfsz	??_main^0,f,c
   790   000958  D7FC               	bra	u787
   791   00095A  2E2A               	decfsz	(??_main+1)^0,f,c
   792   00095C  D7FA               	bra	u787
   793                           
   794                           ;Proyecto.c: 75: BorraLCD();
   795   00095E  EC7B  F009         	call	_BorraLCD	;wreg free
   796                           
   797                           ;Proyecto.c: 76: MensajeLCD_Var("Ingrese Dist. de");
   798   000962  0E01               	movlw	low STR_5
   799   000964  6E1F               	movwf	MensajeLCD_Var@a^0,c
   800   000966  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   801                           
   802                           ;Proyecto.c: 77: DireccionaLCD(0xC0);
   803   00096A  0EC0               	movlw	192
   804   00096C  EC39  F009         	call	_DireccionaLCD
   805                           
   806                           ;Proyecto.c: 78: MensajeLCD_Var("alarma: ");
   807   000970  0E83               	movlw	low STR_6
   808   000972  6E1F               	movwf	MensajeLCD_Var@a^0,c
   809   000974  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   810                           
   811                           ;Proyecto.c: 79: Recibir_Cadena(Minimo_Consola, 5);
   812   000978  0E30               	movlw	low _Minimo_Consola
   813   00097A  6E20               	movwf	Recibir_Cadena@Buffer^0,c
   814   00097C  0E00               	movlw	0
   815   00097E  6E22               	movwf	(Recibir_Cadena@tamano+1)^0,c
   816   000980  0E05               	movlw	5
   817   000982  6E21               	movwf	Recibir_Cadena@tamano^0,c
   818   000984  EC45  F006         	call	_Recibir_Cadena	;wreg free
   819                           
   820                           ;Proyecto.c: 80: MensajeLCD_Var("cm");
   821   000988  0E8C               	movlw	low STR_7
   822   00098A  6E1F               	movwf	MensajeLCD_Var@a^0,c
   823   00098C  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   824                           
   825                           ;Proyecto.c: 81: EscribeLCD_c(' ');
   826   000990  0E20               	movlw	32
   827   000992  EC4F  F009         	call	_EscribeLCD_c
   828                           
   829                           ;Proyecto.c: 82: _delay((unsigned long)((1500)*(8000000/4000.0)));
   830   000996  0E10               	movlw	16
   831   000998  6E2A               	movwf	(??_main+1)^0,c
   832   00099A  0E39               	movlw	57
   833   00099C  6E29               	movwf	??_main^0,c
   834   00099E  0E0E               	movlw	14
   835   0009A0                     u797:
   836   0009A0  2EE8               	decfsz	wreg,f,c
   837   0009A2  D7FE               	bra	u797
   838   0009A4  2E29               	decfsz	??_main^0,f,c
   839   0009A6  D7FC               	bra	u797
   840   0009A8  2E2A               	decfsz	(??_main+1)^0,f,c
   841   0009AA  D7FA               	bra	u797
   842                           
   843                           ;Proyecto.c: 83: BorraLCD();
   844   0009AC  EC7B  F009         	call	_BorraLCD	;wreg free
   845                           
   846                           ;Proyecto.c: 84: MensajeLCD_Var("Iniciando");
   847   0009B0  0E79               	movlw	low STR_8
   848   0009B2  6E1F               	movwf	MensajeLCD_Var@a^0,c
   849   0009B4  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   850                           
   851                           ;Proyecto.c: 85: _delay((unsigned long)((500)*(8000000/4000.0)));
   852   0009B8  0E06               	movlw	6
   853   0009BA  6E2A               	movwf	(??_main+1)^0,c
   854   0009BC  0E13               	movlw	19
   855   0009BE  6E29               	movwf	??_main^0,c
   856   0009C0  0EAE               	movlw	174
   857   0009C2                     u807:
   858   0009C2  2EE8               	decfsz	wreg,f,c
   859   0009C4  D7FE               	bra	u807
   860   0009C6  2E29               	decfsz	??_main^0,f,c
   861   0009C8  D7FC               	bra	u807
   862   0009CA  2E2A               	decfsz	(??_main+1)^0,f,c
   863   0009CC  D7FA               	bra	u807
   864                           
   865                           ;Proyecto.c: 86: EscribeLCD_c('.');
   866   0009CE  0E2E               	movlw	46
   867   0009D0  EC4F  F009         	call	_EscribeLCD_c
   868                           
   869                           ;Proyecto.c: 87: _delay((unsigned long)((500)*(8000000/4000.0)));
   870   0009D4  0E06               	movlw	6
   871   0009D6  6E2A               	movwf	(??_main+1)^0,c
   872   0009D8  0E13               	movlw	19
   873   0009DA  6E29               	movwf	??_main^0,c
   874   0009DC  0EAE               	movlw	174
   875   0009DE                     u817:
   876   0009DE  2EE8               	decfsz	wreg,f,c
   877   0009E0  D7FE               	bra	u817
   878   0009E2  2E29               	decfsz	??_main^0,f,c
   879   0009E4  D7FC               	bra	u817
   880   0009E6  2E2A               	decfsz	(??_main+1)^0,f,c
   881   0009E8  D7FA               	bra	u817
   882                           
   883                           ;Proyecto.c: 88: EscribeLCD_c('.');
   884   0009EA  0E2E               	movlw	46
   885   0009EC  EC4F  F009         	call	_EscribeLCD_c
   886                           
   887                           ;Proyecto.c: 89: _delay((unsigned long)((500)*(8000000/4000.0)));
   888   0009F0  0E06               	movlw	6
   889   0009F2  6E2A               	movwf	(??_main+1)^0,c
   890   0009F4  0E13               	movlw	19
   891   0009F6  6E29               	movwf	??_main^0,c
   892   0009F8  0EAE               	movlw	174
   893   0009FA                     u827:
   894   0009FA  2EE8               	decfsz	wreg,f,c
   895   0009FC  D7FE               	bra	u827
   896   0009FE  2E29               	decfsz	??_main^0,f,c
   897   000A00  D7FC               	bra	u827
   898   000A02  2E2A               	decfsz	(??_main+1)^0,f,c
   899   000A04  D7FA               	bra	u827
   900                           
   901                           ;Proyecto.c: 90: EscribeLCD_c('.');
   902   000A06  0E2E               	movlw	46
   903   000A08  EC4F  F009         	call	_EscribeLCD_c
   904                           
   905                           ;Proyecto.c: 91: _delay((unsigned long)((500)*(8000000/4000.0)));
   906   000A0C  0E06               	movlw	6
   907   000A0E  6E2A               	movwf	(??_main+1)^0,c
   908   000A10  0E13               	movlw	19
   909   000A12  6E29               	movwf	??_main^0,c
   910   000A14  0EAE               	movlw	174
   911   000A16                     u837:
   912   000A16  2EE8               	decfsz	wreg,f,c
   913   000A18  D7FE               	bra	u837
   914   000A1A  2E29               	decfsz	??_main^0,f,c
   915   000A1C  D7FC               	bra	u837
   916   000A1E  2E2A               	decfsz	(??_main+1)^0,f,c
   917   000A20  D7FA               	bra	u837
   918                           
   919                           ;Proyecto.c: 92: BorraLCD();
   920   000A22  EC7B  F009         	call	_BorraLCD	;wreg free
   921                           
   922                           ;Proyecto.c: 93: MensajeLCD_Var("Distancia:");
   923   000A26  0E58               	movlw	low STR_9
   924   000A28  6E1F               	movwf	MensajeLCD_Var@a^0,c
   925   000A2A  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
   926                           
   927                           ;Proyecto.c: 95: TMR2ON = 1;
   928   000A2E  84CA               	bsf	4042,2,c	;volatile
   929   000A30                     l2008:
   930                           
   931                           ;Proyecto.c: 97: CCP2CON = 0b00000100;
   932   000A30  0E04               	movlw	4
   933   000A32  6EBA               	movwf	186,c	;volatile
   934                           
   935                           ;Proyecto.c: 98: TMR1 = 0;
   936   000A34  0E00               	movlw	0
   937   000A36  6ECF               	movwf	207,c	;volatile
   938   000A38  0E00               	movlw	0
   939   000A3A  6ECE               	movwf	206,c	;volatile
   940                           
   941                           ;Proyecto.c: 99: CCP2IF = 0;
   942   000A3C  90A1               	bcf	4001,0,c	;volatile
   943                           
   944                           ;Proyecto.c: 100: RC0 = 1;
   945   000A3E  8082               	bsf	3970,0,c	;volatile
   946                           
   947                           ;Proyecto.c: 101: _delay((unsigned long)((10)*(8000000/4000000.0)));
   948   000A40  0E06               	movlw	6
   949   000A42                     u847:
   950   000A42  2EE8               	decfsz	wreg,f,c
   951   000A44  D7FE               	bra	u847
   952   000A46  D000               	nop2	
   953                           
   954                           ;Proyecto.c: 102: RC0 = 0;
   955   000A48  9082               	bcf	3970,0,c	;volatile
   956   000A4A                     l186:
   957   000A4A  A282               	btfss	3970,1,c	;volatile
   958   000A4C  D7FE               	goto	l186
   959                           
   960                           ;Proyecto.c: 110: TMR1ON = 1;
   961   000A4E  80CD               	bsf	4045,0,c	;volatile
   962   000A50                     l189:
   963   000A50  A0A1               	btfss	4001,0,c	;volatile
   964   000A52  D7FE               	goto	l189
   965                           
   966                           ;Proyecto.c: 112: TMR1ON = 0;
   967   000A54  90CD               	bcf	4045,0,c	;volatile
   968                           
   969                           ;Proyecto.c: 113: Distancia = CCPR2 / 58;
   970   000A56  CFBB F01A          	movff	4027,___lwdiv@dividend	;volatile
   971   000A5A  CFBC F01B          	movff	4028,___lwdiv@dividend+1	;volatile
   972   000A5E  0E00               	movlw	0
   973   000A60  6E1D               	movwf	(___lwdiv@divisor+1)^0,c
   974   000A62  0E3A               	movlw	58
   975   000A64  6E1C               	movwf	___lwdiv@divisor^0,c
   976   000A66  ECC3  F007         	call	___lwdiv	;wreg free
   977   000A6A  501A               	movf	?___lwdiv^0,w,c
   978   000A6C  6E2E               	movwf	_Distancia^0,c
   979                           
   980                           ;Proyecto.c: 114: SaveData(0, Distancia);
   981   000A6E  0E00               	movlw	0
   982   000A70  6E1B               	movwf	(SaveData@dir+1)^0,c
   983   000A72  0E00               	movlw	0
   984   000A74  6E1A               	movwf	SaveData@dir^0,c
   985   000A76  C02E  F01C         	movff	_Distancia,SaveData@dato
   986   000A7A  ECF4  F008         	call	_SaveData	;wreg free
   987                           
   988                           ;Proyecto.c: 116: TransmitirDatos(Minimo);
   989   000A7E  C02C  F023         	movff	_Minimo,TransmitirDatos@Minimo
   990   000A82  C02D  F024         	movff	_Minimo+1,TransmitirDatos@Minimo+1
   991   000A86  ECD1  F005         	call	_TransmitirDatos	;wreg free
   992                           
   993                           ;Proyecto.c: 118: if (Distancia <= Minimo) {
   994   000A8A  502E               	movf	_Distancia^0,w,c
   995   000A8C  6E29               	movwf	??_main^0,c
   996   000A8E  6A2A               	clrf	(??_main+1)^0,c
   997   000A90  5029               	movf	??_main^0,w,c
   998   000A92  5C2C               	subwf	_Minimo^0,w,c
   999   000A94  502D               	movf	(_Minimo+1)^0,w,c
  1000   000A96  0A80               	xorlw	128
  1001   000A98  6E2B               	movwf	(??_main+2)^0,c
  1002   000A9A  502A               	movf	(??_main+1)^0,w,c
  1003   000A9C  0A80               	xorlw	128
  1004   000A9E  582B               	subwfb	(??_main+2)^0,w,c
  1005   000AA0  A0D8               	btfss	status,0,c
  1006   000AA2  D002               	goto	l2030
  1007                           
  1008                           ;Proyecto.c: 119: CCPR1L = 125;
  1009   000AA4  0E7D               	movlw	125
  1010   000AA6  D001               	goto	L1
  1011   000AA8                     l2030:
  1012                           
  1013                           ;Proyecto.c: 121: CCPR1L = 0;
  1014   000AA8  0E00               	movlw	0
  1015   000AAA                     L1:
  1016   000AAA  6EBE               	movwf	190,c	;volatile
  1017   000AAC  D7C1               	goto	l2008
  1018   000AAE                     __end_of_main:
  1019                           	callstack 0
  1020                           
  1021 ;; *************** function ___lwdiv *****************
  1022 ;; Defined at:
  1023 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1024 ;; Parameters:    Size  Location     Type
  1025 ;;  dividend        2   25[COMRAM] unsigned int 
  1026 ;;  divisor         2   27[COMRAM] unsigned int 
  1027 ;; Auto vars:     Size  Location     Type
  1028 ;;  quotient        2   29[COMRAM] unsigned int 
  1029 ;;  counter         1   31[COMRAM] unsigned char 
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  2   25[COMRAM] unsigned int 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0
  1034 ;; Tracked objects:
  1035 ;;		On entry : 0/0
  1036 ;;		On exit  : 0/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1039 ;;      Params:         4       0       0       0       0       0       0       0       0
  1040 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1041 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1042 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1043 ;;Total ram usage:        7 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 5
  1046 ;; This function calls:
  1047 ;;		Nothing
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           	psect	text1
  1054   000F86                     __ptext1:
  1055                           	callstack 0
  1056   000F86                     ___lwdiv:
  1057                           	callstack 25
  1058                           
  1059                           ;incstack = 0
  1060   000F86  0E00               	movlw	0
  1061   000F88  6E1F               	movwf	(___lwdiv@quotient+1)^0,c
  1062   000F8A  0E00               	movlw	0
  1063   000F8C  6E1E               	movwf	___lwdiv@quotient^0,c
  1064   000F8E  501C               	movf	___lwdiv@divisor^0,w,c
  1065   000F90  101D               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1066   000F92  B4D8               	btfsc	status,2,c
  1067   000F94  D01C               	goto	l720
  1068   000F96  0E01               	movlw	1
  1069   000F98  6E20               	movwf	___lwdiv@counter^0,c
  1070   000F9A  D004               	goto	l1812
  1071   000F9C                     l1810:
  1072   000F9C  90D8               	bcf	status,0,c
  1073   000F9E  361C               	rlcf	___lwdiv@divisor^0,f,c
  1074   000FA0  361D               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1075   000FA2  2A20               	incf	___lwdiv@counter^0,f,c
  1076   000FA4                     l1812:
  1077   000FA4  AE1D               	btfss	(___lwdiv@divisor+1)^0,7,c
  1078   000FA6  D7FA               	goto	l1810
  1079   000FA8                     u630:
  1080   000FA8  90D8               	bcf	status,0,c
  1081   000FAA  361E               	rlcf	___lwdiv@quotient^0,f,c
  1082   000FAC  361F               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1083   000FAE  501C               	movf	___lwdiv@divisor^0,w,c
  1084   000FB0  5C1A               	subwf	___lwdiv@dividend^0,w,c
  1085   000FB2  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  1086   000FB4  581B               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1087   000FB6  A0D8               	btfss	status,0,c
  1088   000FB8  D005               	goto	l1822
  1089   000FBA  501C               	movf	___lwdiv@divisor^0,w,c
  1090   000FBC  5E1A               	subwf	___lwdiv@dividend^0,f,c
  1091   000FBE  501D               	movf	(___lwdiv@divisor+1)^0,w,c
  1092   000FC0  5A1B               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1093   000FC2  801E               	bsf	___lwdiv@quotient^0,0,c
  1094   000FC4                     l1822:
  1095   000FC4  90D8               	bcf	status,0,c
  1096   000FC6  321D               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1097   000FC8  321C               	rrcf	___lwdiv@divisor^0,f,c
  1098   000FCA  2E20               	decfsz	___lwdiv@counter^0,f,c
  1099   000FCC  D7ED               	goto	u630
  1100   000FCE                     l720:
  1101   000FCE  C01E  F01A         	movff	___lwdiv@quotient,?___lwdiv
  1102   000FD2  C01F  F01B         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1103   000FD6  0012               	return		;funcret
  1104   000FD8                     __end_of___lwdiv:
  1105                           	callstack 0
  1106                           
  1107 ;; *************** function _TransmitirDatos *****************
  1108 ;; Defined at:
  1109 ;;		line 165 in file "Proyecto.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  Minimo          2   34[COMRAM] unsigned int 
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  MinC            2   36[COMRAM] unsigned int 
  1114 ;;  DistC           2    0        unsigned int 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1124 ;;      Params:         2       0       0       0       0       0       0       0       0
  1125 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1127 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1128 ;;Total ram usage:        4 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; Hardware stack levels required when called: 9
  1131 ;; This function calls:
  1132 ;;		_DireccionaLCD
  1133 ;;		_EscribeLCD_c
  1134 ;;		_MensajeLCD_Var
  1135 ;;		_Transmitir
  1136 ;;		___lbdiv
  1137 ;;		___lbmod
  1138 ;; This function is called by:
  1139 ;;		_main
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text2
  1144   000BA2                     __ptext2:
  1145                           	callstack 0
  1146   000BA2                     _TransmitirDatos:
  1147                           	callstack 21
  1148                           
  1149                           ;incstack = 0
  1150   000BA2  C023  F025         	movff	TransmitirDatos@Minimo,TransmitirDatos@MinC
  1151   000BA6  C024  F026         	movff	TransmitirDatos@Minimo+1,TransmitirDatos@MinC+1
  1152                           
  1153                           ;Proyecto.c: 167: Transmitir('D');
  1154   000BAA  0E44               	movlw	68
  1155   000BAC  EC9D  F009         	call	_Transmitir
  1156                           
  1157                           ;Proyecto.c: 168: Transmitir('i');
  1158   000BB0  0E69               	movlw	105
  1159   000BB2  EC9D  F009         	call	_Transmitir
  1160                           
  1161                           ;Proyecto.c: 169: Transmitir('s');
  1162   000BB6  0E73               	movlw	115
  1163   000BB8  EC9D  F009         	call	_Transmitir
  1164                           
  1165                           ;Proyecto.c: 170: Transmitir('t');
  1166   000BBC  0E74               	movlw	116
  1167   000BBE  EC9D  F009         	call	_Transmitir
  1168                           
  1169                           ;Proyecto.c: 171: Transmitir('a');
  1170   000BC2  0E61               	movlw	97
  1171   000BC4  EC9D  F009         	call	_Transmitir
  1172                           
  1173                           ;Proyecto.c: 172: Transmitir('n');
  1174   000BC8  0E6E               	movlw	110
  1175   000BCA  EC9D  F009         	call	_Transmitir
  1176                           
  1177                           ;Proyecto.c: 173: Transmitir('c');
  1178   000BCE  0E63               	movlw	99
  1179   000BD0  EC9D  F009         	call	_Transmitir
  1180                           
  1181                           ;Proyecto.c: 174: Transmitir('i');
  1182   000BD4  0E69               	movlw	105
  1183   000BD6  EC9D  F009         	call	_Transmitir
  1184                           
  1185                           ;Proyecto.c: 175: Transmitir('a');
  1186   000BDA  0E61               	movlw	97
  1187   000BDC  EC9D  F009         	call	_Transmitir
  1188                           
  1189                           ;Proyecto.c: 176: Transmitir(':');
  1190   000BE0  0E3A               	movlw	58
  1191   000BE2  EC9D  F009         	call	_Transmitir
  1192                           
  1193                           ;Proyecto.c: 177: Transmitir(' ');
  1194   000BE6  0E20               	movlw	32
  1195   000BE8  EC9D  F009         	call	_Transmitir
  1196                           
  1197                           ;Proyecto.c: 179: Transmitir(Distancia / 100 + 48);
  1198   000BEC  0E64               	movlw	100
  1199   000BEE  6E1E               	movwf	___lbdiv@divisor^0,c
  1200   000BF0  502E               	movf	_Distancia^0,w,c
  1201   000BF2  EC84  F008         	call	___lbdiv
  1202   000BF6  0F30               	addlw	48
  1203   000BF8  EC9D  F009         	call	_Transmitir
  1204                           
  1205                           ;Proyecto.c: 180: Transmitir((Distancia % 100) / 10 + 48);
  1206   000BFC  0E0A               	movlw	10
  1207   000BFE  6E1E               	movwf	___lbdiv@divisor^0,c
  1208   000C00  0E64               	movlw	100
  1209   000C02  6E1A               	movwf	___lbmod@divisor^0,c
  1210   000C04  502E               	movf	_Distancia^0,w,c
  1211   000C06  ECB7  F008         	call	___lbmod
  1212   000C0A  EC84  F008         	call	___lbdiv
  1213   000C0E  0F30               	addlw	48
  1214   000C10  EC9D  F009         	call	_Transmitir
  1215                           
  1216                           ;Proyecto.c: 181: Transmitir(Distancia % 10 + 48);
  1217   000C14  0E0A               	movlw	10
  1218   000C16  6E1A               	movwf	___lbmod@divisor^0,c
  1219   000C18  502E               	movf	_Distancia^0,w,c
  1220   000C1A  ECB7  F008         	call	___lbmod
  1221   000C1E  0F30               	addlw	48
  1222   000C20  EC9D  F009         	call	_Transmitir
  1223                           
  1224                           ;Proyecto.c: 182: Transmitir('c');
  1225   000C24  0E63               	movlw	99
  1226   000C26  EC9D  F009         	call	_Transmitir
  1227                           
  1228                           ;Proyecto.c: 183: Transmitir('m');
  1229   000C2A  0E6D               	movlw	109
  1230   000C2C  EC9D  F009         	call	_Transmitir
  1231                           
  1232                           ;Proyecto.c: 184: Transmitir(' ');
  1233   000C30  0E20               	movlw	32
  1234   000C32  EC9D  F009         	call	_Transmitir
  1235                           
  1236                           ;Proyecto.c: 185: Transmitir('\n');
  1237   000C36  0E0A               	movlw	10
  1238   000C38  EC9D  F009         	call	_Transmitir
  1239                           
  1240                           ;Proyecto.c: 187: DireccionaLCD(0xC7);
  1241   000C3C  0EC7               	movlw	199
  1242   000C3E  EC39  F009         	call	_DireccionaLCD
  1243                           
  1244                           ;Proyecto.c: 188: EscribeLCD_c(Distancia / 100 + 48);
  1245   000C42  0E64               	movlw	100
  1246   000C44  6E1E               	movwf	___lbdiv@divisor^0,c
  1247   000C46  502E               	movf	_Distancia^0,w,c
  1248   000C48  EC84  F008         	call	___lbdiv
  1249   000C4C  0F30               	addlw	48
  1250   000C4E  EC4F  F009         	call	_EscribeLCD_c
  1251                           
  1252                           ;Proyecto.c: 189: EscribeLCD_c((Distancia % 100) / 10 + 48);
  1253   000C52  0E0A               	movlw	10
  1254   000C54  6E1E               	movwf	___lbdiv@divisor^0,c
  1255   000C56  0E64               	movlw	100
  1256   000C58  6E1A               	movwf	___lbmod@divisor^0,c
  1257   000C5A  502E               	movf	_Distancia^0,w,c
  1258   000C5C  ECB7  F008         	call	___lbmod
  1259   000C60  EC84  F008         	call	___lbdiv
  1260   000C64  0F30               	addlw	48
  1261   000C66  EC4F  F009         	call	_EscribeLCD_c
  1262                           
  1263                           ;Proyecto.c: 190: EscribeLCD_c(Distancia % 10 + 48);
  1264   000C6A  0E0A               	movlw	10
  1265   000C6C  6E1A               	movwf	___lbmod@divisor^0,c
  1266   000C6E  502E               	movf	_Distancia^0,w,c
  1267   000C70  ECB7  F008         	call	___lbmod
  1268   000C74  0F30               	addlw	48
  1269   000C76  EC4F  F009         	call	_EscribeLCD_c
  1270                           
  1271                           ;Proyecto.c: 191: MensajeLCD_Var("cm");
  1272   000C7A  0E8C               	movlw	low STR_7
  1273   000C7C  6E1F               	movwf	MensajeLCD_Var@a^0,c
  1274   000C7E  ECEC  F007         	call	_MensajeLCD_Var	;wreg free
  1275                           
  1276                           ;Proyecto.c: 192: EscribeLCD_c(' ');
  1277   000C82  0E20               	movlw	32
  1278   000C84  EC4F  F009         	call	_EscribeLCD_c
  1279   000C88  0012               	return		;funcret
  1280   000C8A                     __end_of_TransmitirDatos:
  1281                           	callstack 0
  1282                           
  1283 ;; *************** function ___lbmod *****************
  1284 ;; Defined at:
  1285 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;  dividend        1    wreg     unsigned char 
  1288 ;;  divisor         1   25[COMRAM] unsigned char 
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;  dividend        1   26[COMRAM] unsigned char 
  1291 ;;  rem             1   28[COMRAM] unsigned char 
  1292 ;;  counter         1   27[COMRAM] unsigned char 
  1293 ;; Return value:  Size  Location     Type
  1294 ;;                  1    wreg      unsigned char 
  1295 ;; Registers used:
  1296 ;;		wreg, status,2, status,0
  1297 ;; Tracked objects:
  1298 ;;		On entry : 0/0
  1299 ;;		On exit  : 0/0
  1300 ;;		Unchanged: 0/0
  1301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1302 ;;      Params:         1       0       0       0       0       0       0       0       0
  1303 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1304 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1305 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1306 ;;Total ram usage:        4 bytes
  1307 ;; Hardware stack levels used: 1
  1308 ;; Hardware stack levels required when called: 5
  1309 ;; This function calls:
  1310 ;;		Nothing
  1311 ;; This function is called by:
  1312 ;;		_TransmitirDatos
  1313 ;; This function uses a non-reentrant model
  1314 ;;
  1315                           
  1316                           	psect	text3
  1317   00116E                     __ptext3:
  1318                           	callstack 0
  1319   00116E                     ___lbmod:
  1320                           	callstack 24
  1321                           
  1322                           ;incstack = 0
  1323                           ;___lbmod@dividend stored from wreg
  1324   00116E  6E1B               	movwf	___lbmod@dividend^0,c
  1325   001170  0E08               	movlw	8
  1326   001172  6E1C               	movwf	___lbmod@counter^0,c
  1327   001174  0E00               	movlw	0
  1328   001176  6E1D               	movwf	___lbmod@rem^0,c
  1329   001178                     l1686:
  1330   001178  90D8               	bcf	status,0,c
  1331   00117A  341B               	rlcf	___lbmod@dividend^0,w,c
  1332   00117C  341D               	rlcf	___lbmod@rem^0,w,c
  1333   00117E  6E1D               	movwf	___lbmod@rem^0,c
  1334   001180  90D8               	bcf	status,0,c
  1335   001182  361B               	rlcf	___lbmod@dividend^0,f,c
  1336   001184  501A               	movf	___lbmod@divisor^0,w,c
  1337   001186  5C1D               	subwf	___lbmod@rem^0,w,c
  1338   001188  A0D8               	btfss	status,0,c
  1339   00118A  D002               	goto	l1694
  1340   00118C  501A               	movf	___lbmod@divisor^0,w,c
  1341   00118E  5E1D               	subwf	___lbmod@rem^0,f,c
  1342   001190                     l1694:
  1343   001190  2E1C               	decfsz	___lbmod@counter^0,f,c
  1344   001192  D7F2               	goto	l1686
  1345   001194  501D               	movf	___lbmod@rem^0,w,c
  1346   001196  0012               	return		;funcret
  1347   001198                     __end_of___lbmod:
  1348                           	callstack 0
  1349                           
  1350 ;; *************** function ___lbdiv *****************
  1351 ;; Defined at:
  1352 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  dividend        1    wreg     unsigned char 
  1355 ;;  divisor         1   29[COMRAM] unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  dividend        1   30[COMRAM] unsigned char 
  1358 ;;  quotient        1   32[COMRAM] unsigned char 
  1359 ;;  counter         1   31[COMRAM] unsigned char 
  1360 ;; Return value:  Size  Location     Type
  1361 ;;                  1    wreg      unsigned char 
  1362 ;; Registers used:
  1363 ;;		wreg, status,2, status,0
  1364 ;; Tracked objects:
  1365 ;;		On entry : 0/0
  1366 ;;		On exit  : 0/0
  1367 ;;		Unchanged: 0/0
  1368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1369 ;;      Params:         1       0       0       0       0       0       0       0       0
  1370 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1371 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1372 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1373 ;;Total ram usage:        4 bytes
  1374 ;; Hardware stack levels used: 1
  1375 ;; Hardware stack levels required when called: 5
  1376 ;; This function calls:
  1377 ;;		Nothing
  1378 ;; This function is called by:
  1379 ;;		_TransmitirDatos
  1380 ;; This function uses a non-reentrant model
  1381 ;;
  1382                           
  1383                           	psect	text4
  1384   001108                     __ptext4:
  1385                           	callstack 0
  1386   001108                     ___lbdiv:
  1387                           	callstack 24
  1388                           
  1389                           ;incstack = 0
  1390                           ;___lbdiv@dividend stored from wreg
  1391   001108  6E1F               	movwf	___lbdiv@dividend^0,c
  1392   00110A  0E00               	movlw	0
  1393   00110C  6E21               	movwf	___lbdiv@quotient^0,c
  1394   00110E  501E               	movf	___lbdiv@divisor^0,w,c
  1395   001110  B4D8               	btfsc	status,2,c
  1396   001112  D015               	goto	l1680
  1397   001114  0E01               	movlw	1
  1398   001116  6E20               	movwf	___lbdiv@counter^0,c
  1399   001118  D003               	goto	l1668
  1400   00111A                     l1664:
  1401   00111A  90D8               	bcf	status,0,c
  1402   00111C  361E               	rlcf	___lbdiv@divisor^0,f,c
  1403   00111E  2A20               	incf	___lbdiv@counter^0,f,c
  1404   001120                     l1668:
  1405   001120  AE1E               	btfss	___lbdiv@divisor^0,7,c
  1406   001122  D7FB               	goto	l1664
  1407   001124                     u510:
  1408   001124  90D8               	bcf	status,0,c
  1409   001126  3621               	rlcf	___lbdiv@quotient^0,f,c
  1410   001128  501E               	movf	___lbdiv@divisor^0,w,c
  1411   00112A  5C1F               	subwf	___lbdiv@dividend^0,w,c
  1412   00112C  A0D8               	btfss	status,0,c
  1413   00112E  D003               	goto	l1676
  1414   001130  501E               	movf	___lbdiv@divisor^0,w,c
  1415   001132  5E1F               	subwf	___lbdiv@dividend^0,f,c
  1416   001134  8021               	bsf	___lbdiv@quotient^0,0,c
  1417   001136                     l1676:
  1418   001136  90D8               	bcf	status,0,c
  1419   001138  321E               	rrcf	___lbdiv@divisor^0,f,c
  1420   00113A  2E20               	decfsz	___lbdiv@counter^0,f,c
  1421   00113C  D7F3               	goto	u510
  1422   00113E                     l1680:
  1423   00113E  5021               	movf	___lbdiv@quotient^0,w,c
  1424   001140  0012               	return		;funcret
  1425   001142                     __end_of___lbdiv:
  1426                           	callstack 0
  1427                           
  1428 ;; *************** function _Transmitir *****************
  1429 ;; Defined at:
  1430 ;;		line 126 in file "Proyecto.c"
  1431 ;; Parameters:    Size  Location     Type
  1432 ;;  BufferT         1    wreg     unsigned char 
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  BufferT         1   25[COMRAM] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1444 ;;      Params:         0       0       0       0       0       0       0       0       0
  1445 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1447 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1448 ;;Total ram usage:        1 bytes
  1449 ;; Hardware stack levels used: 1
  1450 ;; Hardware stack levels required when called: 5
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_TransmitirDatos
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text5
  1459   00133A                     __ptext5:
  1460                           	callstack 0
  1461   00133A                     _Transmitir:
  1462                           	callstack 24
  1463                           
  1464                           ;incstack = 0
  1465                           ;Transmitir@BufferT stored from wreg
  1466   00133A  6E1A               	movwf	Transmitir@BufferT^0,c
  1467   00133C                     
  1468                           ;Proyecto.c: 127: while (TRMT == 0);
  1469   00133C  A2AC               	btfss	4012,1,c	;volatile
  1470   00133E  D7FE               	goto	l1106
  1471                           
  1472                           ;Proyecto.c: 128: TXREG = BufferT;
  1473   001340  C01A  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1474   001344  0012               	return		;funcret
  1475   001346                     __end_of_Transmitir:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _MensajeLCD_Var *****************
  1479 ;; Defined at:
  1480 ;;		line 215 in file "LibLCDXC8.h"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  a               1   30[COMRAM] PTR unsigned char 
  1483 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  1484 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  1485 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  1486 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1487 ;; Auto vars:     Size  Location     Type
  1488 ;;  i               2   32[COMRAM] int 
  1489 ;; Return value:  Size  Location     Type
  1490 ;;                  1    wreg      void 
  1491 ;; Registers used:
  1492 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1493 ;; Tracked objects:
  1494 ;;		On entry : 0/0
  1495 ;;		On exit  : 0/0
  1496 ;;		Unchanged: 0/0
  1497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1498 ;;      Params:         1       0       0       0       0       0       0       0       0
  1499 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1500 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1501 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1502 ;;Total ram usage:        4 bytes
  1503 ;; Hardware stack levels used: 1
  1504 ;; Hardware stack levels required when called: 8
  1505 ;; This function calls:
  1506 ;;		_EscribeLCD_c
  1507 ;;		_strlen
  1508 ;; This function is called by:
  1509 ;;		_main
  1510 ;;		_TransmitirDatos
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text6
  1515   000FD8                     __ptext6:
  1516                           	callstack 0
  1517   000FD8                     _MensajeLCD_Var:
  1518                           	callstack 21
  1519                           
  1520                           ;LibLCDXC8.h: 219: for(int i = 0; i<strlen(a); i++){
  1521                           
  1522                           ;incstack = 0
  1523   000FD8  0E00               	movlw	0
  1524   000FDA  6E22               	movwf	(MensajeLCD_Var@i+1)^0,c
  1525   000FDC  0E00               	movlw	0
  1526   000FDE  6E21               	movwf	MensajeLCD_Var@i^0,c
  1527   000FE0  D019               	goto	l1646
  1528   000FE2                     l1638:
  1529                           
  1530                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  1531   000FE2  501F               	movf	MensajeLCD_Var@a^0,w,c
  1532   000FE4  2421               	addwf	MensajeLCD_Var@i^0,w,c
  1533   000FE6  6E20               	movwf	??_MensajeLCD_Var^0,c
  1534   000FE8  C020  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1535   000FEC                     	if	1	;There is more than 1 active tblptr byte
  1536   000FEC  0E08               	movlw	high __smallconst
  1537   000FEE  6EF7               	movwf	tblptrh,c
  1538   000FF0                     	endif
  1539   000FF0                     	if	0	;tblptru may be non-zero
  1540   000FF0                     	endif
  1541   000FF0                     	if	0	;tblptru may be non-zero
  1542   000FF0                     	endif
  1543   000FF0  0008               	tblrd		*
  1544   000FF2  50F5               	movf	tablat,w,c
  1545   000FF4  0900               	iorlw	0
  1546   000FF6  B4D8               	btfsc	status,2,c
  1547   000FF8  0012               	return	
  1548                           
  1549                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  1550   000FFA  501F               	movf	MensajeLCD_Var@a^0,w,c
  1551   000FFC  2421               	addwf	MensajeLCD_Var@i^0,w,c
  1552   000FFE  6E20               	movwf	??_MensajeLCD_Var^0,c
  1553   001000  C020  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1554   001004                     	if	1	;There is more than 1 active tblptr byte
  1555   001004  0E08               	movlw	high __smallconst
  1556   001006  6EF7               	movwf	tblptrh,c
  1557   001008                     	endif
  1558   001008                     	if	0	;tblptru may be non-zero
  1559   001008                     	endif
  1560   001008                     	if	0	;tblptru may be non-zero
  1561   001008                     	endif
  1562   001008  0008               	tblrd		*
  1563   00100A  50F5               	movf	tablat,w,c
  1564   00100C  EC4F  F009         	call	_EscribeLCD_c
  1565   001010  4A21               	infsnz	MensajeLCD_Var@i^0,f,c
  1566   001012  2A22               	incf	(MensajeLCD_Var@i+1)^0,f,c
  1567   001014                     l1646:
  1568   001014  C01F  F01A         	movff	MensajeLCD_Var@a,strlen@s
  1569   001018  ECCC  F008         	call	_strlen	;wreg free
  1570   00101C  501A               	movf	?_strlen^0,w,c
  1571   00101E  5C21               	subwf	MensajeLCD_Var@i^0,w,c
  1572   001020  501B               	movf	(?_strlen+1)^0,w,c
  1573   001022  5822               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  1574   001024  B0D8               	btfsc	status,0,c
  1575   001026  0012               	return	
  1576   001028  D7DC               	goto	l1638
  1577   00102A                     __end_of_MensajeLCD_Var:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _strlen *****************
  1581 ;; Defined at:
  1582 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  s               1   25[COMRAM] PTR const unsigned char 
  1585 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  1586 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  1587 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  1588 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  cp              1   27[COMRAM] PTR const unsigned char 
  1591 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  1592 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  1593 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  1594 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  2   25[COMRAM] unsigned int 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1604 ;;      Params:         2       0       0       0       0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1607 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1608 ;;Total ram usage:        3 bytes
  1609 ;; Hardware stack levels used: 1
  1610 ;; Hardware stack levels required when called: 5
  1611 ;; This function calls:
  1612 ;;		Nothing
  1613 ;; This function is called by:
  1614 ;;		_MensajeLCD_Var
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           	psect	text7
  1619   001198                     __ptext7:
  1620                           	callstack 0
  1621   001198                     _strlen:
  1622                           	callstack 23
  1623                           
  1624                           ;incstack = 0
  1625   001198  C01A  F01C         	movff	strlen@s,strlen@cp
  1626   00119C  D001               	goto	l1616
  1627   00119E                     l1614:
  1628   00119E  2A1C               	incf	strlen@cp^0,f,c
  1629   0011A0                     l1616:
  1630   0011A0  C01C  FFF6         	movff	strlen@cp,tblptrl
  1631   0011A4                     	if	1	;There is more than 1 active tblptr byte
  1632   0011A4  0E08               	movlw	high __smallconst
  1633   0011A6  6EF7               	movwf	tblptrh,c
  1634   0011A8                     	endif
  1635   0011A8                     	if	0	;tblptru may be non-zero
  1636   0011A8                     	endif
  1637   0011A8                     	if	0	;tblptru may be non-zero
  1638   0011A8                     	endif
  1639   0011A8  0008               	tblrd		*
  1640   0011AA  50F5               	movf	tablat,w,c
  1641   0011AC  0900               	iorlw	0
  1642   0011AE  A4D8               	btfss	status,2,c
  1643   0011B0  D7F6               	goto	l1614
  1644   0011B2  501A               	movf	strlen@s^0,w,c
  1645   0011B4  5C1C               	subwf	strlen@cp^0,w,c
  1646   0011B6  6E1A               	movwf	?_strlen^0,c
  1647   0011B8  6A1B               	clrf	(?_strlen+1)^0,c
  1648   0011BA  BE1A               	btfsc	?_strlen^0,7,c
  1649   0011BC  061B               	decf	(?_strlen+1)^0,f,c
  1650   0011BE  0012               	return		;funcret
  1651   0011C0                     __end_of_strlen:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _DireccionaLCD *****************
  1655 ;; Defined at:
  1656 ;;		line 227 in file "LibLCDXC8.h"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  a               1    wreg     unsigned char 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  a               1   29[COMRAM] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  1    wreg      void 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1670 ;;      Params:         0       0       0       0       0       0       0       0       0
  1671 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1673 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1674 ;;Total ram usage:        1 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; Hardware stack levels required when called: 7
  1677 ;; This function calls:
  1678 ;;		_EnviaDato
  1679 ;;		_HabilitaLCD
  1680 ;;		_RetardoLCD
  1681 ;; This function is called by:
  1682 ;;		_main
  1683 ;;		_TransmitirDatos
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           	psect	text8
  1688   001272                     __ptext8:
  1689                           	callstack 0
  1690   001272                     _DireccionaLCD:
  1691                           	callstack 22
  1692                           
  1693                           ;incstack = 0
  1694                           ;DireccionaLCD@a stored from wreg
  1695   001272  6E1E               	movwf	DireccionaLCD@a^0,c
  1696                           
  1697                           ;LibLCDXC8.h: 230: LATD2=0;
  1698   001274  948C               	bcf	3980,2,c	;volatile
  1699                           
  1700                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1701   001276  501E               	movf	DireccionaLCD@a^0,w,c
  1702   001278  EC3E  F008         	call	_EnviaDato
  1703                           
  1704                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1705   00127C  EC8F  F009         	call	_HabilitaLCD	;wreg free
  1706                           
  1707                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1708   001280  0E04               	movlw	4
  1709   001282  EC5D  F007         	call	_RetardoLCD
  1710   001286  0012               	return		;funcret
  1711   001288                     __end_of_DireccionaLCD:
  1712                           	callstack 0
  1713                           
  1714 ;; *************** function _SaveData *****************
  1715 ;; Defined at:
  1716 ;;		line 195 in file "Proyecto.c"
  1717 ;; Parameters:    Size  Location     Type
  1718 ;;  dir             2   25[COMRAM] unsigned int 
  1719 ;;  dato            1   27[COMRAM] unsigned char 
  1720 ;; Auto vars:     Size  Location     Type
  1721 ;;		None
  1722 ;; Return value:  Size  Location     Type
  1723 ;;                  1    wreg      void 
  1724 ;; Registers used:
  1725 ;;		wreg, status,2
  1726 ;; Tracked objects:
  1727 ;;		On entry : 0/0
  1728 ;;		On exit  : 0/0
  1729 ;;		Unchanged: 0/0
  1730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1731 ;;      Params:         3       0       0       0       0       0       0       0       0
  1732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1734 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1735 ;;Total ram usage:        3 bytes
  1736 ;; Hardware stack levels used: 1
  1737 ;; Hardware stack levels required when called: 5
  1738 ;; This function calls:
  1739 ;;		Nothing
  1740 ;; This function is called by:
  1741 ;;		_main
  1742 ;; This function uses a non-reentrant model
  1743 ;;
  1744                           
  1745                           	psect	text9
  1746   0011E8                     __ptext9:
  1747                           	callstack 0
  1748   0011E8                     _SaveData:
  1749                           	callstack 25
  1750                           
  1751                           ;Proyecto.c: 196: EEADR = dir;
  1752                           
  1753                           ;incstack = 0
  1754   0011E8  C01A  FFA9         	movff	SaveData@dir,4009	;volatile
  1755                           
  1756                           ;Proyecto.c: 197: EEDATA = dato;
  1757   0011EC  C01C  FFA8         	movff	SaveData@dato,4008	;volatile
  1758                           
  1759                           ;Proyecto.c: 199: EEPGD = 0;
  1760   0011F0  9EA6               	bcf	4006,7,c	;volsfr
  1761                           
  1762                           ;Proyecto.c: 200: CFGS = 0;
  1763   0011F2  9CA6               	bcf	4006,6,c	;volsfr
  1764                           
  1765                           ;Proyecto.c: 201: WREN = 1;
  1766   0011F4  84A6               	bsf	4006,2,c	;volsfr
  1767                           
  1768                           ;Proyecto.c: 203: GIE = 0;
  1769   0011F6  9EF2               	bcf	4082,7,c	;volatile
  1770                           
  1771                           ;Proyecto.c: 205: EECON2 = 0x55;
  1772   0011F8  0E55               	movlw	85
  1773   0011FA  6EA7               	movwf	167,c	;volsfr
  1774                           
  1775                           ;Proyecto.c: 206: EECON2 = 0xAA;
  1776   0011FC  0EAA               	movlw	170
  1777   0011FE  6EA7               	movwf	167,c	;volsfr
  1778                           
  1779                           ;Proyecto.c: 207: WR = 1;
  1780   001200  82A6               	bsf	4006,1,c	;volsfr
  1781                           
  1782                           ;Proyecto.c: 208: GIE = 1;
  1783   001202  8EF2               	bsf	4082,7,c	;volatile
  1784   001204                     l225:
  1785   001204  A8A1               	btfss	4001,4,c	;volatile
  1786   001206  D7FE               	goto	l225
  1787                           
  1788                           ;Proyecto.c: 210: EEIF = 0;
  1789   001208  98A1               	bcf	4001,4,c	;volatile
  1790                           
  1791                           ;Proyecto.c: 211: WREN = 0;
  1792   00120A  94A6               	bcf	4006,2,c	;volsfr
  1793   00120C  0012               	return		;funcret
  1794   00120E                     __end_of_SaveData:
  1795                           	callstack 0
  1796                           
  1797 ;; *************** function _Recibir_Cadena *****************
  1798 ;; Defined at:
  1799 ;;		line 141 in file "Proyecto.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  Buffer          1   31[COMRAM] PTR unsigned char 
  1802 ;;		 -> Minimo_Consola(10), 
  1803 ;;  tamano          2   32[COMRAM] unsigned int 
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;  i               2   38[COMRAM] int 
  1806 ;;  valor           2   36[COMRAM] int 
  1807 ;;  cont_buf        2    0        unsigned int 
  1808 ;;  c               1   35[COMRAM] unsigned char 
  1809 ;; Return value:  Size  Location     Type
  1810 ;;                  1    wreg      void 
  1811 ;; Registers used:
  1812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1813 ;; Tracked objects:
  1814 ;;		On entry : 0/0
  1815 ;;		On exit  : 0/0
  1816 ;;		Unchanged: 0/0
  1817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1818 ;;      Params:         3       0       0       0       0       0       0       0       0
  1819 ;;      Locals:         5       0       0       0       0       0       0       0       0
  1820 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1821 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1822 ;;Total ram usage:        9 bytes
  1823 ;; Hardware stack levels used: 1
  1824 ;; Hardware stack levels required when called: 8
  1825 ;; This function calls:
  1826 ;;		_EscribeLCD_c
  1827 ;;		_Recibir
  1828 ;;		___wmul
  1829 ;; This function is called by:
  1830 ;;		_main
  1831 ;; This function uses a non-reentrant model
  1832 ;;
  1833                           
  1834                           	psect	text10
  1835   000C8A                     __ptext10:
  1836                           	callstack 0
  1837   000C8A                     _Recibir_Cadena:
  1838                           	callstack 22
  1839                           
  1840                           ;Proyecto.c: 143: char c;;Proyecto.c: 144: int valor = 0;
  1841                           
  1842                           ;incstack = 0
  1843   000C8A  0E00               	movlw	0
  1844   000C8C  6E26               	movwf	(Recibir_Cadena@valor+1)^0,c
  1845   000C8E  0E00               	movlw	0
  1846   000C90  6E25               	movwf	Recibir_Cadena@valor^0,c
  1847                           
  1848                           ;Proyecto.c: 145: Minimo = 0;
  1849   000C92  0E00               	movlw	0
  1850   000C94  6E2D               	movwf	(_Minimo+1)^0,c
  1851   000C96  0E00               	movlw	0
  1852   000C98  6E2C               	movwf	_Minimo^0,c
  1853                           
  1854                           ;Proyecto.c: 146: for (int i = 0; i < 3; i++) {
  1855   000C9A  0E00               	movlw	0
  1856   000C9C  6E28               	movwf	(Recibir_Cadena@i+1)^0,c
  1857   000C9E  0E00               	movlw	0
  1858   000CA0  6E27               	movwf	Recibir_Cadena@i^0,c
  1859   000CA2                     l1734:
  1860                           
  1861                           ;Proyecto.c: 147: c = Recibir();
  1862   000CA2  EC44  F009         	call	_Recibir	;wreg free
  1863   000CA6  501A               	movf	?_Recibir^0,w,c
  1864   000CA8  6E24               	movwf	Recibir_Cadena@c^0,c
  1865                           
  1866                           ;Proyecto.c: 148: Buffer[i] = c;
  1867   000CAA  5020               	movf	Recibir_Cadena@Buffer^0,w,c
  1868   000CAC  2427               	addwf	Recibir_Cadena@i^0,w,c
  1869   000CAE  6ED9               	movwf	fsr2l,c
  1870   000CB0  6ADA               	clrf	fsr2h,c
  1871   000CB2  C024  FFDF         	movff	Recibir_Cadena@c,indf2
  1872                           
  1873                           ;Proyecto.c: 149: valor = Buffer[i] - 48;
  1874   000CB6  5020               	movf	Recibir_Cadena@Buffer^0,w,c
  1875   000CB8  2427               	addwf	Recibir_Cadena@i^0,w,c
  1876   000CBA  6ED9               	movwf	fsr2l,c
  1877   000CBC  6ADA               	clrf	fsr2h,c
  1878   000CBE  50DF               	movf	indf2,w,c
  1879   000CC0  6E23               	movwf	??_Recibir_Cadena^0,c
  1880   000CC2  0ED0               	movlw	208
  1881   000CC4  2423               	addwf	??_Recibir_Cadena^0,w,c
  1882   000CC6  6E25               	movwf	Recibir_Cadena@valor^0,c
  1883   000CC8  6A26               	clrf	(Recibir_Cadena@valor+1)^0,c
  1884   000CCA  0EFF               	movlw	255
  1885   000CCC  2226               	addwfc	(Recibir_Cadena@valor+1)^0,f,c
  1886                           
  1887                           ;Proyecto.c: 150: EscribeLCD_c(c);
  1888   000CCE  5024               	movf	Recibir_Cadena@c^0,w,c
  1889   000CD0  EC4F  F009         	call	_EscribeLCD_c
  1890                           
  1891                           ;Proyecto.c: 151: if (i == 0) {
  1892   000CD4  5027               	movf	Recibir_Cadena@i^0,w,c
  1893   000CD6  1028               	iorwf	(Recibir_Cadena@i+1)^0,w,c
  1894   000CD8  A4D8               	btfss	status,2,c
  1895   000CDA  D015               	goto	l1748
  1896                           
  1897                           ;Proyecto.c: 152: valor = valor * 100;
  1898   000CDC  C025  F01A         	movff	Recibir_Cadena@valor,___wmul@multiplier
  1899   000CE0  C026  F01B         	movff	Recibir_Cadena@valor+1,___wmul@multiplier+1
  1900   000CE4  0E00               	movlw	0
  1901   000CE6  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1902   000CE8  0E64               	movlw	100
  1903   000CEA  6E1C               	movwf	___wmul@multiplicand^0,c
  1904   000CEC  EC07  F009         	call	___wmul	;wreg free
  1905   000CF0  C01A  F025         	movff	?___wmul,Recibir_Cadena@valor
  1906   000CF4  C01B  F026         	movff	?___wmul+1,Recibir_Cadena@valor+1
  1907   000CF8                     l1746:
  1908                           
  1909                           ;Proyecto.c: 153: Minimo = Minimo + valor;
  1910   000CF8  5025               	movf	Recibir_Cadena@valor^0,w,c
  1911   000CFA  242C               	addwf	_Minimo^0,w,c
  1912   000CFC  6E2C               	movwf	_Minimo^0,c
  1913   000CFE  5026               	movf	(Recibir_Cadena@valor+1)^0,w,c
  1914   000D00  202D               	addwfc	(_Minimo+1)^0,w,c
  1915   000D02  6E2D               	movwf	(_Minimo+1)^0,c
  1916                           
  1917                           ;Proyecto.c: 154: } else if (i == 1) {
  1918   000D04  D014               	goto	l1758
  1919   000D06                     l1748:
  1920   000D06  0427               	decf	Recibir_Cadena@i^0,w,c
  1921   000D08  1028               	iorwf	(Recibir_Cadena@i+1)^0,w,c
  1922   000D0A  A4D8               	btfss	status,2,c
  1923   000D0C  D00B               	goto	l1754
  1924                           
  1925                           ;Proyecto.c: 155: valor = valor * 10;
  1926   000D0E  C025  F01A         	movff	Recibir_Cadena@valor,___wmul@multiplier
  1927   000D12  C026  F01B         	movff	Recibir_Cadena@valor+1,___wmul@multiplier+1
  1928   000D16  0E00               	movlw	0
  1929   000D18  6E1D               	movwf	(___wmul@multiplicand+1)^0,c
  1930   000D1A  0E0A               	movlw	10
  1931   000D1C  6E1C               	movwf	___wmul@multiplicand^0,c
  1932   000D1E  EC07  F009         	call	___wmul	;wreg free
  1933   000D22  D7E6               	goto	L2
  1934   000D24                     l1754:
  1935   000D24  0E02               	movlw	2
  1936   000D26  1827               	xorwf	Recibir_Cadena@i^0,w,c
  1937   000D28  1028               	iorwf	(Recibir_Cadena@i+1)^0,w,c
  1938   000D2A  B4D8               	btfsc	status,2,c
  1939   000D2C  D7E5               	goto	l1746
  1940   000D2E                     l1758:
  1941   000D2E  4A27               	infsnz	Recibir_Cadena@i^0,f,c
  1942   000D30  2A28               	incf	(Recibir_Cadena@i+1)^0,f,c
  1943   000D32  BE28               	btfsc	(Recibir_Cadena@i+1)^0,7,c
  1944   000D34  D7B6               	goto	l1734
  1945   000D36  5028               	movf	(Recibir_Cadena@i+1)^0,w,c
  1946   000D38  E104               	bnz	u600
  1947   000D3A  0E03               	movlw	3
  1948   000D3C  5C27               	subwf	Recibir_Cadena@i^0,w,c
  1949   000D3E  A0D8               	btfss	status,0,c
  1950   000D40  D7B0               	goto	l1734
  1951   000D42                     u600:
  1952                           
  1953                           ;Proyecto.c: 159: };Proyecto.c: 160: };Proyecto.c: 161: Buffer[tamano - 2] = '\0';
  1954   000D42  5020               	movf	Recibir_Cadena@Buffer^0,w,c
  1955   000D44  2421               	addwf	Recibir_Cadena@tamano^0,w,c
  1956   000D46  6ED9               	movwf	fsr2l,c
  1957   000D48  6ADA               	clrf	fsr2h,c
  1958   000D4A  0EFE               	movlw	254
  1959   000D4C  26D9               	addwf	fsr2l,f,c
  1960   000D4E  0E00               	movlw	0
  1961   000D50  6EDF               	movwf	indf2,c
  1962   000D52  0012               	return		;funcret
  1963   000D54                     __end_of_Recibir_Cadena:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function ___wmul *****************
  1967 ;; Defined at:
  1968 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  multiplier      2   25[COMRAM] unsigned int 
  1971 ;;  multiplicand    2   27[COMRAM] unsigned int 
  1972 ;; Auto vars:     Size  Location     Type
  1973 ;;  product         2   29[COMRAM] unsigned int 
  1974 ;; Return value:  Size  Location     Type
  1975 ;;                  2   25[COMRAM] unsigned int 
  1976 ;; Registers used:
  1977 ;;		wreg, status,2, status,0, prodl, prodh
  1978 ;; Tracked objects:
  1979 ;;		On entry : 0/0
  1980 ;;		On exit  : 0/0
  1981 ;;		Unchanged: 0/0
  1982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1983 ;;      Params:         4       0       0       0       0       0       0       0       0
  1984 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1985 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1986 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1987 ;;Total ram usage:        6 bytes
  1988 ;; Hardware stack levels used: 1
  1989 ;; Hardware stack levels required when called: 5
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_Recibir_Cadena
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           	psect	text11
  1998   00120E                     __ptext11:
  1999                           	callstack 0
  2000   00120E                     ___wmul:
  2001                           	callstack 24
  2002                           
  2003                           ;incstack = 0
  2004   00120E  501A               	movf	___wmul@multiplier^0,w,c
  2005   001210  021C               	mulwf	___wmul@multiplicand^0,c
  2006   001212  CFF3 F01E          	movff	prodl,___wmul@product
  2007   001216  CFF4 F01F          	movff	prodh,___wmul@product+1
  2008   00121A  501A               	movf	___wmul@multiplier^0,w,c
  2009   00121C  021D               	mulwf	(___wmul@multiplicand+1)^0,c
  2010   00121E  50F3               	movf	243,w,c
  2011   001220  261F               	addwf	(___wmul@product+1)^0,f,c
  2012   001222  501B               	movf	(___wmul@multiplier+1)^0,w,c
  2013   001224  021C               	mulwf	___wmul@multiplicand^0,c
  2014   001226  50F3               	movf	243,w,c
  2015   001228  261F               	addwf	(___wmul@product+1)^0,f,c
  2016   00122A  C01E  F01A         	movff	___wmul@product,?___wmul
  2017   00122E  C01F  F01B         	movff	___wmul@product+1,?___wmul+1
  2018   001232  0012               	return		;funcret
  2019   001234                     __end_of___wmul:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _Recibir *****************
  2023 ;; Defined at:
  2024 ;;		line 131 in file "Proyecto.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;		None
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;		None
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  2   25[COMRAM] unsigned int 
  2031 ;; Registers used:
  2032 ;;		None
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2038 ;;      Params:         2       0       0       0       0       0       0       0       0
  2039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2040 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2041 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2042 ;;Total ram usage:        2 bytes
  2043 ;; Hardware stack levels used: 1
  2044 ;; Hardware stack levels required when called: 5
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_Recibir_Cadena
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text12
  2053   001288                     __ptext12:
  2054                           	callstack 0
  2055   001288                     _Recibir:
  2056                           	callstack 24
  2057                           
  2058                           ;Proyecto.c: 132: while (RCIF == 0);
  2059                           
  2060                           ;incstack = 0
  2061   001288  AA9E               	btfss	3998,5,c	;volatile
  2062   00128A  D7FE               	goto	__ptext12
  2063                           
  2064                           ;Proyecto.c: 133: if (OERR == 1) {
  2065   00128C  A2AB               	btfss	4011,1,c	;volatile
  2066   00128E  D002               	goto	l208
  2067                           
  2068                           ;Proyecto.c: 134: CREN = 0;
  2069   001290  98AB               	bcf	4011,4,c	;volatile
  2070                           
  2071                           ;Proyecto.c: 135: CREN = 1;
  2072   001292  88AB               	bsf	4011,4,c	;volatile
  2073   001294                     l208:
  2074                           
  2075                           ;Proyecto.c: 136: };Proyecto.c: 137: RCIF = 0;
  2076   001294  9A9E               	bcf	3998,5,c	;volatile
  2077                           
  2078                           ;Proyecto.c: 138: return RCREG;
  2079   001296  CFAE F01A          	movff	4014,?_Recibir	;volatile
  2080   00129A  6A1B               	clrf	(?_Recibir+1)^0,c
  2081   00129C  0012               	return		;funcret
  2082   00129E                     __end_of_Recibir:
  2083                           	callstack 0
  2084                           
  2085 ;; *************** function _EscribeLCD_c *****************
  2086 ;; Defined at:
  2087 ;;		line 118 in file "LibLCDXC8.h"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  a               1    wreg     unsigned char 
  2090 ;; Auto vars:     Size  Location     Type
  2091 ;;  a               1   29[COMRAM] unsigned char 
  2092 ;; Return value:  Size  Location     Type
  2093 ;;                  1    wreg      void 
  2094 ;; Registers used:
  2095 ;;		wreg, status,2, status,0, cstack
  2096 ;; Tracked objects:
  2097 ;;		On entry : 0/0
  2098 ;;		On exit  : 0/0
  2099 ;;		Unchanged: 0/0
  2100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2101 ;;      Params:         0       0       0       0       0       0       0       0       0
  2102 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2104 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2105 ;;Total ram usage:        1 bytes
  2106 ;; Hardware stack levels used: 1
  2107 ;; Hardware stack levels required when called: 7
  2108 ;; This function calls:
  2109 ;;		_EnviaDato
  2110 ;;		_HabilitaLCD
  2111 ;;		_RetardoLCD
  2112 ;; This function is called by:
  2113 ;;		_MensajeLCD_Var
  2114 ;;		_main
  2115 ;;		_Recibir_Cadena
  2116 ;;		_TransmitirDatos
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text13
  2121   00129E                     __ptext13:
  2122                           	callstack 0
  2123   00129E                     _EscribeLCD_c:
  2124                           	callstack 21
  2125                           
  2126                           ;incstack = 0
  2127                           ;EscribeLCD_c@a stored from wreg
  2128   00129E  6E1E               	movwf	EscribeLCD_c@a^0,c
  2129                           
  2130                           ;LibLCDXC8.h: 122: LATD2=1;
  2131   0012A0  848C               	bsf	3980,2,c	;volatile
  2132                           
  2133                           ;LibLCDXC8.h: 123: EnviaDato(a);
  2134   0012A2  501E               	movf	EscribeLCD_c@a^0,w,c
  2135   0012A4  EC3E  F008         	call	_EnviaDato
  2136                           
  2137                           ;LibLCDXC8.h: 124: HabilitaLCD();
  2138   0012A8  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2139                           
  2140                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  2141   0012AC  0E04               	movlw	4
  2142   0012AE  EC5D  F007         	call	_RetardoLCD
  2143   0012B2  0012               	return		;funcret
  2144   0012B4                     __end_of_EscribeLCD_c:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _InicializaLCD *****************
  2148 ;; Defined at:
  2149 ;;		line 64 in file "LibLCDXC8.h"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;		None
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;		None
  2154 ;; Return value:  Size  Location     Type
  2155 ;;                  1    wreg      void 
  2156 ;; Registers used:
  2157 ;;		wreg, status,2, status,0, cstack
  2158 ;; Tracked objects:
  2159 ;;		On entry : 0/0
  2160 ;;		On exit  : 0/0
  2161 ;;		Unchanged: 0/0
  2162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2163 ;;      Params:         0       0       0       0       0       0       0       0       0
  2164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2165 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2166 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2167 ;;Total ram usage:        0 bytes
  2168 ;; Hardware stack levels used: 1
  2169 ;; Hardware stack levels required when called: 8
  2170 ;; This function calls:
  2171 ;;		_BorraLCD
  2172 ;;		_EnviaDato
  2173 ;;		_HabilitaLCD
  2174 ;;		_RetardoLCD
  2175 ;; This function is called by:
  2176 ;;		_main
  2177 ;; This function uses a non-reentrant model
  2178 ;;
  2179                           
  2180                           	psect	text14
  2181   000E1E                     __ptext14:
  2182                           	callstack 0
  2183   000E1E                     _InicializaLCD:
  2184                           	callstack 22
  2185                           
  2186                           ;LibLCDXC8.h: 66: LATD2=0;
  2187                           
  2188                           ;incstack = 0
  2189   000E1E  948C               	bcf	3980,2,c	;volatile
  2190                           
  2191                           ;LibLCDXC8.h: 67: if(interfaz==4)
  2192   000E20  0E04               	movlw	4
  2193   000E22  183A               	xorwf	_interfaz^0,w,c
  2194   000E24  A4D8               	btfss	status,2,c
  2195   000E26  D004               	goto	l1200
  2196                           
  2197                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  2198   000E28  508C               	movf	140,w,c	;volatile
  2199   000E2A  0B0F               	andlw	15
  2200   000E2C  0930               	iorlw	48
  2201   000E2E  D001               	goto	L3
  2202   000E30                     l1200:
  2203                           
  2204                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  2205   000E30  0E3F               	movlw	63
  2206   000E32                     L3:
  2207   000E32  6E8C               	movwf	140,c	;volatile
  2208                           
  2209                           ;LibLCDXC8.h: 71: HabilitaLCD();
  2210   000E34  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2211                           
  2212                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  2213   000E38  0E01               	movlw	1
  2214   000E3A  EC5D  F007         	call	_RetardoLCD
  2215                           
  2216                           ;LibLCDXC8.h: 73: if(interfaz==4)
  2217   000E3E  0E04               	movlw	4
  2218   000E40  183A               	xorwf	_interfaz^0,w,c
  2219   000E42  A4D8               	btfss	status,2,c
  2220   000E44  D004               	goto	l1210
  2221                           
  2222                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  2223   000E46  508C               	movf	140,w,c	;volatile
  2224   000E48  0B0F               	andlw	15
  2225   000E4A  0930               	iorlw	48
  2226   000E4C  D001               	goto	L4
  2227   000E4E                     l1210:
  2228                           
  2229                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  2230   000E4E  0E3F               	movlw	63
  2231   000E50                     L4:
  2232   000E50  6E8C               	movwf	140,c	;volatile
  2233                           
  2234                           ;LibLCDXC8.h: 77: HabilitaLCD();
  2235   000E52  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2236                           
  2237                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  2238   000E56  0E03               	movlw	3
  2239   000E58  EC5D  F007         	call	_RetardoLCD
  2240                           
  2241                           ;LibLCDXC8.h: 79: if(interfaz==4)
  2242   000E5C  0E04               	movlw	4
  2243   000E5E  183A               	xorwf	_interfaz^0,w,c
  2244   000E60  A4D8               	btfss	status,2,c
  2245   000E62  D004               	goto	l1220
  2246                           
  2247                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  2248   000E64  508C               	movf	140,w,c	;volatile
  2249   000E66  0B0F               	andlw	15
  2250   000E68  0930               	iorlw	48
  2251   000E6A  D001               	goto	L5
  2252   000E6C                     l1220:
  2253                           
  2254                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  2255   000E6C  0E3F               	movlw	63
  2256   000E6E                     L5:
  2257   000E6E  6E8C               	movwf	140,c	;volatile
  2258                           
  2259                           ;LibLCDXC8.h: 83: HabilitaLCD();
  2260   000E70  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2261                           
  2262                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  2263   000E74  0E04               	movlw	4
  2264   000E76  EC5D  F007         	call	_RetardoLCD
  2265                           
  2266                           ;LibLCDXC8.h: 85: if(interfaz==4){
  2267   000E7A  0E04               	movlw	4
  2268   000E7C  183A               	xorwf	_interfaz^0,w,c
  2269   000E7E  A4D8               	btfss	status,2,c
  2270   000E80  D011               	goto	l1240
  2271                           
  2272                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  2273   000E82  508C               	movf	140,w,c	;volatile
  2274   000E84  0B0F               	andlw	15
  2275   000E86  0920               	iorlw	32
  2276   000E88  6E8C               	movwf	140,c	;volatile
  2277                           
  2278                           ;LibLCDXC8.h: 87: HabilitaLCD();
  2279   000E8A  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2280                           
  2281                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  2282   000E8E  0E04               	movlw	4
  2283   000E90  EC5D  F007         	call	_RetardoLCD
  2284                           
  2285                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  2286   000E94  0E2F               	movlw	47
  2287   000E96  EC3E  F008         	call	_EnviaDato
  2288                           
  2289                           ;LibLCDXC8.h: 90: HabilitaLCD();
  2290   000E9A  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2291                           
  2292                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  2293   000E9E  0E04               	movlw	4
  2294   000EA0  EC5D  F007         	call	_RetardoLCD
  2295   000EA4                     l1240:
  2296                           
  2297                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  2298   000EA4  EC7B  F009         	call	_BorraLCD	;wreg free
  2299                           
  2300                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  2301   000EA8  0E0F               	movlw	15
  2302   000EAA  EC3E  F008         	call	_EnviaDato
  2303                           
  2304                           ;LibLCDXC8.h: 95: HabilitaLCD();
  2305   000EAE  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2306                           
  2307                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  2308   000EB2  0E04               	movlw	4
  2309   000EB4  EC5D  F007         	call	_RetardoLCD
  2310   000EB8  0012               	return		;funcret
  2311   000EBA                     __end_of_InicializaLCD:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _BorraLCD *****************
  2315 ;; Defined at:
  2316 ;;		line 105 in file "LibLCDXC8.h"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;		None
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;		None
  2321 ;; Return value:  Size  Location     Type
  2322 ;;                  1    wreg      void 
  2323 ;; Registers used:
  2324 ;;		wreg, status,2, status,0, cstack
  2325 ;; Tracked objects:
  2326 ;;		On entry : 0/0
  2327 ;;		On exit  : 0/0
  2328 ;;		Unchanged: 0/0
  2329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2330 ;;      Params:         0       0       0       0       0       0       0       0       0
  2331 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2332 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2333 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2334 ;;Total ram usage:        0 bytes
  2335 ;; Hardware stack levels used: 1
  2336 ;; Hardware stack levels required when called: 7
  2337 ;; This function calls:
  2338 ;;		_EnviaDato
  2339 ;;		_HabilitaLCD
  2340 ;;		_RetardoLCD
  2341 ;; This function is called by:
  2342 ;;		_InicializaLCD
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text15
  2348   0012F6                     __ptext15:
  2349                           	callstack 0
  2350   0012F6                     _BorraLCD:
  2351                           	callstack 22
  2352                           
  2353                           ;LibLCDXC8.h: 107: LATD2=0;
  2354                           
  2355                           ;incstack = 0
  2356   0012F6  948C               	bcf	3980,2,c	;volatile
  2357                           
  2358                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  2359   0012F8  0E01               	movlw	1
  2360   0012FA  EC3E  F008         	call	_EnviaDato
  2361                           
  2362                           ;LibLCDXC8.h: 109: HabilitaLCD();
  2363   0012FE  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2364                           
  2365                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  2366   001302  0E02               	movlw	2
  2367   001304  EC5D  F007         	call	_RetardoLCD
  2368   001308  0012               	return		;funcret
  2369   00130A                     __end_of_BorraLCD:
  2370                           	callstack 0
  2371                           
  2372 ;; *************** function _EnviaDato *****************
  2373 ;; Defined at:
  2374 ;;		line 54 in file "LibLCDXC8.h"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  a               1    wreg     unsigned char 
  2377 ;; Auto vars:     Size  Location     Type
  2378 ;;  a               1   28[COMRAM] unsigned char 
  2379 ;; Return value:  Size  Location     Type
  2380 ;;                  1    wreg      void 
  2381 ;; Registers used:
  2382 ;;		wreg, status,2, status,0, cstack
  2383 ;; Tracked objects:
  2384 ;;		On entry : 0/0
  2385 ;;		On exit  : 0/0
  2386 ;;		Unchanged: 0/0
  2387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2388 ;;      Params:         0       0       0       0       0       0       0       0       0
  2389 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2390 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2391 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2392 ;;Total ram usage:        2 bytes
  2393 ;; Hardware stack levels used: 1
  2394 ;; Hardware stack levels required when called: 6
  2395 ;; This function calls:
  2396 ;;		_HabilitaLCD
  2397 ;;		_RetardoLCD
  2398 ;; This function is called by:
  2399 ;;		_InicializaLCD
  2400 ;;		_BorraLCD
  2401 ;;		_EscribeLCD_c
  2402 ;;		_DireccionaLCD
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           	psect	text16
  2407   00107C                     __ptext16:
  2408                           	callstack 0
  2409   00107C                     _EnviaDato:
  2410                           	callstack 21
  2411                           
  2412                           ;incstack = 0
  2413                           ;EnviaDato@a stored from wreg
  2414   00107C  6E1D               	movwf	EnviaDato@a^0,c
  2415                           
  2416                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2417   00107E  0E04               	movlw	4
  2418   001080  183A               	xorwf	_interfaz^0,w,c
  2419   001082  A4D8               	btfss	status,2,c
  2420   001084  D017               	goto	l1022
  2421                           
  2422                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2423   001086  C01D  F01C         	movff	EnviaDato@a,??_EnviaDato
  2424   00108A  0EF0               	movlw	240
  2425   00108C  161C               	andwf	??_EnviaDato^0,f,c
  2426   00108E  508C               	movf	140,w,c	;volatile
  2427   001090  0B0F               	andlw	15
  2428   001092  101C               	iorwf	??_EnviaDato^0,w,c
  2429   001094  6E8C               	movwf	140,c	;volatile
  2430                           
  2431                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2432   001096  EC8F  F009         	call	_HabilitaLCD	;wreg free
  2433                           
  2434                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2435   00109A  0E01               	movlw	1
  2436   00109C  EC5D  F007         	call	_RetardoLCD
  2437                           
  2438                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2439   0010A0  C01D  F01C         	movff	EnviaDato@a,??_EnviaDato
  2440   0010A4  3A1C               	swapf	??_EnviaDato^0,f,c
  2441   0010A6  0EF0               	movlw	240
  2442   0010A8  161C               	andwf	??_EnviaDato^0,f,c
  2443   0010AA  508C               	movf	140,w,c	;volatile
  2444   0010AC  0B0F               	andlw	15
  2445   0010AE  101C               	iorwf	??_EnviaDato^0,w,c
  2446   0010B0  6E8C               	movwf	140,c	;volatile
  2447                           
  2448                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2449   0010B2  0012               	return	
  2450   0010B4                     l1022:
  2451   0010B4  0E08               	movlw	8
  2452   0010B6  183A               	xorwf	_interfaz^0,w,c
  2453   0010B8  A4D8               	btfss	status,2,c
  2454   0010BA  0012               	return	
  2455                           
  2456                           ;LibLCDXC8.h: 61: LATD=a;
  2457   0010BC  C01D  FF8C         	movff	EnviaDato@a,3980	;volatile
  2458   0010C0  0012               	return		;funcret
  2459   0010C2                     __end_of_EnviaDato:
  2460                           	callstack 0
  2461                           
  2462 ;; *************** function _RetardoLCD *****************
  2463 ;; Defined at:
  2464 ;;		line 262 in file "LibLCDXC8.h"
  2465 ;; Parameters:    Size  Location     Type
  2466 ;;  a               1    wreg     unsigned char 
  2467 ;; Auto vars:     Size  Location     Type
  2468 ;;  a               1   26[COMRAM] unsigned char 
  2469 ;; Return value:  Size  Location     Type
  2470 ;;                  1    wreg      void 
  2471 ;; Registers used:
  2472 ;;		wreg, status,2, status,0
  2473 ;; Tracked objects:
  2474 ;;		On entry : 0/0
  2475 ;;		On exit  : 0/0
  2476 ;;		Unchanged: 0/0
  2477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2478 ;;      Params:         0       0       0       0       0       0       0       0       0
  2479 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2480 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2481 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2482 ;;Total ram usage:        2 bytes
  2483 ;; Hardware stack levels used: 1
  2484 ;; Hardware stack levels required when called: 5
  2485 ;; This function calls:
  2486 ;;		Nothing
  2487 ;; This function is called by:
  2488 ;;		_EnviaDato
  2489 ;;		_InicializaLCD
  2490 ;;		_BorraLCD
  2491 ;;		_EscribeLCD_c
  2492 ;;		_DireccionaLCD
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text17
  2497   000EBA                     __ptext17:
  2498                           	callstack 0
  2499   000EBA                     _RetardoLCD:
  2500                           	callstack 22
  2501                           
  2502                           ;incstack = 0
  2503                           ;RetardoLCD@a stored from wreg
  2504   000EBA  6E1B               	movwf	RetardoLCD@a^0,c
  2505                           
  2506                           ;LibLCDXC8.h: 263: switch(a){
  2507   000EBC  D023               	goto	l1010
  2508   000EBE                     l1000:
  2509   000EBE  0E62               	movlw	98
  2510   000EC0  6E1A               	movwf	??_RetardoLCD^0,c
  2511   000EC2  0E66               	movlw	102
  2512   000EC4                     u857:
  2513   000EC4  2EE8               	decfsz	wreg,f,c
  2514   000EC6  D7FE               	bra	u857
  2515   000EC8  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2516   000ECA  D7FC               	bra	u857
  2517                           
  2518                           ;LibLCDXC8.h: 266: break;
  2519   000ECC  0012               	return	
  2520   000ECE                     l1002:
  2521   000ECE  0E07               	movlw	7
  2522   000ED0  6E1A               	movwf	??_RetardoLCD^0,c
  2523   000ED2  0E7D               	movlw	125
  2524   000ED4                     u867:
  2525   000ED4  2EE8               	decfsz	wreg,f,c
  2526   000ED6  D7FE               	bra	u867
  2527   000ED8  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2528   000EDA  D7FC               	bra	u867
  2529   000EDC  F000               	nop	
  2530                           
  2531                           ;LibLCDXC8.h: 268: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2532   000EDE  0E05               	movlw	5
  2533   000EE0  6E1A               	movwf	??_RetardoLCD^0,c
  2534   000EE2  0E26               	movlw	38
  2535   000EE4                     u877:
  2536   000EE4  2EE8               	decfsz	wreg,f,c
  2537   000EE6  D7FE               	bra	u877
  2538   000EE8  2E1A               	decfsz	??_RetardoLCD^0,f,c
  2539   000EEA  D7FC               	bra	u877
  2540   000EEC  D000               	nop2	
  2541                           
  2542                           ;LibLCDXC8.h: 270: break;
  2543   000EEE  0012               	return	
  2544   000EF0                     l1004:
  2545   000EF0  0EA6               	movlw	166
  2546   000EF2                     u887:
  2547   000EF2  2EE8               	decfsz	wreg,f,c
  2548   000EF4  D7FE               	bra	u887
  2549   000EF6  D000               	nop2	
  2550                           
  2551                           ;LibLCDXC8.h: 273: break;
  2552   000EF8  0012               	return	
  2553   000EFA                     l1006:
  2554   000EFA  0E42               	movlw	66
  2555   000EFC                     u897:
  2556   000EFC  2EE8               	decfsz	wreg,f,c
  2557   000EFE  D7FE               	bra	u897
  2558   000F00  D000               	nop2	
  2559                           
  2560                           ;LibLCDXC8.h: 276: break;
  2561   000F02  0012               	return	
  2562   000F04                     l1010:
  2563   000F04  501B               	movf	RetardoLCD@a^0,w,c
  2564                           
  2565                           ; Switch size 1, requested type "simple"
  2566                           ; Number of cases is 4, Range of values is 1 to 4
  2567                           ; switch strategies available:
  2568                           ; Name         Instructions Cycles
  2569                           ; simple_byte           13     7 (average)
  2570                           ;	Chosen strategy is simple_byte
  2571   000F06  0A01               	xorlw	1	; case 1
  2572   000F08  B4D8               	btfsc	status,2,c
  2573   000F0A  D7D9               	goto	l1000
  2574   000F0C  0A03               	xorlw	3	; case 2
  2575   000F0E  B4D8               	btfsc	status,2,c
  2576   000F10  D7DE               	goto	l1002
  2577   000F12  0A01               	xorlw	1	; case 3
  2578   000F14  B4D8               	btfsc	status,2,c
  2579   000F16  D7EC               	goto	l1004
  2580   000F18  0A07               	xorlw	7	; case 4
  2581   000F1A  A4D8               	btfss	status,2,c
  2582   000F1C  0012               	return	
  2583   000F1E  D7ED               	goto	l1006
  2584   000F20                     __end_of_RetardoLCD:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _HabilitaLCD *****************
  2588 ;; Defined at:
  2589 ;;		line 98 in file "LibLCDXC8.h"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 5
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_EnviaDato
  2614 ;;		_InicializaLCD
  2615 ;;		_BorraLCD
  2616 ;;		_EscribeLCD_c
  2617 ;;		_DireccionaLCD
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text18
  2622   00131E                     __ptext18:
  2623                           	callstack 0
  2624   00131E                     _HabilitaLCD:
  2625                           	callstack 22
  2626                           
  2627                           ;LibLCDXC8.h: 100: LATD3=1;
  2628                           
  2629                           ;incstack = 0
  2630   00131E  868C               	bsf	3980,3,c	;volatile
  2631                           
  2632                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2633   001320  0E42               	movlw	66
  2634   001322                     u907:
  2635   001322  2EE8               	decfsz	wreg,f,c
  2636   001324  D7FE               	bra	u907
  2637   001326  D000               	nop2	
  2638                           
  2639                           ;LibLCDXC8.h: 103: LATD3=0;
  2640   001328  968C               	bcf	3980,3,c	;volatile
  2641   00132A  0012               	return		;funcret
  2642   00132C                     __end_of_HabilitaLCD:
  2643                           	callstack 0
  2644                           
  2645 ;; *************** function _ConfiguraLCD *****************
  2646 ;; Defined at:
  2647 ;;		line 50 in file "LibLCDXC8.h"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;  a               1    wreg     unsigned char 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;  a               1   25[COMRAM] unsigned char 
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2661 ;;      Params:         0       0       0       0       0       0       0       0       0
  2662 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2664 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2665 ;;Total ram usage:        1 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 5
  2668 ;; This function calls:
  2669 ;;		Nothing
  2670 ;; This function is called by:
  2671 ;;		_main
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text19
  2676   00125A                     __ptext19:
  2677                           	callstack 0
  2678   00125A                     _ConfiguraLCD:
  2679                           	callstack 25
  2680                           
  2681                           ;incstack = 0
  2682                           ;ConfiguraLCD@a stored from wreg
  2683   00125A  6E1A               	movwf	ConfiguraLCD@a^0,c
  2684                           
  2685                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  2686   00125C  0E04               	movlw	4
  2687   00125E  181A               	xorwf	ConfiguraLCD@a^0,w,c
  2688   001260  B4D8               	btfsc	status,2,c
  2689   001262  D004               	goto	u190
  2690   001264  0E08               	movlw	8
  2691   001266  181A               	xorwf	ConfiguraLCD@a^0,w,c
  2692   001268  A4D8               	btfss	status,2,c
  2693   00126A  0012               	return	
  2694   00126C                     u190:
  2695                           
  2696                           ;LibLCDXC8.h: 52: interfaz=a;
  2697   00126C  C01A  F03A         	movff	ConfiguraLCD@a,_interfaz
  2698   001270  0012               	return		;funcret
  2699   001272                     __end_of_ConfiguraLCD:
  2700                           	callstack 0
  2701                           
  2702 ;; *************** function _ISR *****************
  2703 ;; Defined at:
  2704 ;;		line 224 in file "Proyecto.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;		None
  2707 ;; Auto vars:     Size  Location     Type
  2708 ;;		None
  2709 ;; Return value:  Size  Location     Type
  2710 ;;                  1    wreg      void 
  2711 ;; Registers used:
  2712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2713 ;; Tracked objects:
  2714 ;;		On entry : 0/0
  2715 ;;		On exit  : 0/0
  2716 ;;		Unchanged: 0/0
  2717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2718 ;;      Params:         0       0       0       0       0       0       0       0       0
  2719 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2720 ;;      Temps:         10       0       0       0       0       0       0       0       0
  2721 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2722 ;;Total ram usage:       10 bytes
  2723 ;; Hardware stack levels used: 1
  2724 ;; Hardware stack levels required when called: 4
  2725 ;; This function calls:
  2726 ;;		i2_BorraLCD
  2727 ;;		i2_DireccionaLCD
  2728 ;;		i2_EscribeLCD_c
  2729 ;;		i2_MensajeLCD_Var
  2730 ;;		i2_Recibir_Cadena
  2731 ;; This function is called by:
  2732 ;;		Interrupt level 2
  2733 ;; This function uses a non-reentrant model
  2734 ;;
  2735                           
  2736                           	psect	intcode
  2737   000008                     __pintcode:
  2738                           	callstack 0
  2739   000008                     _ISR:
  2740                           	callstack 21
  2741                           
  2742                           ;incstack = 0
  2743   000008  823B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2744   00000A  ED57  F005         	call	int_func,f	;refresh shadow registers
  2745                           
  2746                           	psect	intcode_body
  2747   000AAE                     __pintcode_body:
  2748                           	callstack 21
  2749   000AAE                     int_func:
  2750                           	callstack 21
  2751   000AAE  0006               	pop		; remove dummy address from shadow register refresh
  2752   000AB0  CFD9 F012          	movff	fsr2l,??_ISR+2
  2753   000AB4  CFDA F013          	movff	fsr2h,??_ISR+3
  2754   000AB8  CFF3 F014          	movff	prodl,??_ISR+4
  2755   000ABC  CFF4 F015          	movff	prodh,??_ISR+5
  2756   000AC0  CFF6 F016          	movff	tblptrl,??_ISR+6
  2757   000AC4  CFF7 F017          	movff	tblptrh,??_ISR+7
  2758   000AC8  CFF8 F018          	movff	tblptru,??_ISR+8
  2759   000ACC  CFF5 F019          	movff	tablat,??_ISR+9
  2760                           
  2761                           ;Proyecto.c: 225: if (CCP2IF == 1) {
  2762   000AD0  A0A1               	btfss	4001,0,c	;volatile
  2763   000AD2  D055               	goto	i2l238
  2764                           
  2765                           ;Proyecto.c: 226: if (INT0IF == 1) {
  2766   000AD4  A2F2               	btfss	4082,1,c	;volatile
  2767   000AD6  D052               	goto	i2l2070
  2768                           
  2769                           ;Proyecto.c: 227: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2770   000AD8  0E0B               	movlw	11
  2771   000ADA  6E11               	movwf	(??_ISR+1)^0,c
  2772   000ADC  0E26               	movlw	38
  2773   000ADE  6E10               	movwf	??_ISR^0,c
  2774   000AE0  0E5E               	movlw	94
  2775   000AE2                     i2u91_47:
  2776   000AE2  2EE8               	decfsz	wreg,f,c
  2777   000AE4  D7FE               	bra	i2u91_47
  2778   000AE6  2E10               	decfsz	??_ISR^0,f,c
  2779   000AE8  D7FC               	bra	i2u91_47
  2780   000AEA  2E11               	decfsz	(??_ISR+1)^0,f,c
  2781   000AEC  D7FA               	bra	i2u91_47
  2782                           
  2783                           ;Proyecto.c: 228: BorraLCD();
  2784   000AEE  EC85  F009         	call	i2_BorraLCD	;wreg free
  2785                           
  2786                           ;Proyecto.c: 229: MensajeLCD_Var("Nueva dist. de");
  2787   000AF2  0E22               	movlw	low STR_11
  2788   000AF4  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2789   000AF6  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2790                           
  2791                           ;Proyecto.c: 230: DireccionaLCD(0xC0);
  2792   000AFA  0EC0               	movlw	192
  2793   000AFC  EC70  F009         	call	i2_DireccionaLCD
  2794                           
  2795                           ;Proyecto.c: 231: MensajeLCD_Var("alarma: ");
  2796   000B00  0E83               	movlw	low STR_6
  2797   000B02  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2798   000B04  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2799                           
  2800                           ;Proyecto.c: 232: Recibir_Cadena(Minimo_Consola, 5);
  2801   000B08  0E30               	movlw	low _Minimo_Consola
  2802   000B0A  6E07               	movwf	i2Recibir_Cadena@Buffer^0,c
  2803   000B0C  0E00               	movlw	0
  2804   000B0E  6E09               	movwf	(i2Recibir_Cadena@tamano+1)^0,c
  2805   000B10  0E05               	movlw	5
  2806   000B12  6E08               	movwf	i2Recibir_Cadena@tamano^0,c
  2807   000B14  ECAA  F006         	call	i2_Recibir_Cadena	;wreg free
  2808                           
  2809                           ;Proyecto.c: 233: MensajeLCD_Var("cm");
  2810   000B18  0E8C               	movlw	low STR_7
  2811   000B1A  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2812   000B1C  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2813                           
  2814                           ;Proyecto.c: 234: EscribeLCD_c(' ');
  2815   000B20  0E20               	movlw	32
  2816   000B22  EC65  F009         	call	i2_EscribeLCD_c
  2817                           
  2818                           ;Proyecto.c: 235: _delay((unsigned long)((2000)*(8000000/4000.0)));
  2819   000B26  0E15               	movlw	21
  2820   000B28  6E11               	movwf	(??_ISR+1)^0,c
  2821   000B2A  0E4B               	movlw	75
  2822   000B2C  6E10               	movwf	??_ISR^0,c
  2823   000B2E  0EBE               	movlw	190
  2824   000B30                     i2u92_47:
  2825   000B30  2EE8               	decfsz	wreg,f,c
  2826   000B32  D7FE               	bra	i2u92_47
  2827   000B34  2E10               	decfsz	??_ISR^0,f,c
  2828   000B36  D7FC               	bra	i2u92_47
  2829   000B38  2E11               	decfsz	(??_ISR+1)^0,f,c
  2830   000B3A  D7FA               	bra	i2u92_47
  2831   000B3C  D000               	nop2	
  2832                           
  2833                           ;Proyecto.c: 236: BorraLCD();
  2834   000B3E  EC85  F009         	call	i2_BorraLCD	;wreg free
  2835                           
  2836                           ;Proyecto.c: 237: MensajeLCD_Var("Nueva Distancia");
  2837   000B42  0E12               	movlw	low STR_14
  2838   000B44  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2839   000B46  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2840                           
  2841                           ;Proyecto.c: 238: DireccionaLCD(0xC0);
  2842   000B4A  0EC0               	movlw	192
  2843   000B4C  EC70  F009         	call	i2_DireccionaLCD
  2844                           
  2845                           ;Proyecto.c: 239: MensajeLCD_Var("Configurada");
  2846   000B50  0E4C               	movlw	low STR_15
  2847   000B52  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2848   000B54  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2849                           
  2850                           ;Proyecto.c: 240: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2851   000B58  0E0B               	movlw	11
  2852   000B5A  6E11               	movwf	(??_ISR+1)^0,c
  2853   000B5C  0E26               	movlw	38
  2854   000B5E  6E10               	movwf	??_ISR^0,c
  2855   000B60  0E5E               	movlw	94
  2856   000B62                     i2u93_47:
  2857   000B62  2EE8               	decfsz	wreg,f,c
  2858   000B64  D7FE               	bra	i2u93_47
  2859   000B66  2E10               	decfsz	??_ISR^0,f,c
  2860   000B68  D7FC               	bra	i2u93_47
  2861   000B6A  2E11               	decfsz	(??_ISR+1)^0,f,c
  2862   000B6C  D7FA               	bra	i2u93_47
  2863                           
  2864                           ;Proyecto.c: 241: BorraLCD();
  2865   000B6E  EC85  F009         	call	i2_BorraLCD	;wreg free
  2866                           
  2867                           ;Proyecto.c: 242: MensajeLCD_Var("Distancia:");
  2868   000B72  0E58               	movlw	low STR_9
  2869   000B74  6E06               	movwf	i2MensajeLCD_Var@a^0,c
  2870   000B76  EC15  F008         	call	i2_MensajeLCD_Var	;wreg free
  2871                           
  2872                           ;Proyecto.c: 243: INT0IF = 0;
  2873   000B7A  92F2               	bcf	4082,1,c	;volatile
  2874   000B7C                     i2l2070:
  2875                           
  2876                           ;Proyecto.c: 244: };Proyecto.c: 245: CCP2IF = 0;
  2877   000B7C  90A1               	bcf	4001,0,c	;volatile
  2878   000B7E                     i2l238:
  2879   000B7E  C019  FFF5         	movff	??_ISR+9,tablat
  2880   000B82  C018  FFF8         	movff	??_ISR+8,tblptru
  2881   000B86  C017  FFF7         	movff	??_ISR+7,tblptrh
  2882   000B8A  C016  FFF6         	movff	??_ISR+6,tblptrl
  2883   000B8E  C015  FFF4         	movff	??_ISR+5,prodh
  2884   000B92  C014  FFF3         	movff	??_ISR+4,prodl
  2885   000B96  C013  FFDA         	movff	??_ISR+3,fsr2h
  2886   000B9A  C012  FFD9         	movff	??_ISR+2,fsr2l
  2887   000B9E  923B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2888   000BA0  0011               	retfie		f
  2889   000BA2                     __end_of_ISR:
  2890                           	callstack 0
  2891                           
  2892 ;; *************** function i2_Recibir_Cadena *****************
  2893 ;; Defined at:
  2894 ;;		line 141 in file "Proyecto.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;  Buffer          1    6[COMRAM] PTR unsigned char 
  2897 ;;		 -> Minimo_Consola(10), 
  2898 ;;  tamano          2    7[COMRAM] unsigned int 
  2899 ;; Auto vars:     Size  Location     Type
  2900 ;;  i               2   13[COMRAM] int 
  2901 ;;  valor           2   11[COMRAM] int 
  2902 ;;  cont_buf        2    0        unsigned int 
  2903 ;;  c               1   10[COMRAM] unsigned char 
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2913 ;;      Params:         3       0       0       0       0       0       0       0       0
  2914 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2915 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2916 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2917 ;;Total ram usage:        9 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 3
  2920 ;; This function calls:
  2921 ;;		i2_EscribeLCD_c
  2922 ;;		i2_Recibir
  2923 ;;		i2___wmul
  2924 ;; This function is called by:
  2925 ;;		_ISR
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text21
  2930   000D54                     __ptext21:
  2931                           	callstack 0
  2932   000D54                     i2_Recibir_Cadena:
  2933                           	callstack 21
  2934                           
  2935                           ;Proyecto.c: 143: char c;;Proyecto.c: 144: int valor = 0;
  2936                           
  2937                           ;incstack = 0
  2938   000D54  0E00               	movlw	0
  2939   000D56  6E0D               	movwf	(i2Recibir_Cadena@valor+1)^0,c
  2940   000D58  0E00               	movlw	0
  2941   000D5A  6E0C               	movwf	i2Recibir_Cadena@valor^0,c
  2942                           
  2943                           ;Proyecto.c: 145: Minimo = 0;
  2944   000D5C  0E00               	movlw	0
  2945   000D5E  6E2D               	movwf	(_Minimo+1)^0,c
  2946   000D60  0E00               	movlw	0
  2947   000D62  6E2C               	movwf	_Minimo^0,c
  2948                           
  2949                           ;Proyecto.c: 146: for (int i = 0; i < 3; i++) {
  2950   000D64  0E00               	movlw	0
  2951   000D66  6E0F               	movwf	(i2Recibir_Cadena@i+1)^0,c
  2952   000D68  0E00               	movlw	0
  2953   000D6A  6E0E               	movwf	i2Recibir_Cadena@i^0,c
  2954   000D6C                     i2l1860:
  2955                           
  2956                           ;Proyecto.c: 147: c = Recibir();
  2957   000D6C  EC5A  F009         	call	i2_Recibir	;wreg free
  2958   000D70  5001               	movf	?i2_Recibir^0,w,c
  2959   000D72  6E0B               	movwf	i2Recibir_Cadena@c^0,c
  2960                           
  2961                           ;Proyecto.c: 148: Buffer[i] = c;
  2962   000D74  5007               	movf	i2Recibir_Cadena@Buffer^0,w,c
  2963   000D76  240E               	addwf	i2Recibir_Cadena@i^0,w,c
  2964   000D78  6ED9               	movwf	fsr2l,c
  2965   000D7A  6ADA               	clrf	fsr2h,c
  2966   000D7C  C00B  FFDF         	movff	i2Recibir_Cadena@c,indf2
  2967                           
  2968                           ;Proyecto.c: 149: valor = Buffer[i] - 48;
  2969   000D80  5007               	movf	i2Recibir_Cadena@Buffer^0,w,c
  2970   000D82  240E               	addwf	i2Recibir_Cadena@i^0,w,c
  2971   000D84  6ED9               	movwf	fsr2l,c
  2972   000D86  6ADA               	clrf	fsr2h,c
  2973   000D88  50DF               	movf	indf2,w,c
  2974   000D8A  6E0A               	movwf	??i2_Recibir_Cadena^0,c
  2975   000D8C  0ED0               	movlw	208
  2976   000D8E  240A               	addwf	??i2_Recibir_Cadena^0,w,c
  2977   000D90  6E0C               	movwf	i2Recibir_Cadena@valor^0,c
  2978   000D92  6A0D               	clrf	(i2Recibir_Cadena@valor+1)^0,c
  2979   000D94  0EFF               	movlw	255
  2980   000D96  220D               	addwfc	(i2Recibir_Cadena@valor+1)^0,f,c
  2981                           
  2982                           ;Proyecto.c: 150: EscribeLCD_c(c);
  2983   000D98  500B               	movf	i2Recibir_Cadena@c^0,w,c
  2984   000D9A  EC65  F009         	call	i2_EscribeLCD_c
  2985                           
  2986                           ;Proyecto.c: 151: if (i == 0) {
  2987   000D9E  500E               	movf	i2Recibir_Cadena@i^0,w,c
  2988   000DA0  100F               	iorwf	(i2Recibir_Cadena@i+1)^0,w,c
  2989   000DA2  A4D8               	btfss	status,2,c
  2990   000DA4  D015               	goto	i2l1874
  2991                           
  2992                           ;Proyecto.c: 152: valor = valor * 100;
  2993   000DA6  C00C  F001         	movff	i2Recibir_Cadena@valor,i2___wmul@multiplier
  2994   000DAA  C00D  F002         	movff	i2Recibir_Cadena@valor+1,i2___wmul@multiplier+1
  2995   000DAE  0E00               	movlw	0
  2996   000DB0  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  2997   000DB2  0E64               	movlw	100
  2998   000DB4  6E03               	movwf	i2___wmul@multiplicand^0,c
  2999   000DB6  EC1A  F009         	call	i2___wmul	;wreg free
  3000   000DBA  C001  F00C         	movff	?i2___wmul,i2Recibir_Cadena@valor
  3001   000DBE  C002  F00D         	movff	?i2___wmul+1,i2Recibir_Cadena@valor+1
  3002   000DC2                     i2l1872:
  3003                           
  3004                           ;Proyecto.c: 153: Minimo = Minimo + valor;
  3005   000DC2  500C               	movf	i2Recibir_Cadena@valor^0,w,c
  3006   000DC4  242C               	addwf	_Minimo^0,w,c
  3007   000DC6  6E2C               	movwf	_Minimo^0,c
  3008   000DC8  500D               	movf	(i2Recibir_Cadena@valor+1)^0,w,c
  3009   000DCA  202D               	addwfc	(_Minimo+1)^0,w,c
  3010   000DCC  6E2D               	movwf	(_Minimo+1)^0,c
  3011                           
  3012                           ;Proyecto.c: 154: } else if (i == 1) {
  3013   000DCE  D014               	goto	i2l1884
  3014   000DD0                     i2l1874:
  3015   000DD0  040E               	decf	i2Recibir_Cadena@i^0,w,c
  3016   000DD2  100F               	iorwf	(i2Recibir_Cadena@i+1)^0,w,c
  3017   000DD4  A4D8               	btfss	status,2,c
  3018   000DD6  D00B               	goto	i2l1880
  3019                           
  3020                           ;Proyecto.c: 155: valor = valor * 10;
  3021   000DD8  C00C  F001         	movff	i2Recibir_Cadena@valor,i2___wmul@multiplier
  3022   000DDC  C00D  F002         	movff	i2Recibir_Cadena@valor+1,i2___wmul@multiplier+1
  3023   000DE0  0E00               	movlw	0
  3024   000DE2  6E04               	movwf	(i2___wmul@multiplicand+1)^0,c
  3025   000DE4  0E0A               	movlw	10
  3026   000DE6  6E03               	movwf	i2___wmul@multiplicand^0,c
  3027   000DE8  EC1A  F009         	call	i2___wmul	;wreg free
  3028   000DEC  D7E6               	goto	L6
  3029   000DEE                     i2l1880:
  3030   000DEE  0E02               	movlw	2
  3031   000DF0  180E               	xorwf	i2Recibir_Cadena@i^0,w,c
  3032   000DF2  100F               	iorwf	(i2Recibir_Cadena@i+1)^0,w,c
  3033   000DF4  B4D8               	btfsc	status,2,c
  3034   000DF6  D7E5               	goto	i2l1872
  3035   000DF8                     i2l1884:
  3036   000DF8  4A0E               	infsnz	i2Recibir_Cadena@i^0,f,c
  3037   000DFA  2A0F               	incf	(i2Recibir_Cadena@i+1)^0,f,c
  3038   000DFC  BE0F               	btfsc	(i2Recibir_Cadena@i+1)^0,7,c
  3039   000DFE  D7B6               	goto	i2l1860
  3040   000E00  500F               	movf	(i2Recibir_Cadena@i+1)^0,w,c
  3041   000E02  E104               	bnz	i2u70_40
  3042   000E04  0E03               	movlw	3
  3043   000E06  5C0E               	subwf	i2Recibir_Cadena@i^0,w,c
  3044   000E08  A0D8               	btfss	status,0,c
  3045   000E0A  D7B0               	goto	i2l1860
  3046   000E0C                     i2u70_40:
  3047                           
  3048                           ;Proyecto.c: 159: };Proyecto.c: 160: };Proyecto.c: 161: Buffer[tamano - 2] = '\0';
  3049   000E0C  5007               	movf	i2Recibir_Cadena@Buffer^0,w,c
  3050   000E0E  2408               	addwf	i2Recibir_Cadena@tamano^0,w,c
  3051   000E10  6ED9               	movwf	fsr2l,c
  3052   000E12  6ADA               	clrf	fsr2h,c
  3053   000E14  0EFE               	movlw	254
  3054   000E16  26D9               	addwf	fsr2l,f,c
  3055   000E18  0E00               	movlw	0
  3056   000E1A  6EDF               	movwf	indf2,c
  3057   000E1C  0012               	return		;funcret
  3058   000E1E                     __end_ofi2_Recibir_Cadena:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function i2___wmul *****************
  3062 ;; Defined at:
  3063 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  multiplier      2    0[COMRAM] unsigned int 
  3066 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  product         2    4[COMRAM] unsigned int 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    0[COMRAM] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0, prodl, prodh
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3078 ;;      Params:         4       0       0       0       0       0       0       0       0
  3079 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3080 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3081 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3082 ;;Total ram usage:        6 bytes
  3083 ;; Hardware stack levels used: 1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		i2_Recibir_Cadena
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           
  3091                           	psect	text22
  3092   001234                     __ptext22:
  3093                           	callstack 0
  3094   001234                     i2___wmul:
  3095                           	callstack 23
  3096                           
  3097                           ;incstack = 0
  3098   001234  5001               	movf	i2___wmul@multiplier^0,w,c
  3099   001236  0203               	mulwf	i2___wmul@multiplicand^0,c
  3100   001238  CFF3 F005          	movff	prodl,i2___wmul@product
  3101   00123C  CFF4 F006          	movff	prodh,i2___wmul@product+1
  3102   001240  5001               	movf	i2___wmul@multiplier^0,w,c
  3103   001242  0204               	mulwf	(i2___wmul@multiplicand+1)^0,c
  3104   001244  50F3               	movf	243,w,c
  3105   001246  2606               	addwf	(i2___wmul@product+1)^0,f,c
  3106   001248  5002               	movf	(i2___wmul@multiplier+1)^0,w,c
  3107   00124A  0203               	mulwf	i2___wmul@multiplicand^0,c
  3108   00124C  50F3               	movf	243,w,c
  3109   00124E  2606               	addwf	(i2___wmul@product+1)^0,f,c
  3110   001250  C005  F001         	movff	i2___wmul@product,?i2___wmul
  3111   001254  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
  3112   001258  0012               	return		;funcret
  3113   00125A                     __end_ofi2___wmul:
  3114                           	callstack 0
  3115                           
  3116 ;; *************** function i2_Recibir *****************
  3117 ;; Defined at:
  3118 ;;		line 131 in file "Proyecto.c"
  3119 ;; Parameters:    Size  Location     Type
  3120 ;;		None
  3121 ;; Auto vars:     Size  Location     Type
  3122 ;;		None
  3123 ;; Return value:  Size  Location     Type
  3124 ;;                  2    0[COMRAM] unsigned int 
  3125 ;; Registers used:
  3126 ;;		None
  3127 ;; Tracked objects:
  3128 ;;		On entry : 0/0
  3129 ;;		On exit  : 0/0
  3130 ;;		Unchanged: 0/0
  3131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3132 ;;      Params:         2       0       0       0       0       0       0       0       0
  3133 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3134 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3135 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3136 ;;Total ram usage:        2 bytes
  3137 ;; Hardware stack levels used: 1
  3138 ;; This function calls:
  3139 ;;		Nothing
  3140 ;; This function is called by:
  3141 ;;		i2_Recibir_Cadena
  3142 ;; This function uses a non-reentrant model
  3143 ;;
  3144                           
  3145                           	psect	text23
  3146   0012B4                     __ptext23:
  3147                           	callstack 0
  3148   0012B4                     i2_Recibir:
  3149                           	callstack 23
  3150                           
  3151                           ;Proyecto.c: 132: while (RCIF == 0);
  3152                           
  3153                           ;incstack = 0
  3154   0012B4  AA9E               	btfss	3998,5,c	;volatile
  3155   0012B6  D7FE               	goto	__ptext23
  3156                           
  3157                           ;Proyecto.c: 133: if (OERR == 1) {
  3158   0012B8  A2AB               	btfss	4011,1,c	;volatile
  3159   0012BA  D002               	goto	i2l208
  3160                           
  3161                           ;Proyecto.c: 134: CREN = 0;
  3162   0012BC  98AB               	bcf	4011,4,c	;volatile
  3163                           
  3164                           ;Proyecto.c: 135: CREN = 1;
  3165   0012BE  88AB               	bsf	4011,4,c	;volatile
  3166   0012C0                     i2l208:
  3167                           
  3168                           ;Proyecto.c: 136: };Proyecto.c: 137: RCIF = 0;
  3169   0012C0  9A9E               	bcf	3998,5,c	;volatile
  3170                           
  3171                           ;Proyecto.c: 138: return RCREG;
  3172   0012C2  CFAE F001          	movff	4014,?i2_Recibir	;volatile
  3173   0012C6  6A02               	clrf	(?i2_Recibir+1)^0,c
  3174   0012C8  0012               	return		;funcret
  3175   0012CA                     __end_ofi2_Recibir:
  3176                           	callstack 0
  3177                           
  3178 ;; *************** function i2_MensajeLCD_Var *****************
  3179 ;; Defined at:
  3180 ;;		line 215 in file "LibLCDXC8.h"
  3181 ;; Parameters:    Size  Location     Type
  3182 ;;  a               1    5[COMRAM] PTR unsigned char 
  3183 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  3184 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  3185 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  3186 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  i               2    7[COMRAM] int 
  3189 ;; Return value:  Size  Location     Type
  3190 ;;                  1    wreg      void 
  3191 ;; Registers used:
  3192 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3193 ;; Tracked objects:
  3194 ;;		On entry : 0/0
  3195 ;;		On exit  : 0/0
  3196 ;;		Unchanged: 0/0
  3197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3198 ;;      Params:         1       0       0       0       0       0       0       0       0
  3199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3200 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3202 ;;Total ram usage:        4 bytes
  3203 ;; Hardware stack levels used: 1
  3204 ;; Hardware stack levels required when called: 3
  3205 ;; This function calls:
  3206 ;;		i2_EscribeLCD_c
  3207 ;;		i2_strlen
  3208 ;; This function is called by:
  3209 ;;		_ISR
  3210 ;; This function uses a non-reentrant model
  3211 ;;
  3212                           
  3213                           	psect	text24
  3214   00102A                     __ptext24:
  3215                           	callstack 0
  3216   00102A                     i2_MensajeLCD_Var:
  3217                           	callstack 21
  3218                           
  3219                           ;LibLCDXC8.h: 219: for(int i = 0; i<strlen(a); i++){
  3220                           
  3221                           ;incstack = 0
  3222   00102A  0E00               	movlw	0
  3223   00102C  6E09               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  3224   00102E  0E00               	movlw	0
  3225   001030  6E08               	movwf	i2MensajeLCD_Var@i^0,c
  3226   001032  D019               	goto	i2l1844
  3227   001034                     i2l1836:
  3228                           
  3229                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  3230   001034  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  3231   001036  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  3232   001038  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  3233   00103A  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  3234   00103E                     	if	1	;There is more than 1 active tblptr byte
  3235   00103E  0E08               	movlw	high __smallconst
  3236   001040  6EF7               	movwf	tblptrh,c
  3237   001042                     	endif
  3238   001042                     	if	0	;tblptru may be non-zero
  3239   001042                     	endif
  3240   001042                     	if	0	;tblptru may be non-zero
  3241   001042                     	endif
  3242   001042  0008               	tblrd		*
  3243   001044  50F5               	movf	tablat,w,c
  3244   001046  0900               	iorlw	0
  3245   001048  B4D8               	btfsc	status,2,c
  3246   00104A  0012               	return	
  3247                           
  3248                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  3249   00104C  5006               	movf	i2MensajeLCD_Var@a^0,w,c
  3250   00104E  2408               	addwf	i2MensajeLCD_Var@i^0,w,c
  3251   001050  6E07               	movwf	??i2_MensajeLCD_Var^0,c
  3252   001052  C007  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  3253   001056                     	if	1	;There is more than 1 active tblptr byte
  3254   001056  0E08               	movlw	high __smallconst
  3255   001058  6EF7               	movwf	tblptrh,c
  3256   00105A                     	endif
  3257   00105A                     	if	0	;tblptru may be non-zero
  3258   00105A                     	endif
  3259   00105A                     	if	0	;tblptru may be non-zero
  3260   00105A                     	endif
  3261   00105A  0008               	tblrd		*
  3262   00105C  50F5               	movf	tablat,w,c
  3263   00105E  EC65  F009         	call	i2_EscribeLCD_c
  3264   001062  4A08               	infsnz	i2MensajeLCD_Var@i^0,f,c
  3265   001064  2A09               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  3266   001066                     i2l1844:
  3267   001066  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  3268   00106A  ECE0  F008         	call	i2_strlen	;wreg free
  3269   00106E  5001               	movf	?i2_strlen^0,w,c
  3270   001070  5C08               	subwf	i2MensajeLCD_Var@i^0,w,c
  3271   001072  5002               	movf	(?i2_strlen+1)^0,w,c
  3272   001074  5809               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  3273   001076  B0D8               	btfsc	status,0,c
  3274   001078  0012               	return	
  3275   00107A  D7DC               	goto	i2l1836
  3276   00107C                     __end_ofi2_MensajeLCD_Var:
  3277                           	callstack 0
  3278                           
  3279 ;; *************** function i2_strlen *****************
  3280 ;; Defined at:
  3281 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  3282 ;; Parameters:    Size  Location     Type
  3283 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3284 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  3285 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  3286 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  3287 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;  cp              1    2[COMRAM] PTR const unsigned char 
  3290 ;;		 -> STR_16(11), STR_15(12), STR_14(16), STR_13(3), 
  3291 ;;		 -> STR_12(9), STR_11(15), STR_10(3), STR_9(11), 
  3292 ;;		 -> STR_8(10), STR_7(3), STR_6(9), STR_5(17), 
  3293 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  2    0[COMRAM] unsigned int 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3303 ;;      Params:         2       0       0       0       0       0       0       0       0
  3304 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3306 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3307 ;;Total ram usage:        3 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; This function calls:
  3310 ;;		Nothing
  3311 ;; This function is called by:
  3312 ;;		i2_MensajeLCD_Var
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text25
  3317   0011C0                     __ptext25:
  3318                           	callstack 0
  3319   0011C0                     i2_strlen:
  3320                           	callstack 23
  3321                           
  3322                           ;incstack = 0
  3323   0011C0  C001  F003         	movff	i2strlen@s,i2strlen@cp
  3324   0011C4  D001               	goto	i2l1722
  3325   0011C6                     i2l1720:
  3326   0011C6  2A03               	incf	i2strlen@cp^0,f,c
  3327   0011C8                     i2l1722:
  3328   0011C8  C003  FFF6         	movff	i2strlen@cp,tblptrl
  3329   0011CC                     	if	1	;There is more than 1 active tblptr byte
  3330   0011CC  0E08               	movlw	high __smallconst
  3331   0011CE  6EF7               	movwf	tblptrh,c
  3332   0011D0                     	endif
  3333   0011D0                     	if	0	;tblptru may be non-zero
  3334   0011D0                     	endif
  3335   0011D0                     	if	0	;tblptru may be non-zero
  3336   0011D0                     	endif
  3337   0011D0  0008               	tblrd		*
  3338   0011D2  50F5               	movf	tablat,w,c
  3339   0011D4  0900               	iorlw	0
  3340   0011D6  A4D8               	btfss	status,2,c
  3341   0011D8  D7F6               	goto	i2l1720
  3342   0011DA  5001               	movf	i2strlen@s^0,w,c
  3343   0011DC  5C03               	subwf	i2strlen@cp^0,w,c
  3344   0011DE  6E01               	movwf	?i2_strlen^0,c
  3345   0011E0  6A02               	clrf	(?i2_strlen+1)^0,c
  3346   0011E2  BE01               	btfsc	?i2_strlen^0,7,c
  3347   0011E4  0602               	decf	(?i2_strlen+1)^0,f,c
  3348   0011E6  0012               	return		;funcret
  3349   0011E8                     __end_ofi2_strlen:
  3350                           	callstack 0
  3351                           
  3352 ;; *************** function i2_EscribeLCD_c *****************
  3353 ;; Defined at:
  3354 ;;		line 118 in file "LibLCDXC8.h"
  3355 ;; Parameters:    Size  Location     Type
  3356 ;;  a               1    wreg     unsigned char 
  3357 ;; Auto vars:     Size  Location     Type
  3358 ;;  a               1    4[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         0       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        1 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 2
  3375 ;; This function calls:
  3376 ;;		i2_EnviaDato
  3377 ;;		i2_HabilitaLCD
  3378 ;;		i2_RetardoLCD
  3379 ;; This function is called by:
  3380 ;;		_ISR
  3381 ;;		i2_MensajeLCD_Var
  3382 ;;		i2_Recibir_Cadena
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text26
  3387   0012CA                     __ptext26:
  3388                           	callstack 0
  3389   0012CA                     i2_EscribeLCD_c:
  3390                           	callstack 21
  3391                           
  3392                           ;incstack = 0
  3393                           ;i2EscribeLCD_c@a stored from wreg
  3394   0012CA  6E05               	movwf	i2EscribeLCD_c@a^0,c
  3395                           
  3396                           ;LibLCDXC8.h: 122: LATD2=1;
  3397   0012CC  848C               	bsf	3980,2,c	;volatile
  3398                           
  3399                           ;LibLCDXC8.h: 123: EnviaDato(a);
  3400   0012CE  5005               	movf	i2EscribeLCD_c@a^0,w,c
  3401   0012D0  EC61  F008         	call	i2_EnviaDato
  3402                           
  3403                           ;LibLCDXC8.h: 124: HabilitaLCD();
  3404   0012D4  EC96  F009         	call	i2_HabilitaLCD	;wreg free
  3405                           
  3406                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  3407   0012D8  0E04               	movlw	4
  3408   0012DA  EC90  F007         	call	i2_RetardoLCD
  3409   0012DE  0012               	return		;funcret
  3410   0012E0                     __end_ofi2_EscribeLCD_c:
  3411                           	callstack 0
  3412                           
  3413 ;; *************** function i2_DireccionaLCD *****************
  3414 ;; Defined at:
  3415 ;;		line 227 in file "LibLCDXC8.h"
  3416 ;; Parameters:    Size  Location     Type
  3417 ;;  a               1    wreg     unsigned char 
  3418 ;; Auto vars:     Size  Location     Type
  3419 ;;  a               1    4[COMRAM] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  1    wreg      void 
  3422 ;; Registers used:
  3423 ;;		wreg, status,2, status,0, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3433 ;;Total ram usage:        1 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 2
  3436 ;; This function calls:
  3437 ;;		i2_EnviaDato
  3438 ;;		i2_HabilitaLCD
  3439 ;;		i2_RetardoLCD
  3440 ;; This function is called by:
  3441 ;;		_ISR
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text27
  3446   0012E0                     __ptext27:
  3447                           	callstack 0
  3448   0012E0                     i2_DireccionaLCD:
  3449                           	callstack 22
  3450                           
  3451                           ;incstack = 0
  3452                           ;i2DireccionaLCD@a stored from wreg
  3453   0012E0  6E05               	movwf	i2DireccionaLCD@a^0,c
  3454                           
  3455                           ;LibLCDXC8.h: 230: LATD2=0;
  3456   0012E2  948C               	bcf	3980,2,c	;volatile
  3457                           
  3458                           ;LibLCDXC8.h: 231: EnviaDato(a);
  3459   0012E4  5005               	movf	i2DireccionaLCD@a^0,w,c
  3460   0012E6  EC61  F008         	call	i2_EnviaDato
  3461                           
  3462                           ;LibLCDXC8.h: 232: HabilitaLCD();
  3463   0012EA  EC96  F009         	call	i2_HabilitaLCD	;wreg free
  3464                           
  3465                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  3466   0012EE  0E04               	movlw	4
  3467   0012F0  EC90  F007         	call	i2_RetardoLCD
  3468   0012F4  0012               	return		;funcret
  3469   0012F6                     __end_ofi2_DireccionaLCD:
  3470                           	callstack 0
  3471                           
  3472 ;; *************** function i2_BorraLCD *****************
  3473 ;; Defined at:
  3474 ;;		line 105 in file "LibLCDXC8.h"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, status,2, status,0, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3488 ;;      Params:         0       0       0       0       0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used: 1
  3494 ;; Hardware stack levels required when called: 2
  3495 ;; This function calls:
  3496 ;;		i2_EnviaDato
  3497 ;;		i2_HabilitaLCD
  3498 ;;		i2_RetardoLCD
  3499 ;; This function is called by:
  3500 ;;		_ISR
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text28
  3505   00130A                     __ptext28:
  3506                           	callstack 0
  3507   00130A                     i2_BorraLCD:
  3508                           	callstack 22
  3509                           
  3510                           ;LibLCDXC8.h: 107: LATD2=0;
  3511                           
  3512                           ;incstack = 0
  3513   00130A  948C               	bcf	3980,2,c	;volatile
  3514                           
  3515                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  3516   00130C  0E01               	movlw	1
  3517   00130E  EC61  F008         	call	i2_EnviaDato
  3518                           
  3519                           ;LibLCDXC8.h: 109: HabilitaLCD();
  3520   001312  EC96  F009         	call	i2_HabilitaLCD	;wreg free
  3521                           
  3522                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  3523   001316  0E02               	movlw	2
  3524   001318  EC90  F007         	call	i2_RetardoLCD
  3525   00131C  0012               	return		;funcret
  3526   00131E                     __end_ofi2_BorraLCD:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function i2_EnviaDato *****************
  3530 ;; Defined at:
  3531 ;;		line 54 in file "LibLCDXC8.h"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  a               1    wreg     unsigned char 
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;  a               1    3[COMRAM] unsigned char 
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0, cstack
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3545 ;;      Params:         0       0       0       0       0       0       0       0       0
  3546 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3548 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3549 ;;Total ram usage:        2 bytes
  3550 ;; Hardware stack levels used: 1
  3551 ;; Hardware stack levels required when called: 1
  3552 ;; This function calls:
  3553 ;;		i2_HabilitaLCD
  3554 ;;		i2_RetardoLCD
  3555 ;; This function is called by:
  3556 ;;		i2_BorraLCD
  3557 ;;		i2_EscribeLCD_c
  3558 ;;		i2_DireccionaLCD
  3559 ;; This function uses a non-reentrant model
  3560 ;;
  3561                           
  3562                           	psect	text29
  3563   0010C2                     __ptext29:
  3564                           	callstack 0
  3565   0010C2                     i2_EnviaDato:
  3566                           	callstack 21
  3567                           
  3568                           ;incstack = 0
  3569                           ;i2EnviaDato@a stored from wreg
  3570   0010C2  6E04               	movwf	i2EnviaDato@a^0,c
  3571                           
  3572                           ;LibLCDXC8.h: 55: if(interfaz==4){
  3573   0010C4  0E04               	movlw	4
  3574   0010C6  183A               	xorwf	_interfaz^0,w,c
  3575   0010C8  A4D8               	btfss	status,2,c
  3576   0010CA  D017               	goto	i2l1632
  3577                           
  3578                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  3579   0010CC  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3580   0010D0  0EF0               	movlw	240
  3581   0010D2  1603               	andwf	??i2_EnviaDato^0,f,c
  3582   0010D4  508C               	movf	140,w,c	;volatile
  3583   0010D6  0B0F               	andlw	15
  3584   0010D8  1003               	iorwf	??i2_EnviaDato^0,w,c
  3585   0010DA  6E8C               	movwf	140,c	;volatile
  3586                           
  3587                           ;LibLCDXC8.h: 57: HabilitaLCD();
  3588   0010DC  EC96  F009         	call	i2_HabilitaLCD	;wreg free
  3589                           
  3590                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  3591   0010E0  0E01               	movlw	1
  3592   0010E2  EC90  F007         	call	i2_RetardoLCD
  3593                           
  3594                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  3595   0010E6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  3596   0010EA  3A03               	swapf	??i2_EnviaDato^0,f,c
  3597   0010EC  0EF0               	movlw	240
  3598   0010EE  1603               	andwf	??i2_EnviaDato^0,f,c
  3599   0010F0  508C               	movf	140,w,c	;volatile
  3600   0010F2  0B0F               	andlw	15
  3601   0010F4  1003               	iorwf	??i2_EnviaDato^0,w,c
  3602   0010F6  6E8C               	movwf	140,c	;volatile
  3603                           
  3604                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  3605   0010F8  0012               	return	
  3606   0010FA                     i2l1632:
  3607   0010FA  0E08               	movlw	8
  3608   0010FC  183A               	xorwf	_interfaz^0,w,c
  3609   0010FE  A4D8               	btfss	status,2,c
  3610   001100  0012               	return	
  3611                           
  3612                           ;LibLCDXC8.h: 61: LATD=a;
  3613   001102  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  3614   001106  0012               	return		;funcret
  3615   001108                     __end_ofi2_EnviaDato:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function i2_RetardoLCD *****************
  3619 ;; Defined at:
  3620 ;;		line 262 in file "LibLCDXC8.h"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  a               1    wreg     unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  a               1    1[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3634 ;;      Params:         0       0       0       0       0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3636 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3637 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		i2_EnviaDato
  3644 ;;		i2_BorraLCD
  3645 ;;		i2_EscribeLCD_c
  3646 ;;		i2_DireccionaLCD
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text30
  3651   000F20                     __ptext30:
  3652                           	callstack 0
  3653   000F20                     i2_RetardoLCD:
  3654                           	callstack 22
  3655                           
  3656                           ;incstack = 0
  3657                           ;i2RetardoLCD@a stored from wreg
  3658   000F20  6E02               	movwf	i2RetardoLCD@a^0,c
  3659                           
  3660                           ;LibLCDXC8.h: 263: switch(a){
  3661   000F22  D023               	goto	i2l1610
  3662   000F24                     i2l1600:
  3663   000F24  0E62               	movlw	98
  3664   000F26  6E01               	movwf	??i2_RetardoLCD^0,c
  3665   000F28  0E66               	movlw	102
  3666   000F2A                     i2u94_47:
  3667   000F2A  2EE8               	decfsz	wreg,f,c
  3668   000F2C  D7FE               	bra	i2u94_47
  3669   000F2E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3670   000F30  D7FC               	bra	i2u94_47
  3671                           
  3672                           ;LibLCDXC8.h: 266: break;
  3673   000F32  0012               	return	
  3674   000F34                     i2l1602:
  3675   000F34  0E07               	movlw	7
  3676   000F36  6E01               	movwf	??i2_RetardoLCD^0,c
  3677   000F38  0E7D               	movlw	125
  3678   000F3A                     i2u95_47:
  3679   000F3A  2EE8               	decfsz	wreg,f,c
  3680   000F3C  D7FE               	bra	i2u95_47
  3681   000F3E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3682   000F40  D7FC               	bra	i2u95_47
  3683   000F42  F000               	nop	
  3684                           
  3685                           ;LibLCDXC8.h: 268: _delay((unsigned long)((640)*(20000000/4000000.0)));
  3686   000F44  0E05               	movlw	5
  3687   000F46  6E01               	movwf	??i2_RetardoLCD^0,c
  3688   000F48  0E26               	movlw	38
  3689   000F4A                     i2u96_47:
  3690   000F4A  2EE8               	decfsz	wreg,f,c
  3691   000F4C  D7FE               	bra	i2u96_47
  3692   000F4E  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  3693   000F50  D7FC               	bra	i2u96_47
  3694   000F52  D000               	nop2	
  3695                           
  3696                           ;LibLCDXC8.h: 270: break;
  3697   000F54  0012               	return	
  3698   000F56                     i2l1604:
  3699   000F56  0EA6               	movlw	166
  3700   000F58                     i2u97_47:
  3701   000F58  2EE8               	decfsz	wreg,f,c
  3702   000F5A  D7FE               	bra	i2u97_47
  3703   000F5C  D000               	nop2	
  3704                           
  3705                           ;LibLCDXC8.h: 273: break;
  3706   000F5E  0012               	return	
  3707   000F60                     i2l1606:
  3708   000F60  0E42               	movlw	66
  3709   000F62                     i2u98_47:
  3710   000F62  2EE8               	decfsz	wreg,f,c
  3711   000F64  D7FE               	bra	i2u98_47
  3712   000F66  D000               	nop2	
  3713                           
  3714                           ;LibLCDXC8.h: 276: break;
  3715   000F68  0012               	return	
  3716   000F6A                     i2l1610:
  3717   000F6A  5002               	movf	i2RetardoLCD@a^0,w,c
  3718                           
  3719                           ; Switch size 1, requested type "simple"
  3720                           ; Number of cases is 4, Range of values is 1 to 4
  3721                           ; switch strategies available:
  3722                           ; Name         Instructions Cycles
  3723                           ; simple_byte           13     7 (average)
  3724                           ;	Chosen strategy is simple_byte
  3725   000F6C  0A01               	xorlw	1	; case 1
  3726   000F6E  B4D8               	btfsc	status,2,c
  3727   000F70  D7D9               	goto	i2l1600
  3728   000F72  0A03               	xorlw	3	; case 2
  3729   000F74  B4D8               	btfsc	status,2,c
  3730   000F76  D7DE               	goto	i2l1602
  3731   000F78  0A01               	xorlw	1	; case 3
  3732   000F7A  B4D8               	btfsc	status,2,c
  3733   000F7C  D7EC               	goto	i2l1604
  3734   000F7E  0A07               	xorlw	7	; case 4
  3735   000F80  A4D8               	btfss	status,2,c
  3736   000F82  0012               	return	
  3737   000F84  D7ED               	goto	i2l1606
  3738   000F86                     __end_ofi2_RetardoLCD:
  3739                           	callstack 0
  3740                           
  3741 ;; *************** function i2_HabilitaLCD *****************
  3742 ;; Defined at:
  3743 ;;		line 98 in file "LibLCDXC8.h"
  3744 ;; Parameters:    Size  Location     Type
  3745 ;;		None
  3746 ;; Auto vars:     Size  Location     Type
  3747 ;;		None
  3748 ;; Return value:  Size  Location     Type
  3749 ;;                  1    wreg      void 
  3750 ;; Registers used:
  3751 ;;		wreg
  3752 ;; Tracked objects:
  3753 ;;		On entry : 0/0
  3754 ;;		On exit  : 0/0
  3755 ;;		Unchanged: 0/0
  3756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3757 ;;      Params:         0       0       0       0       0       0       0       0       0
  3758 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3759 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3760 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3761 ;;Total ram usage:        0 bytes
  3762 ;; Hardware stack levels used: 1
  3763 ;; This function calls:
  3764 ;;		Nothing
  3765 ;; This function is called by:
  3766 ;;		i2_EnviaDato
  3767 ;;		i2_BorraLCD
  3768 ;;		i2_EscribeLCD_c
  3769 ;;		i2_DireccionaLCD
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text31
  3774   00132C                     __ptext31:
  3775                           	callstack 0
  3776   00132C                     i2_HabilitaLCD:
  3777                           	callstack 22
  3778                           
  3779                           ;LibLCDXC8.h: 100: LATD3=1;
  3780                           
  3781                           ;incstack = 0
  3782   00132C  868C               	bsf	3980,3,c	;volatile
  3783                           
  3784                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  3785   00132E  0E42               	movlw	66
  3786   001330                     i2u99_47:
  3787   001330  2EE8               	decfsz	wreg,f,c
  3788   001332  D7FE               	bra	i2u99_47
  3789   001334  D000               	nop2	
  3790                           
  3791                           ;LibLCDXC8.h: 103: LATD3=0;
  3792   001336  968C               	bcf	3980,3,c	;volatile
  3793   001338  0012               	return		;funcret
  3794   00133A                     __end_ofi2_HabilitaLCD:
  3795                           	callstack 0
  3796                           
  3797                           	psect	rparam
  3798   000000                     
  3799                           	psect	temp
  3800   00003B                     btemp:
  3801                           	callstack 0
  3802   00003B                     	ds	1
  3803   000000                     int$flags	set	btemp
  3804   000000                     wtemp8	set	btemp+1
  3805   000000                     ttemp5	set	btemp+1
  3806   000000                     ttemp6	set	btemp+4
  3807   000000                     ttemp7	set	btemp+8
  3808                           
  3809                           	psect	idloc
  3810                           
  3811                           ;Config register IDLOC0 @ 0x200000
  3812                           ;	unspecified, using default values
  3813   200000                     	org	2097152
  3814   200000  FF                 	db	255
  3815                           
  3816                           ;Config register IDLOC1 @ 0x200001
  3817                           ;	unspecified, using default values
  3818   200001                     	org	2097153
  3819   200001  FF                 	db	255
  3820                           
  3821                           ;Config register IDLOC2 @ 0x200002
  3822                           ;	unspecified, using default values
  3823   200002                     	org	2097154
  3824   200002  FF                 	db	255
  3825                           
  3826                           ;Config register IDLOC3 @ 0x200003
  3827                           ;	unspecified, using default values
  3828   200003                     	org	2097155
  3829   200003  FF                 	db	255
  3830                           
  3831                           ;Config register IDLOC4 @ 0x200004
  3832                           ;	unspecified, using default values
  3833   200004                     	org	2097156
  3834   200004  FF                 	db	255
  3835                           
  3836                           ;Config register IDLOC5 @ 0x200005
  3837                           ;	unspecified, using default values
  3838   200005                     	org	2097157
  3839   200005  FF                 	db	255
  3840                           
  3841                           ;Config register IDLOC6 @ 0x200006
  3842                           ;	unspecified, using default values
  3843   200006                     	org	2097158
  3844   200006  FF                 	db	255
  3845                           
  3846                           ;Config register IDLOC7 @ 0x200007
  3847                           ;	unspecified, using default values
  3848   200007                     	org	2097159
  3849   200007  FF                 	db	255
  3850                           
  3851                           	psect	config
  3852                           
  3853                           ;Config register CONFIG1L @ 0x300000
  3854                           ;	unspecified, using default values
  3855                           ;	PLL Prescaler Selection bits
  3856                           ;	PLLDIV = 0x0, unprogrammed default
  3857                           ;	System Clock Postscaler Selection bits
  3858                           ;	CPUDIV = 0x0, unprogrammed default
  3859                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3860                           ;	USBDIV = 0x0, unprogrammed default
  3861   300000                     	org	3145728
  3862   300000  00                 	db	0
  3863                           
  3864                           ;Config register CONFIG1H @ 0x300001
  3865                           ;	Oscillator Selection bits
  3866                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3867                           ;	Fail-Safe Clock Monitor Enable bit
  3868                           ;	FCMEN = 0x0, unprogrammed default
  3869                           ;	Internal/External Oscillator Switchover bit
  3870                           ;	IESO = 0x0, unprogrammed default
  3871   300001                     	org	3145729
  3872   300001  09                 	db	9
  3873                           
  3874                           ;Config register CONFIG2L @ 0x300002
  3875                           ;	unspecified, using default values
  3876                           ;	Power-up Timer Enable bit
  3877                           ;	PWRT = 0x1, unprogrammed default
  3878                           ;	Brown-out Reset Enable bits
  3879                           ;	BOR = 0x3, unprogrammed default
  3880                           ;	Brown-out Reset Voltage bits
  3881                           ;	BORV = 0x3, unprogrammed default
  3882                           ;	USB Voltage Regulator Enable bit
  3883                           ;	VREGEN = 0x0, unprogrammed default
  3884   300002                     	org	3145730
  3885   300002  1F                 	db	31
  3886                           
  3887                           ;Config register CONFIG2H @ 0x300003
  3888                           ;	Watchdog Timer Enable bit
  3889                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3890                           ;	Watchdog Timer Postscale Select bits
  3891                           ;	WDTPS = 0xF, unprogrammed default
  3892   300003                     	org	3145731
  3893   300003  1E                 	db	30
  3894                           
  3895                           ; Padding undefined space
  3896   300004                     	org	3145732
  3897   300004  FF                 	db	255
  3898                           
  3899                           ;Config register CONFIG3H @ 0x300005
  3900                           ;	CCP2 MUX bit
  3901                           ;	CCP2MX = 0x1, unprogrammed default
  3902                           ;	PORTB A/D Enable bit
  3903                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3904                           ;	Low-Power Timer 1 Oscillator Enable bit
  3905                           ;	LPT1OSC = 0x0, unprogrammed default
  3906                           ;	MCLR Pin Enable bit
  3907                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3908   300005                     	org	3145733
  3909   300005  81                 	db	129
  3910                           
  3911                           ;Config register CONFIG4L @ 0x300006
  3912                           ;	Stack Full/Underflow Reset Enable bit
  3913                           ;	STVREN = 0x1, unprogrammed default
  3914                           ;	Single-Supply ICSP Enable bit
  3915                           ;	LVP = OFF, Single-Supply ICSP disabled
  3916                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3917                           ;	ICPRT = 0x0, unprogrammed default
  3918                           ;	Extended Instruction Set Enable bit
  3919                           ;	XINST = 0x0, unprogrammed default
  3920                           ;	Background Debugger Enable bit
  3921                           ;	DEBUG = 0x1, unprogrammed default
  3922   300006                     	org	3145734
  3923   300006  81                 	db	129
  3924                           
  3925                           ; Padding undefined space
  3926   300007                     	org	3145735
  3927   300007  FF                 	db	255
  3928                           
  3929                           ;Config register CONFIG5L @ 0x300008
  3930                           ;	unspecified, using default values
  3931                           ;	Code Protection bit
  3932                           ;	CP0 = 0x1, unprogrammed default
  3933                           ;	Code Protection bit
  3934                           ;	CP1 = 0x1, unprogrammed default
  3935                           ;	Code Protection bit
  3936                           ;	CP2 = 0x1, unprogrammed default
  3937                           ;	Code Protection bit
  3938                           ;	CP3 = 0x1, unprogrammed default
  3939   300008                     	org	3145736
  3940   300008  0F                 	db	15
  3941                           
  3942                           ;Config register CONFIG5H @ 0x300009
  3943                           ;	unspecified, using default values
  3944                           ;	Boot Block Code Protection bit
  3945                           ;	CPB = 0x1, unprogrammed default
  3946                           ;	Data EEPROM Code Protection bit
  3947                           ;	CPD = 0x1, unprogrammed default
  3948   300009                     	org	3145737
  3949   300009  C0                 	db	192
  3950                           
  3951                           ;Config register CONFIG6L @ 0x30000A
  3952                           ;	unspecified, using default values
  3953                           ;	Write Protection bit
  3954                           ;	WRT0 = 0x1, unprogrammed default
  3955                           ;	Write Protection bit
  3956                           ;	WRT1 = 0x1, unprogrammed default
  3957                           ;	Write Protection bit
  3958                           ;	WRT2 = 0x1, unprogrammed default
  3959                           ;	Write Protection bit
  3960                           ;	WRT3 = 0x1, unprogrammed default
  3961   30000A                     	org	3145738
  3962   30000A  0F                 	db	15
  3963                           
  3964                           ;Config register CONFIG6H @ 0x30000B
  3965                           ;	unspecified, using default values
  3966                           ;	Configuration Register Write Protection bit
  3967                           ;	WRTC = 0x1, unprogrammed default
  3968                           ;	Boot Block Write Protection bit
  3969                           ;	WRTB = 0x1, unprogrammed default
  3970                           ;	Data EEPROM Write Protection bit
  3971                           ;	WRTD = 0x1, unprogrammed default
  3972   30000B                     	org	3145739
  3973   30000B  E0                 	db	224
  3974                           
  3975                           ;Config register CONFIG7L @ 0x30000C
  3976                           ;	unspecified, using default values
  3977                           ;	Table Read Protection bit
  3978                           ;	EBTR0 = 0x1, unprogrammed default
  3979                           ;	Table Read Protection bit
  3980                           ;	EBTR1 = 0x1, unprogrammed default
  3981                           ;	Table Read Protection bit
  3982                           ;	EBTR2 = 0x1, unprogrammed default
  3983                           ;	Table Read Protection bit
  3984                           ;	EBTR3 = 0x1, unprogrammed default
  3985   30000C                     	org	3145740
  3986   30000C  0F                 	db	15
  3987                           
  3988                           ;Config register CONFIG7H @ 0x30000D
  3989                           ;	unspecified, using default values
  3990                           ;	Boot Block Table Read Protection bit
  3991                           ;	EBTRB = 0x1, unprogrammed default
  3992   30000D                     	org	3145741
  3993   30000D  40                 	db	64
  3994                           tosu	equ	0xFFF
  3995                           tosh	equ	0xFFE
  3996                           tosl	equ	0xFFD
  3997                           stkptr	equ	0xFFC
  3998                           pclatu	equ	0xFFB
  3999                           pclath	equ	0xFFA
  4000                           pcl	equ	0xFF9
  4001                           tblptru	equ	0xFF8
  4002                           tblptrh	equ	0xFF7
  4003                           tblptrl	equ	0xFF6
  4004                           tablat	equ	0xFF5
  4005                           prodh	equ	0xFF4
  4006                           prodl	equ	0xFF3
  4007                           indf0	equ	0xFEF
  4008                           postinc0	equ	0xFEE
  4009                           postdec0	equ	0xFED
  4010                           preinc0	equ	0xFEC
  4011                           plusw0	equ	0xFEB
  4012                           fsr0h	equ	0xFEA
  4013                           fsr0l	equ	0xFE9
  4014                           wreg	equ	0xFE8
  4015                           indf1	equ	0xFE7
  4016                           postinc1	equ	0xFE6
  4017                           postdec1	equ	0xFE5
  4018                           preinc1	equ	0xFE4
  4019                           plusw1	equ	0xFE3
  4020                           fsr1h	equ	0xFE2
  4021                           fsr1l	equ	0xFE1
  4022                           bsr	equ	0xFE0
  4023                           indf2	equ	0xFDF
  4024                           postinc2	equ	0xFDE
  4025                           postdec2	equ	0xFDD
  4026                           preinc2	equ	0xFDC
  4027                           plusw2	equ	0xFDB
  4028                           fsr2h	equ	0xFDA
  4029                           fsr2l	equ	0xFD9
  4030                           status	equ	0xFD8

Data Sizes:
    Strings     142
    Constant    0
    Data        1
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     43      58
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[3]), 
		 -> STR_12(CODE[9]), STR_11(CODE[15]), STR_10(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[10]), STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[17]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[3]), 
		 -> STR_12(CODE[9]), STR_11(CODE[15]), STR_10(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[10]), STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[17]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    Recibir_Cadena@Buffer	PTR unsigned char  size(1) Largest target is 10
		 -> Minimo_Consola(COMRAM[10]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_16(CODE[11]), STR_15(CODE[12]), STR_14(CODE[16]), STR_13(CODE[3]), 
		 -> STR_12(CODE[9]), STR_11(CODE[15]), STR_10(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[10]), STR_7(CODE[3]), STR_6(CODE[9]), STR_5(CODE[17]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_Recibir_Cadena
    _TransmitirDatos->_MensajeLCD_Var
    ___lbdiv->___lbmod
    _MensajeLCD_Var->_EscribeLCD_c
    _DireccionaLCD->_EnviaDato
    _Recibir_Cadena->___wmul
    _EscribeLCD_c->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_Recibir_Cadena
    i2_Recibir_Cadena->i2___wmul
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_DireccionaLCD->i2_EnviaDato
    i2_BorraLCD->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6294
                                             40 COMRAM     3     3      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                     _Recibir_Cadena
                           _SaveData
                    _TransmitirDatos
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             25 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                      6     4      2    2674
                                             34 COMRAM     4     2      2
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                         _Transmitir
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     463
                                             25 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     466
                                             29 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       4     3      1    1450
                                             30 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                             25 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                             29 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _SaveData                                             3     0      3     196
                                             25 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Recibir_Cadena                                      11     8      3    1210
                                             31 COMRAM     9     6      3
                       _EscribeLCD_c
                            _Recibir
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     463
                                             25 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Recibir                                              2     0      2       0
                                             25 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                             29 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                             27 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                             25 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                             25 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 10    10      0    1764
                                             15 COMRAM    10    10      0
                         i2_BorraLCD
                    i2_DireccionaLCD
                     i2_EscribeLCD_c
                   i2_MensajeLCD_Var
                   i2_Recibir_Cadena
 ---------------------------------------------------------------------------------
 (7) i2_Recibir_Cadena                                    11     8      3     852
                                              6 COMRAM     9     6      3
                     i2_EscribeLCD_c
                          i2_Recibir
                           i2___wmul
 ---------------------------------------------------------------------------------
 (8) i2___wmul                                             6     2      4     263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) i2_Recibir                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     4     3      1     538
                                              5 COMRAM     4     3      1
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             3     1      2     116
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_DireccionaLCD                                      1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (7) i2_BorraLCD                                           0     0      0     110
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _Recibir_Cadena
     _EscribeLCD_c
     _Recibir
     ___wmul
   _SaveData
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
     _Transmitir
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   ___lwdiv

 _ISR (ROOT)
   i2_BorraLCD
     i2_EnviaDato
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_DireccionaLCD
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_EscribeLCD_c
     i2_EnviaDato
     i2_HabilitaLCD
     i2_RetardoLCD
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
     i2_strlen
   i2_Recibir_Cadena
     i2_EscribeLCD_c
     i2_Recibir
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      39        0.0%
BIGRAM             3EE      0       0      40        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2B      3A       1       61.7%
BITBIGSFRlhhl       12      0       0      35        0.0%
BITBIGSFRll          D      0       0      37        0.0%
BITBIGSFRlhhh        9      0       0      34        0.0%
BITBIGSFR_5h         9      0       0      19        0.0%
BITBIGSFR_1hhhl      8      0       0      25        0.0%
BITBIGSFR_1hlh       8      0       0      28        0.0%
BITBIGSFRhhh         6      0       0      32        0.0%
BITBIGSFRhl          6      0       0      33        0.0%
BITBIGSFR_2          6      0       0      23        0.0%
BITBIGSFR_1lhll      4      0       0      30        0.0%
BITBIGSFR_1hhhh      3      0       0      24        0.0%
BITBIGSFR_4          3      0       0      21        0.0%
BITBIGSFR_3          3      0       0      22        0.0%
BITBIGSFR_1hhlh      2      0       0      26        0.0%
BITBIGSFR_1lhh       1      0       0      29        0.0%
BITBIGSFRlhl         1      0       0      36        0.0%
BITBIGSFR_1hhll      1      0       0      27        0.0%
BITBIGSFR_5l         1      0       0      20        0.0%
BITBIGSFR_1ll        1      0       0      31        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3A      38        0.0%
DATA                 0      0      3A      41        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Jun 08 22:01:15 2023

       Transmitir@BufferT 001A          i2DireccionaLCD@a 0005                        _WR 007D31  
              EnviaDato@a 001D       ___wmul@multiplicand 001C             _InicializaLCD 0E1E  
                     l208 1294                       l225 1204                       l186 0A4A  
                     l189 0A50                       l720 0FCE                       _GIE 007F97  
                     _RC0 007C10                       _RC1 007C11                       u190 126C  
                     u510 1124                       _PR2 000FCB                       u600 0D42  
                     _ISR 0008                       u630 0FA8                       u807 09C2  
                     u817 09DE                       u907 1322                       u827 09FA  
                     u837 0A16                       u847 0A42                       u767 08AA  
                     u857 0EC4                       u777 0922                       u867 0ED4  
                     u787 0952                       u877 0EE4                       u797 09A0  
                     u887 0EF2                       u897 0EFC                       wreg 000FE8  
                    ?_ISR 0001          ??i2_EscribeLCD_c 0005                      l1000 0EBE  
                    l1002 0ECE                      l1010 0F04                      l1004 0EF0  
                    l1006 0EFA                      l1022 10B4                      l1200 0E30  
                    l1210 0E4E                      l1106 133C                      l1220 0E6C  
                    l2030 0AA8                      l1240 0EA4                      l2008 0A30  
                    l1614 119E                      l1616 11A0                      l1810 0F9C  
                    l1812 0FA4                      l1734 0CA2                      l1638 0FE2  
                    l1646 1014                      l1822 0FC4                      l1664 111A  
                    l1680 113E                      l1754 0D24                      l1746 0CF8  
                    l1748 0D06                      l1676 1136                      l1668 1120  
                    l1758 0D2E                      l1694 1190                      l1686 1178  
                    _CFGS 007D36                      _EEIF 007D0C                      STR_1 0831  
                    STR_2 0863                      STR_3 083F                      STR_4 086E  
                    STR_5 0801                      STR_6 0883                      STR_7 088C  
                    STR_8 0879                      STR_9 0858                      _CREN 007D5C  
                    _LATD 000F8C                      _RCIE 007CED                      _RCIF 007CF5  
                    _OERR 007D59                      _RBPU 007F8F                      _TMR1 000FCE  
                    _TMR2 000FCC                      _TRMT 007D61                      _WREN 007D32  
          ??_EscribeLCD_c 001E                      _main 0890                      fsr2h 000FDA  
                    indf2 000FDF                      fsr2l 000FD9                      btemp 003B  
                    prodh 000FF4                      prodl 000FF3                      start 000E  
            ___param_bank 000000                     ??_ISR 0010           __end_of_Recibir 129E  
         i2_DireccionaLCD 12E0            ?_InicializaLCD 0001                     ?_main 0001  
         __end_of___lbdiv 1142                     _EEADR 000FA9                     STR_10 088C  
                   _CCPR2 000FBB                     STR_11 0822                     STR_12 0883  
                   STR_13 088C                     STR_14 0812                     STR_15 084C  
                   STR_16 0858             EscribeLCD_c@a 001E           __end_of___lbmod 1198  
                   _EEPGD 007D37                     _T1CON 000FCD                     _T2CON 000FCA  
                   _LATD2 007C62                     _LATD3 007C63           __end_of___lwdiv 0FD8  
                   i2l208 12C0                     i2l238 0B7E                     _RCREG 000FAE  
                   _RCSTA 000FAB                     _SPBRG 000FAF                     _USBEN 007B6B  
                   _TRISC 000F94                     _TRISD 000F95                     _TXREG 000FAD  
                   _TXSTA 000FAC                     _Tecla 002F           Recibir_Cadena@c 0024  
         Recibir_Cadena@i 0027               ?i2_BorraLCD 0001                     tablat 000FF5  
             _HabilitaLCD 131E          __end_ofi2___wmul 125A                     ttemp5 003C  
                   ttemp6 003F                     ttemp7 0043                     status 000FD8  
                   wtemp8 003C           ___lbdiv@divisor 001E           ___lbdiv@counter 0020  
        __end_ofi2_strlen 11E8          __end_of_BorraLCD 130A           __initialization 1142  
            __end_of_main 0AAE          i2_MensajeLCD_Var 102A          __end_of_SaveData 120E  
                  ??_main 0029      __end_of_ConfiguraLCD 1272             __activetblptr 000002  
              i2strlen@cp 0003                    _ADCON1 000FC1                    _CCP2IE 007D00  
                  _CCP2IF 007D08                    _EEDATA 000FA8            DireccionaLCD@a 001E  
                  _CCPR1L 000FBE                    _EECON2 000FA7                    _INT0IE 007F94  
                  _INT0IF 007F91                    i2l2070 0B7C                    i2l1600 0F24  
                  i2l1602 0F34                    i2l1610 0F6A                    i2l1604 0F56  
                  i2l1606 0F60                    i2l1632 10FA                    i2l1720 11C6  
                  i2l1722 11C8                    i2l1836 1034                    i2l1844 1066  
                  i2l1860 0D6C                    i2l1880 0DEE                    i2l1872 0DC2  
                  i2l1874 0DD0                    i2l1884 0DF8                    _OSCCON 000FD3  
                  _TMR1ON 007E68                    _TMR2ON 007E52                    _TRISB0 007C98  
   __end_of_DireccionaLCD 1288                    _UTRDIS 007B7B                _RetardoLCD 0EBA  
               ??_Recibir 001C   __end_ofi2_DireccionaLCD 12F6                    _Minimo 002C  
     TransmitirDatos@MinC 0025                    ___wmul 120E                 ??___lbdiv 001F  
               ??___lbmod 001B                 ??___lwdiv 001E           ??_InicializaLCD 001E  
                  clear_0 115A         __end_ofi2_Recibir 12CA                    isa$std 000001  
    __end_of_EscribeLCD_c 12B4                    _strlen 1198              ?i2_EnviaDato 0001  
            __pdataCOMRAM 003A              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8               SaveData@dir 001A  
    Recibir_Cadena@Buffer 0020                _Transmitir 133A          ___lbdiv@dividend 001F  
         ___lbmod@divisor 001A     __end_ofi2_HabilitaLCD 133A                __accesstop 0060  
 __end_of__initialization 1160           ___lbmod@counter 001C             ___rparam_used 000001  
    Recibir_Cadena@tamano 0021            __pcstackCOMRAM 0001         __end_of_EnviaDato 10C2  
        ___lbdiv@quotient 0021                 ?i2___wmul 0001                 ?i2_strlen 0001  
               ?_BorraLCD 0001            _MensajeLCD_Var 0FD8           MensajeLCD_Var@a 001F  
         MensajeLCD_Var@i 0021               ?_RetardoLCD 0001               RetardoLCD@a 001B  
               ?_SaveData 001A          ?i2_DireccionaLCD 0001                   ?___wmul 001A  
        i2_Recibir_Cadena 0D54                   _CCP1CON 000FBD                   _CCP2CON 000FBA  
                 _BAUDCON 000FB8                   ?_strlen 001A                ??i2___wmul 0005  
                 _INTEDG0 007F8E    __end_of_MensajeLCD_Var 102A                   i2u70_40 0E0C  
                 i2u91_47 0AE2                   i2u92_47 0B30                   i2u93_47 0B62  
                 i2u94_47 0F2A                   i2u95_47 0F3A                   i2u96_47 0F4A  
                 i2u97_47 0F58                   i2u98_47 0F62                   i2u99_47 1330  
              ??i2_strlen 0003              ??i2_BorraLCD 0005                ??_BorraLCD 001E  
             ?_Transmitir 0001  __end_ofi2_MensajeLCD_Var 107C              ?_HabilitaLCD 0001  
            _ConfiguraLCD 125A                ??_SaveData 001D                   _Recibir 1288  
                 __Hparam 0000                   __Lparam 0000                   ___lbdiv 1108  
                 ___lbmod 116E                   ___lwdiv 0F86              __psmallconst 0800  
      __end_ofi2_BorraLCD 131E                   __pcinit 1142                   __ramtop 0800  
                 __ptext0 0890                   __ptext1 0F86                   __ptext2 0BA2  
                 __ptext3 116E                   __ptext4 1108                   __ptext5 133A  
                 __ptext6 0FD8                   __ptext7 1198                   __ptext8 1272  
                 __ptext9 11E8     i2Recibir_Cadena@valor 000C           ?_MensajeLCD_Var 001F  
          __pintcode_body 0AAE      end_of_initialization 1160             __Lmediumconst 0000  
                 int_func 0AAE       i2___wmul@multiplier 0001              _EscribeLCD_c 129E  
            SaveData@dato 001C         ??_TransmitirDatos 0025                   postinc0 000FEE  
                 strlen@s 001A                 i2_Recibir 12B4          ___lbmod@dividend 001B  
          _Recibir_Cadena 0C8A           i2EscribeLCD_c@a 0005               ___lbmod@rem 001D  
           ?i2_RetardoLCD 0001            __end_of___wmul 1234             __pidataCOMRAM 1346  
          _Minimo_Consola 0030                 _Distancia 002E     __end_of_InicializaLCD 0EBA  
        i2___wmul@product 0005                 _EnviaDato 107C            __end_of_strlen 11C0  
              ?i2_Recibir 0001       start_initialization 1142    __end_of_Recibir_Cadena 0D54  
             __end_of_ISR 0BA2  __end_ofi2_Recibir_Cadena 0E1E                 i2strlen@s 0001  
          ??i2_RetardoLCD 0001              ??_RetardoLCD 001A                  ??___wmul 001E  
                ??_strlen 001C                ?_EnviaDato 0001               __pbssCOMRAM 002C  
      __end_of_RetardoLCD 0F20           ?_Recibir_Cadena 0020       Recibir_Cadena@valor 0025  
            ??_Transmitir 001A         ?i2_MensajeLCD_Var 0006        ??i2_MensajeLCD_Var 0007  
           _DireccionaLCD 1272                  ?_Recibir 001A            i2_EscribeLCD_c 12CA  
        ___lwdiv@dividend 001A                 __pintcode 0008                  ?___lbdiv 001E  
                ?___lbmod 001A                  ?___lwdiv 001A        __end_of_Transmitir 1346  
        ??_MensajeLCD_Var 0020               __smallconst 0800               ??i2_Recibir 0003  
        ___lwdiv@quotient 001E           _TransmitirDatos 0BA2            ___wmul@product 001E  
           i2_HabilitaLCD 132C            ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 12E0  
       ___wmul@multiplier 001A             ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 0F86  
                i2___wmul 1234               ??_EnviaDato 001C                  i2_strlen 11C0  
                _BorraLCD 12F6         i2Recibir_Cadena@c 000B         i2Recibir_Cadena@i 000E  
          ?i2_HabilitaLCD 0001           ?i2_EscribeLCD_c 0001                  _SaveData 11E8  
                __Hrparam 0000                  __Lrparam 0000     TransmitirDatos@Minimo 0023  
   i2___wmul@multiplicand 0003              i2EnviaDato@a 0004             ConfiguraLCD@a 001A  
       ??i2_DireccionaLCD 0005   __end_of_TransmitirDatos 0C8A           ___lwdiv@divisor 001C  
         ___lwdiv@counter 0020    i2Recibir_Cadena@Buffer 0007                  __ptext10 0C8A  
                __ptext11 120E                  __ptext12 1288                  __ptext21 0D54  
                __ptext13 129E                  __ptext30 0F20                  __ptext22 1234  
                __ptext14 0E1E                  __ptext31 132C                  __ptext23 12B4  
                __ptext15 12F6                  __ptext24 102A                  __ptext16 107C  
                __ptext25 11C0                  __ptext17 0EBA                  __ptext26 12CA  
                __ptext18 131E                  __ptext27 12E0                  __ptext19 125A  
                __ptext28 130A                  __ptext29 10C2       __end_ofi2_EnviaDato 1108  
       ?i2_Recibir_Cadena 0007           ??_DireccionaLCD 001E        ??i2_Recibir_Cadena 000A  
                _interfaz 003A    i2Recibir_Cadena@tamano 0008                  isa$xinst 000000  
                int$flags 003B          ??_Recibir_Cadena 0023           ??i2_HabilitaLCD 0001  
                intlevel2 0000             ??_HabilitaLCD 001A             ?_ConfiguraLCD 0001  
           i2RetardoLCD@a 0002               i2_EnviaDato 10C2                  strlen@cp 001C  
        ?_TransmitirDatos 0023                i2_BorraLCD 130A            ??_ConfiguraLCD 001A  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006         i2MensajeLCD_Var@i 0008  
            i2_RetardoLCD 0F20       __end_of_HabilitaLCD 132C  
