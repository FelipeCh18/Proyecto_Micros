

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Jun 07 11:57:01 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    40                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    41   000000                     
    42                           ; Version 2.40
    43                           ; Generated 04/07/2022 GMT
    44                           ; 
    45                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F4550 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   001098                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _Minimo
    83   001098  0A                 	db	10
    84                           
    85                           ;initializer for _interfaz
    86   001099  08                 	db	8
    87   000000                     _CCPR2	set	4027
    88   000000                     _RCREG	set	4014
    89   000000                     _TXREG	set	4013
    90   000000                     _PR2	set	4043
    91   000000                     _TMR2	set	4044
    92   000000                     _SPBRG	set	4015
    93   000000                     _BAUDCON	set	4024
    94   000000                     _TRISC	set	3988
    95   000000                     _TRISD	set	3989
    96   000000                     _RC1	set	31761
    97   000000                     _LATD3	set	31843
    98   000000                     _LATD2	set	31842
    99   000000                     _TRMT	set	32097
   100   000000                     _TMR1ON	set	32360
   101   000000                     _TMR2ON	set	32338
   102   000000                     _GIE	set	32663
   103   000000                     _RBIE	set	32659
   104   000000                     _LATD	set	3980
   105   000000                     _UTRDIS	set	31611
   106   000000                     _RCSTA	set	4011
   107   000000                     _TXSTA	set	4012
   108   000000                     _OSCCON	set	4051
   109   000000                     _CCP2IF	set	32008
   110   000000                     _RCIF	set	31989
   111   000000                     _RCIE	set	31981
   112   000000                     _RBPU	set	32655
   113   000000                     _TRISA	set	3986
   114   000000                     _TRISB	set	3987
   115   000000                     _RBIF	set	32656
   116   000000                     _TRISE	set	3990
   117   000000                     _CCP2CON	set	4026
   118   000000                     _CCP1CON	set	4029
   119   000000                     _ADCON1	set	4033
   120   000000                     _T2CON	set	4042
   121   000000                     _T1CON	set	4045
   122   000000                     _TMR1	set	4046
   123   000000                     _RB5	set	31757
   124   000000                     _RC0	set	31760
   125   000000                     _CCPR1L	set	4030
   126   000000                     _RE1	set	31777
   127   000000                     _LATB	set	3978
   128                           
   129                           	psect	smallconst
   130   000800                     __psmallconst:
   131                           	callstack 0
   132   000800  00                 	db	0
   133   000801                     STR_1:
   134   000801  42                 	db	66	;'B'
   135   000802  69                 	db	105	;'i'
   136   000803  65                 	db	101	;'e'
   137   000804  6E                 	db	110	;'n'
   138   000805  76                 	db	118	;'v'
   139   000806  65                 	db	101	;'e'
   140   000807  6E                 	db	110	;'n'
   141   000808  69                 	db	105	;'i'
   142   000809  64                 	db	100	;'d'
   143   00080A  6F                 	db	111	;'o'
   144   00080B  20                 	db	32
   145   00080C  61                 	db	97	;'a'
   146   00080D  6C                 	db	108	;'l'
   147   00080E  00                 	db	0
   148   00080F                     STR_3:
   149   00080F  64                 	db	100	;'d'
   150   000810  65                 	db	101	;'e'
   151   000811  74                 	db	116	;'t'
   152   000812  65                 	db	101	;'e'
   153   000813  63                 	db	99	;'c'
   154   000814  63                 	db	99	;'c'
   155   000815  69                 	db	105	;'i'
   156   000816  6F                 	db	111	;'o'
   157   000817  6E                 	db	110	;'n'
   158   000818  20                 	db	32
   159   000819  64                 	db	100	;'d'
   160   00081A  65                 	db	101	;'e'
   161   00081B  00                 	db	0
   162   00081C                     STR_6:
   163   00081C  44                 	db	68	;'D'
   164   00081D  69                 	db	105	;'i'
   165   00081E  73                 	db	115	;'s'
   166   00081F  74                 	db	116	;'t'
   167   000820  61                 	db	97	;'a'
   168   000821  6E                 	db	110	;'n'
   169   000822  63                 	db	99	;'c'
   170   000823  69                 	db	105	;'i'
   171   000824  61                 	db	97	;'a'
   172   000825  3A                 	db	58	;':'
   173   000826  00                 	db	0
   174   000827                     STR_2:
   175   000827  73                 	db	115	;'s'
   176   000828  69                 	db	105	;'i'
   177   000829  73                 	db	115	;'s'
   178   00082A  74                 	db	116	;'t'
   179   00082B  65                 	db	101	;'e'
   180   00082C  6D                 	db	109	;'m'
   181   00082D  61                 	db	97	;'a'
   182   00082E  20                 	db	32
   183   00082F  64                 	db	100	;'d'
   184   000830  65                 	db	101	;'e'
   185   000831  00                 	db	0
   186   000832                     STR_4:
   187   000832  64                 	db	100	;'d'
   188   000833  69                 	db	105	;'i'
   189   000834  73                 	db	115	;'s'
   190   000835  74                 	db	116	;'t'
   191   000836  61                 	db	97	;'a'
   192   000837  6E                 	db	110	;'n'
   193   000838  63                 	db	99	;'c'
   194   000839  69                 	db	105	;'i'
   195   00083A  61                 	db	97	;'a'
   196   00083B  73                 	db	115	;'s'
   197   00083C  00                 	db	0
   198   00083D                     STR_5:
   199   00083D  49                 	db	73	;'I'
   200   00083E  6E                 	db	110	;'n'
   201   00083F  69                 	db	105	;'i'
   202   000840  63                 	db	99	;'c'
   203   000841  69                 	db	105	;'i'
   204   000842  61                 	db	97	;'a'
   205   000843  6E                 	db	110	;'n'
   206   000844  64                 	db	100	;'d'
   207   000845  6F                 	db	111	;'o'
   208   000846  00                 	db	0
   209   000847                     STR_7:
   210   000847  63                 	db	99	;'c'
   211   000848  6D                 	db	109	;'m'
   212   000849  00                 	db	0
   213   00084A  00                 	db	0	; dummy byte at the end
   214   000000                     
   215                           ; #config settings
   216                           
   217                           	psect	cinit
   218   000FA0                     __pcinit:
   219                           	callstack 0
   220   000FA0                     start_initialization:
   221                           	callstack 0
   222   000FA0                     __initialization:
   223                           	callstack 0
   224                           
   225                           ; Initialize objects allocated to COMRAM (2 bytes)
   226                           ; load TBLPTR registers with __pidataCOMRAM
   227   000FA0  0E98               	movlw	low __pidataCOMRAM
   228   000FA2  6EF6               	movwf	tblptrl,c
   229   000FA4  0E10               	movlw	high __pidataCOMRAM
   230   000FA6  6EF7               	movwf	tblptrh,c
   231   000FA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   232   000FAA  6EF8               	movwf	tblptru,c
   233   000FAC  0009               	tblrd		*+	;fetch initializer
   234   000FAE  CFF5 F028          	movff	tablat,__pdataCOMRAM
   235   000FB2  0009               	tblrd		*+	;fetch initializer
   236   000FB4  CFF5 F029          	movff	tablat,__pdataCOMRAM+1
   237                           
   238                           ; Clear objects allocated to COMRAM (3 bytes)
   239   000FB8  6A27               	clrf	(__pbssCOMRAM+2)& (0+255),c
   240   000FBA  6A26               	clrf	(__pbssCOMRAM+1)& (0+255),c
   241   000FBC  6A25               	clrf	__pbssCOMRAM& (0+255),c
   242   000FBE                     end_of_initialization:
   243                           	callstack 0
   244   000FBE                     __end_of__initialization:
   245                           	callstack 0
   246   000FBE  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   247   000FC0  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   248   000FC2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   249   000FC4  6EF8               	movwf	tblptru,c
   250   000FC6  0100               	movlb	0
   251   000FC8  EF26  F004         	goto	_main	;jump to C main() function
   252                           
   253                           	psect	bssCOMRAM
   254   000025                     __pbssCOMRAM:
   255                           	callstack 0
   256   000025                     _en_entrada:
   257                           	callstack 0
   258   000025                     	ds	1
   259   000026                     _Distancia:
   260                           	callstack 0
   261   000026                     	ds	1
   262   000027                     _Tecla:
   263                           	callstack 0
   264   000027                     	ds	1
   265                           
   266                           	psect	dataCOMRAM
   267   000028                     __pdataCOMRAM:
   268                           	callstack 0
   269   000028                     _Minimo:
   270                           	callstack 0
   271   000028                     	ds	1
   272   000029                     _interfaz:
   273                           	callstack 0
   274   000029                     	ds	1
   275                           
   276                           	psect	cstackCOMRAM
   277   000001                     __pcstackCOMRAM:
   278                           	callstack 0
   279   000001                     ??i2_RetardoLCD:
   280   000001                     ?_Recibir:
   281                           	callstack 0
   282   000001                     ?i2_strlen:
   283                           	callstack 0
   284   000001                     i2strlen@s:
   285                           	callstack 0
   286                           
   287                           ; 2 bytes @ 0x0
   288   000001                     	ds	1
   289   000002                     i2RetardoLCD@a:
   290                           	callstack 0
   291                           
   292                           ; 1 bytes @ 0x1
   293   000002                     	ds	1
   294   000003                     ??i2_EnviaDato:
   295   000003                     i2strlen@cp:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2
   299   000003                     	ds	1
   300   000004                     i2EnviaDato@a:
   301                           	callstack 0
   302                           
   303                           ; 1 bytes @ 0x3
   304   000004                     	ds	1
   305   000005                     i2EscribeLCD_c@a:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x4
   309   000005                     	ds	1
   310   000006                     i2MensajeLCD_Var@a:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x5
   314   000006                     	ds	2
   315   000008                     ??i2_MensajeLCD_Var:
   316                           
   317                           ; 1 bytes @ 0x7
   318   000008                     	ds	2
   319   00000A                     i2MensajeLCD_Var@i:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x9
   323   00000A                     	ds	2
   324   00000C                     ??_ISR:
   325                           
   326                           ; 1 bytes @ 0xB
   327   00000C                     	ds	8
   328   000014                     ??_RetardoLCD:
   329   000014                     ?_strlen:
   330                           	callstack 0
   331   000014                     ?___lwdiv:
   332                           	callstack 0
   333   000014                     ConfiguraLCD@a:
   334                           	callstack 0
   335   000014                     Transmitir@BufferT:
   336                           	callstack 0
   337   000014                     ___lbmod@divisor:
   338                           	callstack 0
   339   000014                     ___lwdiv@dividend:
   340                           	callstack 0
   341   000014                     strlen@s:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x13
   345   000014                     	ds	1
   346   000015                     RetardoLCD@a:
   347                           	callstack 0
   348   000015                     ___lbmod@dividend:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x14
   352   000015                     	ds	1
   353   000016                     ??_EnviaDato:
   354   000016                     ___lbmod@counter:
   355                           	callstack 0
   356   000016                     ___lwdiv@divisor:
   357                           	callstack 0
   358   000016                     strlen@cp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x15
   362   000016                     	ds	1
   363   000017                     EnviaDato@a:
   364                           	callstack 0
   365   000017                     ___lbmod@rem:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x16
   369   000017                     	ds	1
   370   000018                     EscribeLCD_c@a:
   371                           	callstack 0
   372   000018                     DireccionaLCD@a:
   373                           	callstack 0
   374   000018                     ___lbdiv@divisor:
   375                           	callstack 0
   376   000018                     ___lwdiv@quotient:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380   000018                     	ds	1
   381   000019                     ___lbdiv@dividend:
   382                           	callstack 0
   383   000019                     MensajeLCD_Var@a:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x18
   387   000019                     	ds	1
   388   00001A                     ___lbdiv@counter:
   389                           	callstack 0
   390   00001A                     ___lwdiv@counter:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x19
   394   00001A                     	ds	1
   395   00001B                     ??_MensajeLCD_Var:
   396   00001B                     ___lbdiv@quotient:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x1A
   400   00001B                     	ds	2
   401   00001D                     MensajeLCD_Var@i:
   402                           	callstack 0
   403                           
   404                           ; 2 bytes @ 0x1C
   405   00001D                     	ds	2
   406   00001F                     TransmitirDatos@Minimo:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x1E
   410   00001F                     	ds	2
   411   000021                     TransmitirDatos@MinC:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x20
   415   000021                     	ds	2
   416   000023                     ??_main:
   417                           
   418                           ; 1 bytes @ 0x22
   419   000023                     	ds	2
   420                           
   421 ;;
   422 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   423 ;;
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 27 in file "Proyecto.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;		None
   431 ;; Return value:  Size  Location     Type
   432 ;;                  1    wreg      void 
   433 ;; Registers used:
   434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 0/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   440 ;;      Params:         0       0       0       0       0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0       0       0       0       0
   442 ;;      Temps:          2       0       0       0       0       0       0       0       0
   443 ;;      Totals:         2       0       0       0       0       0       0       0       0
   444 ;;Total ram usage:        2 bytes
   445 ;; Hardware stack levels required when called: 10
   446 ;; This function calls:
   447 ;;		_BorraLCD
   448 ;;		_ConfiguraLCD
   449 ;;		_DireccionaLCD
   450 ;;		_EscribeLCD_c
   451 ;;		_InicializaLCD
   452 ;;		_MensajeLCD_Var
   453 ;;		_TransmitirDatos
   454 ;;		___lwdiv
   455 ;; This function is called by:
   456 ;;		Startup code after reset
   457 ;; This function uses a non-reentrant model
   458 ;;
   459                           
   460                           	psect	text0
   461   00084C                     __ptext0:
   462                           	callstack 0
   463   00084C                     _main:
   464                           	callstack 21
   465                           
   466                           ;Proyecto.c: 28: BorraLCD();
   467                           
   468                           ;incstack = 0
   469   00084C  EC28  F008         	call	_BorraLCD	;wreg free
   470                           
   471                           ;Proyecto.c: 29: TRISB = 0b11110000;
   472   000850  0EF0               	movlw	240
   473   000852  6E93               	movwf	147,c	;volatile
   474                           
   475                           ;Proyecto.c: 30: TRISA = 0;
   476   000854  0E00               	movlw	0
   477   000856  6E92               	movwf	146,c	;volatile
   478                           
   479                           ;Proyecto.c: 31: RBPU = 0;
   480   000858  9EF1               	bcf	4081,7,c	;volatile
   481                           
   482                           ;Proyecto.c: 32: TRISD = 0;
   483   00085A  0E00               	movlw	0
   484   00085C  6E95               	movwf	149,c	;volatile
   485                           
   486                           ;Proyecto.c: 33: TRISC = 0b11000010;
   487   00085E  0EC2               	movlw	194
   488   000860  6E94               	movwf	148,c	;volatile
   489                           
   490                           ;Proyecto.c: 34: TRISE = 0b00001010;
   491   000862  0E0A               	movlw	10
   492   000864  6E96               	movwf	150,c	;volatile
   493                           
   494                           ;Proyecto.c: 35: OSCCON = 0b01110000;
   495   000866  0E70               	movlw	112
   496   000868  6ED3               	movwf	211,c	;volatile
   497                           
   498                           ;Proyecto.c: 36: _delay((unsigned long)((1)*(8000000/4000.0)));
   499   00086A  0E03               	movlw	3
   500   00086C  6E23               	movwf	??_main^0,c
   501   00086E  0E98               	movlw	152
   502   000870                     u627:
   503   000870  2EE8               	decfsz	wreg,f,c
   504   000872  D7FE               	bra	u627
   505   000874  2E23               	decfsz	??_main^0,f,c
   506   000876  D7FC               	bra	u627
   507                           
   508                           ;Proyecto.c: 37: TXSTA = 0b00100000;
   509   000878  0E20               	movlw	32
   510   00087A  6EAC               	movwf	172,c	;volatile
   511                           
   512                           ;Proyecto.c: 38: RCSTA = 0b10010000;
   513   00087C  0E90               	movlw	144
   514   00087E  6EAB               	movwf	171,c	;volatile
   515                           
   516                           ;Proyecto.c: 39: BAUDCON = 0b00000000;
   517   000880  0E00               	movlw	0
   518   000882  6EB8               	movwf	184,c	;volatile
   519                           
   520                           ;Proyecto.c: 40: SPBRG = 12;
   521   000884  0E0C               	movlw	12
   522   000886  6EAF               	movwf	175,c	;volatile
   523                           
   524                           ;Proyecto.c: 41: ADCON1 = 15;
   525   000888  0E0F               	movlw	15
   526   00088A  6EC1               	movwf	193,c	;volatile
   527                           
   528                           ;Proyecto.c: 42: RBIF = 0;
   529   00088C  90F2               	bcf	4082,0,c	;volatile
   530                           
   531                           ;Proyecto.c: 43: RBIE = 1;
   532   00088E  86F2               	bsf	4082,3,c	;volatile
   533                           
   534                           ;Proyecto.c: 44: RCIE=1;
   535   000890  8A9D               	bsf	3997,5,c	;volatile
   536                           
   537                           ;Proyecto.c: 45: RCIF=0;
   538   000892  9A9E               	bcf	3998,5,c	;volatile
   539                           
   540                           ;Proyecto.c: 46: GIE = 1;
   541   000894  8EF2               	bsf	4082,7,c	;volatile
   542                           
   543                           ;Proyecto.c: 48: T1CON = 0b10010000;
   544   000896  0E90               	movlw	144
   545   000898  6ECD               	movwf	205,c	;volatile
   546                           
   547                           ;Proyecto.c: 49: UTRDIS = 1;
   548   00089A  866F               	bsf	3951,3,c	;volatile
   549                           
   550                           ;Proyecto.c: 51: CCP1CON=0b00001100;
   551   00089C  0E0C               	movlw	12
   552   00089E  6EBD               	movwf	189,c	;volatile
   553                           
   554                           ;Proyecto.c: 52: T2CON = 0b00000010;
   555   0008A0  0E02               	movlw	2
   556   0008A2  6ECA               	movwf	202,c	;volatile
   557                           
   558                           ;Proyecto.c: 53: TMR2 = 0;
   559   0008A4  0E00               	movlw	0
   560   0008A6  6ECC               	movwf	204,c	;volatile
   561                           
   562                           ;Proyecto.c: 54: PR2 = 249;
   563   0008A8  0EF9               	movlw	249
   564   0008AA  6ECB               	movwf	203,c	;volatile
   565                           
   566                           ;Proyecto.c: 55: CCPR1L = 0;
   567   0008AC  0E00               	movlw	0
   568   0008AE  6EBE               	movwf	190,c	;volatile
   569                           
   570                           ;Proyecto.c: 58: ConfiguraLCD(4);
   571   0008B0  0E04               	movlw	4
   572   0008B2  ECFB  F007         	call	_ConfiguraLCD
   573                           
   574                           ;Proyecto.c: 59: InicializaLCD();
   575   0008B6  EC8D  F005         	call	_InicializaLCD	;wreg free
   576                           
   577                           ;Proyecto.c: 60: DireccionaLCD(0x80);
   578   0008BA  0E80               	movlw	128
   579   0008BC  EC12  F008         	call	_DireccionaLCD
   580                           
   581                           ;Proyecto.c: 61: MensajeLCD_Var("Bienvenido al");
   582   0008C0  0E01               	movlw	low STR_1
   583   0008C2  6E19               	movwf	MensajeLCD_Var@a^0,c
   584   0008C4  5019               	movf	MensajeLCD_Var@a^0,w,c
   585   0008C6  A4D8               	btfss	status,2,c
   586   0008C8  0E08               	movlw	high __smallconst
   587   0008CA  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   588   0008CC  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   589                           
   590                           ;Proyecto.c: 62: DireccionaLCD(0xC0);
   591   0008D0  0EC0               	movlw	192
   592   0008D2  EC12  F008         	call	_DireccionaLCD
   593                           
   594                           ;Proyecto.c: 63: MensajeLCD_Var("sistema de");
   595   0008D6  0E27               	movlw	low STR_2
   596   0008D8  6E19               	movwf	MensajeLCD_Var@a^0,c
   597   0008DA  5019               	movf	MensajeLCD_Var@a^0,w,c
   598   0008DC  A4D8               	btfss	status,2,c
   599   0008DE  0E08               	movlw	high __smallconst
   600   0008E0  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   601   0008E2  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   602                           
   603                           ;Proyecto.c: 64: _delay((unsigned long)((1500)*(8000000/4000.0)));
   604   0008E6  0E10               	movlw	16
   605   0008E8  6E24               	movwf	(??_main+1)^0,c
   606   0008EA  0E39               	movlw	57
   607   0008EC  6E23               	movwf	??_main^0,c
   608   0008EE  0E0E               	movlw	14
   609   0008F0                     u637:
   610   0008F0  2EE8               	decfsz	wreg,f,c
   611   0008F2  D7FE               	bra	u637
   612   0008F4  2E23               	decfsz	??_main^0,f,c
   613   0008F6  D7FC               	bra	u637
   614   0008F8  2E24               	decfsz	(??_main+1)^0,f,c
   615   0008FA  D7FA               	bra	u637
   616                           
   617                           ;Proyecto.c: 65: BorraLCD();
   618   0008FC  EC28  F008         	call	_BorraLCD	;wreg free
   619                           
   620                           ;Proyecto.c: 66: MensajeLCD_Var("deteccion de");
   621   000900  0E0F               	movlw	low STR_3
   622   000902  6E19               	movwf	MensajeLCD_Var@a^0,c
   623   000904  5019               	movf	MensajeLCD_Var@a^0,w,c
   624   000906  A4D8               	btfss	status,2,c
   625   000908  0E08               	movlw	high __smallconst
   626   00090A  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   627   00090C  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   628                           
   629                           ;Proyecto.c: 67: DireccionaLCD(0xC0);
   630   000910  0EC0               	movlw	192
   631   000912  EC12  F008         	call	_DireccionaLCD
   632                           
   633                           ;Proyecto.c: 68: MensajeLCD_Var("distancias");
   634   000916  0E32               	movlw	low STR_4
   635   000918  6E19               	movwf	MensajeLCD_Var@a^0,c
   636   00091A  5019               	movf	MensajeLCD_Var@a^0,w,c
   637   00091C  A4D8               	btfss	status,2,c
   638   00091E  0E08               	movlw	high __smallconst
   639   000920  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   640   000922  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   641                           
   642                           ;Proyecto.c: 69: _delay((unsigned long)((1500)*(8000000/4000.0)));
   643   000926  0E10               	movlw	16
   644   000928  6E24               	movwf	(??_main+1)^0,c
   645   00092A  0E39               	movlw	57
   646   00092C  6E23               	movwf	??_main^0,c
   647   00092E  0E0E               	movlw	14
   648   000930                     u647:
   649   000930  2EE8               	decfsz	wreg,f,c
   650   000932  D7FE               	bra	u647
   651   000934  2E23               	decfsz	??_main^0,f,c
   652   000936  D7FC               	bra	u647
   653   000938  2E24               	decfsz	(??_main+1)^0,f,c
   654   00093A  D7FA               	bra	u647
   655                           
   656                           ;Proyecto.c: 70: BorraLCD();
   657   00093C  EC28  F008         	call	_BorraLCD	;wreg free
   658                           
   659                           ;Proyecto.c: 71: MensajeLCD_Var("Iniciando");
   660   000940  0E3D               	movlw	low STR_5
   661   000942  6E19               	movwf	MensajeLCD_Var@a^0,c
   662   000944  5019               	movf	MensajeLCD_Var@a^0,w,c
   663   000946  A4D8               	btfss	status,2,c
   664   000948  0E08               	movlw	high __smallconst
   665   00094A  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   666   00094C  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   667                           
   668                           ;Proyecto.c: 72: _delay((unsigned long)((500)*(8000000/4000.0)));
   669   000950  0E06               	movlw	6
   670   000952  6E24               	movwf	(??_main+1)^0,c
   671   000954  0E13               	movlw	19
   672   000956  6E23               	movwf	??_main^0,c
   673   000958  0EAE               	movlw	174
   674   00095A                     u657:
   675   00095A  2EE8               	decfsz	wreg,f,c
   676   00095C  D7FE               	bra	u657
   677   00095E  2E23               	decfsz	??_main^0,f,c
   678   000960  D7FC               	bra	u657
   679   000962  2E24               	decfsz	(??_main+1)^0,f,c
   680   000964  D7FA               	bra	u657
   681                           
   682                           ;Proyecto.c: 73: EscribeLCD_c('.');
   683   000966  0E2E               	movlw	46
   684   000968  EC07  F008         	call	_EscribeLCD_c
   685                           
   686                           ;Proyecto.c: 74: _delay((unsigned long)((500)*(8000000/4000.0)));
   687   00096C  0E06               	movlw	6
   688   00096E  6E24               	movwf	(??_main+1)^0,c
   689   000970  0E13               	movlw	19
   690   000972  6E23               	movwf	??_main^0,c
   691   000974  0EAE               	movlw	174
   692   000976                     u667:
   693   000976  2EE8               	decfsz	wreg,f,c
   694   000978  D7FE               	bra	u667
   695   00097A  2E23               	decfsz	??_main^0,f,c
   696   00097C  D7FC               	bra	u667
   697   00097E  2E24               	decfsz	(??_main+1)^0,f,c
   698   000980  D7FA               	bra	u667
   699                           
   700                           ;Proyecto.c: 75: EscribeLCD_c('.');
   701   000982  0E2E               	movlw	46
   702   000984  EC07  F008         	call	_EscribeLCD_c
   703                           
   704                           ;Proyecto.c: 76: _delay((unsigned long)((500)*(8000000/4000.0)));
   705   000988  0E06               	movlw	6
   706   00098A  6E24               	movwf	(??_main+1)^0,c
   707   00098C  0E13               	movlw	19
   708   00098E  6E23               	movwf	??_main^0,c
   709   000990  0EAE               	movlw	174
   710   000992                     u677:
   711   000992  2EE8               	decfsz	wreg,f,c
   712   000994  D7FE               	bra	u677
   713   000996  2E23               	decfsz	??_main^0,f,c
   714   000998  D7FC               	bra	u677
   715   00099A  2E24               	decfsz	(??_main+1)^0,f,c
   716   00099C  D7FA               	bra	u677
   717                           
   718                           ;Proyecto.c: 77: EscribeLCD_c('.');
   719   00099E  0E2E               	movlw	46
   720   0009A0  EC07  F008         	call	_EscribeLCD_c
   721                           
   722                           ;Proyecto.c: 78: _delay((unsigned long)((500)*(8000000/4000.0)));
   723   0009A4  0E06               	movlw	6
   724   0009A6  6E24               	movwf	(??_main+1)^0,c
   725   0009A8  0E13               	movlw	19
   726   0009AA  6E23               	movwf	??_main^0,c
   727   0009AC  0EAE               	movlw	174
   728   0009AE                     u687:
   729   0009AE  2EE8               	decfsz	wreg,f,c
   730   0009B0  D7FE               	bra	u687
   731   0009B2  2E23               	decfsz	??_main^0,f,c
   732   0009B4  D7FC               	bra	u687
   733   0009B6  2E24               	decfsz	(??_main+1)^0,f,c
   734   0009B8  D7FA               	bra	u687
   735                           
   736                           ;Proyecto.c: 79: BorraLCD();
   737   0009BA  EC28  F008         	call	_BorraLCD	;wreg free
   738                           
   739                           ;Proyecto.c: 80: MensajeLCD_Var("Distancia:");
   740   0009BE  0E1C               	movlw	low STR_6
   741   0009C0  6E19               	movwf	MensajeLCD_Var@a^0,c
   742   0009C2  5019               	movf	MensajeLCD_Var@a^0,w,c
   743   0009C4  A4D8               	btfss	status,2,c
   744   0009C6  0E08               	movlw	high __smallconst
   745   0009C8  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
   746   0009CA  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
   747                           
   748                           ;Proyecto.c: 82: TMR2ON=1;
   749   0009CE  84CA               	bsf	4042,2,c	;volatile
   750   0009D0                     l1701:
   751                           
   752                           ;Proyecto.c: 84: CCP2CON = 0b00000100;
   753   0009D0  0E04               	movlw	4
   754   0009D2  6EBA               	movwf	186,c	;volatile
   755                           
   756                           ;Proyecto.c: 85: TMR1 = 0;
   757   0009D4  0E00               	movlw	0
   758   0009D6  6ECF               	movwf	207,c	;volatile
   759   0009D8  0E00               	movlw	0
   760   0009DA  6ECE               	movwf	206,c	;volatile
   761                           
   762                           ;Proyecto.c: 86: CCP2IF = 0;
   763   0009DC  90A1               	bcf	4001,0,c	;volatile
   764                           
   765                           ;Proyecto.c: 87: RC0 = 1;
   766   0009DE  8082               	bsf	3970,0,c	;volatile
   767                           
   768                           ;Proyecto.c: 88: _delay((unsigned long)((10)*(8000000/4000000.0)));
   769   0009E0  0E06               	movlw	6
   770   0009E2                     u697:
   771   0009E2  2EE8               	decfsz	wreg,f,c
   772   0009E4  D7FE               	bra	u697
   773   0009E6  D000               	nop2	
   774                           
   775                           ;Proyecto.c: 89: RC0 = 0;
   776   0009E8  9082               	bcf	3970,0,c	;volatile
   777   0009EA                     l168:
   778   0009EA  A282               	btfss	3970,1,c	;volatile
   779   0009EC  D7FE               	goto	l168
   780                           
   781                           ;Proyecto.c: 97: TMR1ON = 1;
   782   0009EE  80CD               	bsf	4045,0,c	;volatile
   783   0009F0                     l171:
   784   0009F0  A0A1               	btfss	4001,0,c	;volatile
   785   0009F2  D7FE               	goto	l171
   786                           
   787                           ;Proyecto.c: 99: TMR1ON = 0;
   788   0009F4  90CD               	bcf	4045,0,c	;volatile
   789                           
   790                           ;Proyecto.c: 100: Distancia = CCPR2 / 58;
   791   0009F6  CFBB F014          	movff	4027,___lwdiv@dividend	;volatile
   792   0009FA  CFBC F015          	movff	4028,___lwdiv@dividend+1	;volatile
   793   0009FE  0E00               	movlw	0
   794   000A00  6E17               	movwf	(___lwdiv@divisor+1)^0,c
   795   000A02  0E3A               	movlw	58
   796   000A04  6E16               	movwf	___lwdiv@divisor^0,c
   797   000A06  EC02  F007         	call	___lwdiv	;wreg free
   798   000A0A  5014               	movf	?___lwdiv^0,w,c
   799   000A0C  6E26               	movwf	_Distancia^0,c
   800                           
   801                           ;Proyecto.c: 103: TransmitirDatos(Minimo);
   802                           
   803                           ;Proyecto.c: 102: if (!RE1) {
   804   000A0E  C028  F01F         	movff	_Minimo,TransmitirDatos@Minimo
   805   000A12  6A20               	clrf	(TransmitirDatos@Minimo+1)^0,c
   806   000A14  EC15  F005         	call	_TransmitirDatos	;wreg free
   807                           
   808                           ;Proyecto.c: 108: };Proyecto.c: 110: if (Distancia<=Minimo){
   809                           
   810                           ;Proyecto.c: 105: } else {
   811   000A18  5026               	movf	_Distancia^0,w,c
   812   000A1A  5C28               	subwf	_Minimo^0,w,c
   813   000A1C  A0D8               	btfss	status,0,c
   814   000A1E  D002               	goto	l1725
   815                           
   816                           ;Proyecto.c: 111: CCPR1L=125;
   817   000A20  0E7D               	movlw	125
   818   000A22  D001               	goto	L1
   819   000A24                     l1725:
   820                           
   821                           ;Proyecto.c: 113: CCPR1L=0;
   822   000A24  0E00               	movlw	0
   823   000A26                     L1:
   824   000A26  6EBE               	movwf	190,c	;volatile
   825   000A28  D7D3               	goto	l1701
   826   000A2A                     __end_of_main:
   827                           	callstack 0
   828                           
   829 ;; *************** function ___lwdiv *****************
   830 ;; Defined at:
   831 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;  dividend        2   19[COMRAM] unsigned int 
   834 ;;  divisor         2   21[COMRAM] unsigned int 
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  quotient        2   23[COMRAM] unsigned int 
   837 ;;  counter         1   25[COMRAM] unsigned char 
   838 ;; Return value:  Size  Location     Type
   839 ;;                  2   19[COMRAM] unsigned int 
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0
   842 ;; Tracked objects:
   843 ;;		On entry : 0/0
   844 ;;		On exit  : 0/0
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   847 ;;      Params:         4       0       0       0       0       0       0       0       0
   848 ;;      Locals:         3       0       0       0       0       0       0       0       0
   849 ;;      Temps:          0       0       0       0       0       0       0       0       0
   850 ;;      Totals:         7       0       0       0       0       0       0       0       0
   851 ;;Total ram usage:        7 bytes
   852 ;; Hardware stack levels used: 1
   853 ;; Hardware stack levels required when called: 5
   854 ;; This function calls:
   855 ;;		Nothing
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           	psect	text1
   862   000E04                     __ptext1:
   863                           	callstack 0
   864   000E04                     ___lwdiv:
   865                           	callstack 25
   866                           
   867                           ;incstack = 0
   868   000E04  0E00               	movlw	0
   869   000E06  6E19               	movwf	(___lwdiv@quotient+1)^0,c
   870   000E08  0E00               	movlw	0
   871   000E0A  6E18               	movwf	___lwdiv@quotient^0,c
   872   000E0C  5016               	movf	___lwdiv@divisor^0,w,c
   873   000E0E  1017               	iorwf	(___lwdiv@divisor+1)^0,w,c
   874   000E10  B4D8               	btfsc	status,2,c
   875   000E12  D01C               	goto	l709
   876   000E14  0E01               	movlw	1
   877   000E16  6E1A               	movwf	___lwdiv@counter^0,c
   878   000E18  D004               	goto	l1575
   879   000E1A                     l1573:
   880   000E1A  90D8               	bcf	status,0,c
   881   000E1C  3616               	rlcf	___lwdiv@divisor^0,f,c
   882   000E1E  3617               	rlcf	(___lwdiv@divisor+1)^0,f,c
   883   000E20  2A1A               	incf	___lwdiv@counter^0,f,c
   884   000E22                     l1575:
   885   000E22  AE17               	btfss	(___lwdiv@divisor+1)^0,7,c
   886   000E24  D7FA               	goto	l1573
   887   000E26                     u520:
   888   000E26  90D8               	bcf	status,0,c
   889   000E28  3618               	rlcf	___lwdiv@quotient^0,f,c
   890   000E2A  3619               	rlcf	(___lwdiv@quotient+1)^0,f,c
   891   000E2C  5016               	movf	___lwdiv@divisor^0,w,c
   892   000E2E  5C14               	subwf	___lwdiv@dividend^0,w,c
   893   000E30  5017               	movf	(___lwdiv@divisor+1)^0,w,c
   894   000E32  5815               	subwfb	(___lwdiv@dividend+1)^0,w,c
   895   000E34  A0D8               	btfss	status,0,c
   896   000E36  D005               	goto	l1585
   897   000E38  5016               	movf	___lwdiv@divisor^0,w,c
   898   000E3A  5E14               	subwf	___lwdiv@dividend^0,f,c
   899   000E3C  5017               	movf	(___lwdiv@divisor+1)^0,w,c
   900   000E3E  5A15               	subwfb	(___lwdiv@dividend+1)^0,f,c
   901   000E40  8018               	bsf	___lwdiv@quotient^0,0,c
   902   000E42                     l1585:
   903   000E42  90D8               	bcf	status,0,c
   904   000E44  3217               	rrcf	(___lwdiv@divisor+1)^0,f,c
   905   000E46  3216               	rrcf	___lwdiv@divisor^0,f,c
   906   000E48  2E1A               	decfsz	___lwdiv@counter^0,f,c
   907   000E4A  D7ED               	goto	u520
   908   000E4C                     l709:
   909   000E4C  C018  F014         	movff	___lwdiv@quotient,?___lwdiv
   910   000E50  C019  F015         	movff	___lwdiv@quotient+1,?___lwdiv+1
   911   000E54  0012               	return		;funcret
   912   000E56                     __end_of___lwdiv:
   913                           	callstack 0
   914                           
   915 ;; *************** function _TransmitirDatos *****************
   916 ;; Defined at:
   917 ;;		line 132 in file "Proyecto.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  Minimo          2   30[COMRAM] unsigned int 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  MinC            2   32[COMRAM] unsigned int 
   922 ;;  DistC           2    0        unsigned int 
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   932 ;;      Params:         2       0       0       0       0       0       0       0       0
   933 ;;      Locals:         2       0       0       0       0       0       0       0       0
   934 ;;      Temps:          0       0       0       0       0       0       0       0       0
   935 ;;      Totals:         4       0       0       0       0       0       0       0       0
   936 ;;Total ram usage:        4 bytes
   937 ;; Hardware stack levels used: 1
   938 ;; Hardware stack levels required when called: 9
   939 ;; This function calls:
   940 ;;		_DireccionaLCD
   941 ;;		_EscribeLCD_c
   942 ;;		_MensajeLCD_Var
   943 ;;		_Transmitir
   944 ;;		___lbdiv
   945 ;;		___lbmod
   946 ;; This function is called by:
   947 ;;		_main
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           	psect	text2
   952   000A2A                     __ptext2:
   953                           	callstack 0
   954   000A2A                     _TransmitirDatos:
   955                           	callstack 21
   956                           
   957                           ;incstack = 0
   958   000A2A  C01F  F021         	movff	TransmitirDatos@Minimo,TransmitirDatos@MinC
   959   000A2E  C020  F022         	movff	TransmitirDatos@Minimo+1,TransmitirDatos@MinC+1
   960                           
   961                           ;Proyecto.c: 134: Transmitir('D');
   962   000A32  0E44               	movlw	68
   963   000A34  EC40  F008         	call	_Transmitir
   964                           
   965                           ;Proyecto.c: 135: Transmitir('i');
   966   000A38  0E69               	movlw	105
   967   000A3A  EC40  F008         	call	_Transmitir
   968                           
   969                           ;Proyecto.c: 136: Transmitir('s');
   970   000A3E  0E73               	movlw	115
   971   000A40  EC40  F008         	call	_Transmitir
   972                           
   973                           ;Proyecto.c: 137: Transmitir('t');
   974   000A44  0E74               	movlw	116
   975   000A46  EC40  F008         	call	_Transmitir
   976                           
   977                           ;Proyecto.c: 138: Transmitir('a');
   978   000A4A  0E61               	movlw	97
   979   000A4C  EC40  F008         	call	_Transmitir
   980                           
   981                           ;Proyecto.c: 139: Transmitir('n');
   982   000A50  0E6E               	movlw	110
   983   000A52  EC40  F008         	call	_Transmitir
   984                           
   985                           ;Proyecto.c: 140: Transmitir('c');
   986   000A56  0E63               	movlw	99
   987   000A58  EC40  F008         	call	_Transmitir
   988                           
   989                           ;Proyecto.c: 141: Transmitir('i');
   990   000A5C  0E69               	movlw	105
   991   000A5E  EC40  F008         	call	_Transmitir
   992                           
   993                           ;Proyecto.c: 142: Transmitir('a');
   994   000A62  0E61               	movlw	97
   995   000A64  EC40  F008         	call	_Transmitir
   996                           
   997                           ;Proyecto.c: 143: Transmitir(':');
   998   000A68  0E3A               	movlw	58
   999   000A6A  EC40  F008         	call	_Transmitir
  1000                           
  1001                           ;Proyecto.c: 144: Transmitir(' ');
  1002   000A6E  0E20               	movlw	32
  1003   000A70  EC40  F008         	call	_Transmitir
  1004                           
  1005                           ;Proyecto.c: 146: Transmitir(Distancia / 100 + 48);
  1006   000A74  0E64               	movlw	100
  1007   000A76  6E18               	movwf	___lbdiv@divisor^0,c
  1008   000A78  5026               	movf	_Distancia^0,w,c
  1009   000A7A  ECB3  F007         	call	___lbdiv
  1010   000A7E  0F30               	addlw	48
  1011   000A80  EC40  F008         	call	_Transmitir
  1012                           
  1013                           ;Proyecto.c: 147: Transmitir((Distancia % 100) / 10 + 48);
  1014   000A84  0E0A               	movlw	10
  1015   000A86  6E18               	movwf	___lbdiv@divisor^0,c
  1016   000A88  0E64               	movlw	100
  1017   000A8A  6E14               	movwf	___lbmod@divisor^0,c
  1018   000A8C  5026               	movf	_Distancia^0,w,c
  1019   000A8E  ECE6  F007         	call	___lbmod
  1020   000A92  ECB3  F007         	call	___lbdiv
  1021   000A96  0F30               	addlw	48
  1022   000A98  EC40  F008         	call	_Transmitir
  1023                           
  1024                           ;Proyecto.c: 148: Transmitir(Distancia % 10 + 48);
  1025   000A9C  0E0A               	movlw	10
  1026   000A9E  6E14               	movwf	___lbmod@divisor^0,c
  1027   000AA0  5026               	movf	_Distancia^0,w,c
  1028   000AA2  ECE6  F007         	call	___lbmod
  1029   000AA6  0F30               	addlw	48
  1030   000AA8  EC40  F008         	call	_Transmitir
  1031                           
  1032                           ;Proyecto.c: 149: Transmitir('c');
  1033   000AAC  0E63               	movlw	99
  1034   000AAE  EC40  F008         	call	_Transmitir
  1035                           
  1036                           ;Proyecto.c: 150: Transmitir('m');
  1037   000AB2  0E6D               	movlw	109
  1038   000AB4  EC40  F008         	call	_Transmitir
  1039                           
  1040                           ;Proyecto.c: 151: Transmitir(' ');
  1041   000AB8  0E20               	movlw	32
  1042   000ABA  EC40  F008         	call	_Transmitir
  1043                           
  1044                           ;Proyecto.c: 152: Transmitir('\n');
  1045   000ABE  0E0A               	movlw	10
  1046   000AC0  EC40  F008         	call	_Transmitir
  1047                           
  1048                           ;Proyecto.c: 154: DireccionaLCD(0xC7);
  1049   000AC4  0EC7               	movlw	199
  1050   000AC6  EC12  F008         	call	_DireccionaLCD
  1051                           
  1052                           ;Proyecto.c: 155: EscribeLCD_c(Distancia / 100 + 48);
  1053   000ACA  0E64               	movlw	100
  1054   000ACC  6E18               	movwf	___lbdiv@divisor^0,c
  1055   000ACE  5026               	movf	_Distancia^0,w,c
  1056   000AD0  ECB3  F007         	call	___lbdiv
  1057   000AD4  0F30               	addlw	48
  1058   000AD6  EC07  F008         	call	_EscribeLCD_c
  1059                           
  1060                           ;Proyecto.c: 156: EscribeLCD_c((Distancia % 100) / 10 + 48);
  1061   000ADA  0E0A               	movlw	10
  1062   000ADC  6E18               	movwf	___lbdiv@divisor^0,c
  1063   000ADE  0E64               	movlw	100
  1064   000AE0  6E14               	movwf	___lbmod@divisor^0,c
  1065   000AE2  5026               	movf	_Distancia^0,w,c
  1066   000AE4  ECE6  F007         	call	___lbmod
  1067   000AE8  ECB3  F007         	call	___lbdiv
  1068   000AEC  0F30               	addlw	48
  1069   000AEE  EC07  F008         	call	_EscribeLCD_c
  1070                           
  1071                           ;Proyecto.c: 157: EscribeLCD_c(Distancia % 10 + 48);
  1072   000AF2  0E0A               	movlw	10
  1073   000AF4  6E14               	movwf	___lbmod@divisor^0,c
  1074   000AF6  5026               	movf	_Distancia^0,w,c
  1075   000AF8  ECE6  F007         	call	___lbmod
  1076   000AFC  0F30               	addlw	48
  1077   000AFE  EC07  F008         	call	_EscribeLCD_c
  1078                           
  1079                           ;Proyecto.c: 158: MensajeLCD_Var("cm");
  1080   000B02  0E47               	movlw	low STR_7
  1081   000B04  6E19               	movwf	MensajeLCD_Var@a^0,c
  1082   000B06  5019               	movf	MensajeLCD_Var@a^0,w,c
  1083   000B08  A4D8               	btfss	status,2,c
  1084   000B0A  0E08               	movlw	high __smallconst
  1085   000B0C  6E1A               	movwf	(MensajeLCD_Var@a+1)^0,c
  1086   000B0E  ECDB  F005         	call	_MensajeLCD_Var	;wreg free
  1087                           
  1088                           ;Proyecto.c: 159: EscribeLCD_c(' ');
  1089   000B12  0E20               	movlw	32
  1090   000B14  EC07  F008         	call	_EscribeLCD_c
  1091   000B18  0012               	return		;funcret
  1092   000B1A                     __end_of_TransmitirDatos:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function ___lbmod *****************
  1096 ;; Defined at:
  1097 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  dividend        1    wreg     unsigned char 
  1100 ;;  divisor         1   19[COMRAM] unsigned char 
  1101 ;; Auto vars:     Size  Location     Type
  1102 ;;  dividend        1   20[COMRAM] unsigned char 
  1103 ;;  rem             1   22[COMRAM] unsigned char 
  1104 ;;  counter         1   21[COMRAM] unsigned char 
  1105 ;; Return value:  Size  Location     Type
  1106 ;;                  1    wreg      unsigned char 
  1107 ;; Registers used:
  1108 ;;		wreg, status,2, status,0
  1109 ;; Tracked objects:
  1110 ;;		On entry : 0/0
  1111 ;;		On exit  : 0/0
  1112 ;;		Unchanged: 0/0
  1113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1114 ;;      Params:         1       0       0       0       0       0       0       0       0
  1115 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1116 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1117 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1118 ;;Total ram usage:        4 bytes
  1119 ;; Hardware stack levels used: 1
  1120 ;; Hardware stack levels required when called: 5
  1121 ;; This function calls:
  1122 ;;		Nothing
  1123 ;; This function is called by:
  1124 ;;		_TransmitirDatos
  1125 ;; This function uses a non-reentrant model
  1126 ;;
  1127                           
  1128                           	psect	text3
  1129   000FCC                     __ptext3:
  1130                           	callstack 0
  1131   000FCC                     ___lbmod:
  1132                           	callstack 24
  1133                           
  1134                           ;incstack = 0
  1135                           ;___lbmod@dividend stored from wreg
  1136   000FCC  6E15               	movwf	___lbmod@dividend^0,c
  1137   000FCE  0E08               	movlw	8
  1138   000FD0  6E16               	movwf	___lbmod@counter^0,c
  1139   000FD2  0E00               	movlw	0
  1140   000FD4  6E17               	movwf	___lbmod@rem^0,c
  1141   000FD6                     l1503:
  1142   000FD6  90D8               	bcf	status,0,c
  1143   000FD8  3415               	rlcf	___lbmod@dividend^0,w,c
  1144   000FDA  3417               	rlcf	___lbmod@rem^0,w,c
  1145   000FDC  6E17               	movwf	___lbmod@rem^0,c
  1146   000FDE  90D8               	bcf	status,0,c
  1147   000FE0  3615               	rlcf	___lbmod@dividend^0,f,c
  1148   000FE2  5014               	movf	___lbmod@divisor^0,w,c
  1149   000FE4  5C17               	subwf	___lbmod@rem^0,w,c
  1150   000FE6  A0D8               	btfss	status,0,c
  1151   000FE8  D002               	goto	l1511
  1152   000FEA  5014               	movf	___lbmod@divisor^0,w,c
  1153   000FEC  5E17               	subwf	___lbmod@rem^0,f,c
  1154   000FEE                     l1511:
  1155   000FEE  2E16               	decfsz	___lbmod@counter^0,f,c
  1156   000FF0  D7F2               	goto	l1503
  1157   000FF2  5017               	movf	___lbmod@rem^0,w,c
  1158   000FF4  0012               	return		;funcret
  1159   000FF6                     __end_of___lbmod:
  1160                           	callstack 0
  1161                           
  1162 ;; *************** function ___lbdiv *****************
  1163 ;; Defined at:
  1164 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;  dividend        1    wreg     unsigned char 
  1167 ;;  divisor         1   23[COMRAM] unsigned char 
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  dividend        1   24[COMRAM] unsigned char 
  1170 ;;  quotient        1   26[COMRAM] unsigned char 
  1171 ;;  counter         1   25[COMRAM] unsigned char 
  1172 ;; Return value:  Size  Location     Type
  1173 ;;                  1    wreg      unsigned char 
  1174 ;; Registers used:
  1175 ;;		wreg, status,2, status,0
  1176 ;; Tracked objects:
  1177 ;;		On entry : 0/0
  1178 ;;		On exit  : 0/0
  1179 ;;		Unchanged: 0/0
  1180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1181 ;;      Params:         1       0       0       0       0       0       0       0       0
  1182 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1184 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1185 ;;Total ram usage:        4 bytes
  1186 ;; Hardware stack levels used: 1
  1187 ;; Hardware stack levels required when called: 5
  1188 ;; This function calls:
  1189 ;;		Nothing
  1190 ;; This function is called by:
  1191 ;;		_TransmitirDatos
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           	psect	text4
  1196   000F66                     __ptext4:
  1197                           	callstack 0
  1198   000F66                     ___lbdiv:
  1199                           	callstack 24
  1200                           
  1201                           ;incstack = 0
  1202                           ;___lbdiv@dividend stored from wreg
  1203   000F66  6E19               	movwf	___lbdiv@dividend^0,c
  1204   000F68  0E00               	movlw	0
  1205   000F6A  6E1B               	movwf	___lbdiv@quotient^0,c
  1206   000F6C  5018               	movf	___lbdiv@divisor^0,w,c
  1207   000F6E  B4D8               	btfsc	status,2,c
  1208   000F70  D015               	goto	l1497
  1209   000F72  0E01               	movlw	1
  1210   000F74  6E1A               	movwf	___lbdiv@counter^0,c
  1211   000F76  D003               	goto	l1485
  1212   000F78                     l1481:
  1213   000F78  90D8               	bcf	status,0,c
  1214   000F7A  3618               	rlcf	___lbdiv@divisor^0,f,c
  1215   000F7C  2A1A               	incf	___lbdiv@counter^0,f,c
  1216   000F7E                     l1485:
  1217   000F7E  AE18               	btfss	___lbdiv@divisor^0,7,c
  1218   000F80  D7FB               	goto	l1481
  1219   000F82                     u450:
  1220   000F82  90D8               	bcf	status,0,c
  1221   000F84  361B               	rlcf	___lbdiv@quotient^0,f,c
  1222   000F86  5018               	movf	___lbdiv@divisor^0,w,c
  1223   000F88  5C19               	subwf	___lbdiv@dividend^0,w,c
  1224   000F8A  A0D8               	btfss	status,0,c
  1225   000F8C  D003               	goto	l1493
  1226   000F8E  5018               	movf	___lbdiv@divisor^0,w,c
  1227   000F90  5E19               	subwf	___lbdiv@dividend^0,f,c
  1228   000F92  801B               	bsf	___lbdiv@quotient^0,0,c
  1229   000F94                     l1493:
  1230   000F94  90D8               	bcf	status,0,c
  1231   000F96  3218               	rrcf	___lbdiv@divisor^0,f,c
  1232   000F98  2E1A               	decfsz	___lbdiv@counter^0,f,c
  1233   000F9A  D7F3               	goto	u450
  1234   000F9C                     l1497:
  1235   000F9C  501B               	movf	___lbdiv@quotient^0,w,c
  1236   000F9E  0012               	return		;funcret
  1237   000FA0                     __end_of___lbdiv:
  1238                           	callstack 0
  1239                           
  1240 ;; *************** function _Transmitir *****************
  1241 ;; Defined at:
  1242 ;;		line 122 in file "Proyecto.c"
  1243 ;; Parameters:    Size  Location     Type
  1244 ;;  BufferT         1    wreg     unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  BufferT         1   19[COMRAM] unsigned char 
  1247 ;; Return value:  Size  Location     Type
  1248 ;;                  1    wreg      void 
  1249 ;; Registers used:
  1250 ;;		wreg
  1251 ;; Tracked objects:
  1252 ;;		On entry : 0/0
  1253 ;;		On exit  : 0/0
  1254 ;;		Unchanged: 0/0
  1255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1256 ;;      Params:         0       0       0       0       0       0       0       0       0
  1257 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1258 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1259 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1260 ;;Total ram usage:        1 bytes
  1261 ;; Hardware stack levels used: 1
  1262 ;; Hardware stack levels required when called: 5
  1263 ;; This function calls:
  1264 ;;		Nothing
  1265 ;; This function is called by:
  1266 ;;		_TransmitirDatos
  1267 ;; This function uses a non-reentrant model
  1268 ;;
  1269                           
  1270                           	psect	text5
  1271   001080                     __ptext5:
  1272                           	callstack 0
  1273   001080                     _Transmitir:
  1274                           	callstack 24
  1275                           
  1276                           ;incstack = 0
  1277                           ;Transmitir@BufferT stored from wreg
  1278   001080  6E14               	movwf	Transmitir@BufferT^0,c
  1279   001082                     
  1280                           ;Proyecto.c: 123: while (TRMT == 0);
  1281   001082  A2AC               	btfss	4012,1,c	;volatile
  1282   001084  D7FE               	goto	l1095
  1283                           
  1284                           ;Proyecto.c: 124: TXREG = BufferT;
  1285   001086  C014  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1286   00108A  0012               	return		;funcret
  1287   00108C                     __end_of_Transmitir:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _MensajeLCD_Var *****************
  1291 ;; Defined at:
  1292 ;;		line 215 in file "LibLCDXC8.h"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  a               2   24[COMRAM] PTR unsigned char 
  1295 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  1296 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1297 ;; Auto vars:     Size  Location     Type
  1298 ;;  i               2   28[COMRAM] int 
  1299 ;; Return value:  Size  Location     Type
  1300 ;;                  1    wreg      void 
  1301 ;; Registers used:
  1302 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1303 ;; Tracked objects:
  1304 ;;		On entry : 0/0
  1305 ;;		On exit  : 0/0
  1306 ;;		Unchanged: 0/0
  1307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1308 ;;      Params:         2       0       0       0       0       0       0       0       0
  1309 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1310 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1311 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1312 ;;Total ram usage:        6 bytes
  1313 ;; Hardware stack levels used: 1
  1314 ;; Hardware stack levels required when called: 8
  1315 ;; This function calls:
  1316 ;;		_EscribeLCD_c
  1317 ;;		_strlen
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;;		_TransmitirDatos
  1321 ;; This function uses a non-reentrant model
  1322 ;;
  1323                           
  1324                           	psect	text6
  1325   000BB6                     __ptext6:
  1326                           	callstack 0
  1327   000BB6                     _MensajeLCD_Var:
  1328                           	callstack 21
  1329                           
  1330                           ;LibLCDXC8.h: 219: for(int i = 0; i<strlen(a); i++){
  1331                           
  1332                           ;incstack = 0
  1333   000BB6  0E00               	movlw	0
  1334   000BB8  6E1E               	movwf	(MensajeLCD_Var@i+1)^0,c
  1335   000BBA  0E00               	movlw	0
  1336   000BBC  6E1D               	movwf	MensajeLCD_Var@i^0,c
  1337   000BBE  D033               	goto	l1473
  1338   000BC0                     l1465:
  1339                           
  1340                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  1341   000BC0  501D               	movf	MensajeLCD_Var@i^0,w,c
  1342   000BC2  2419               	addwf	MensajeLCD_Var@a^0,w,c
  1343   000BC4  6E1B               	movwf	??_MensajeLCD_Var^0,c
  1344   000BC6  501E               	movf	(MensajeLCD_Var@i+1)^0,w,c
  1345   000BC8  201A               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
  1346   000BCA  6E1C               	movwf	(??_MensajeLCD_Var+1)^0,c
  1347   000BCC  C01B  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1348   000BD0  C01C  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
  1349   000BD4  6AF8               	clrf	tblptru,c
  1350   000BD6  0E07               	movlw	(high __ramtop+-1)
  1351   000BD8  64F7               	cpfsgt	tblptrh,c
  1352   000BDA  D003               	bra	u407
  1353   000BDC  0008               	tblrd		*
  1354   000BDE  50F5               	movf	tablat,w,c
  1355   000BE0  D005               	bra	u400
  1356   000BE2                     u407:
  1357   000BE2  CFF6 FFE9          	movff	tblptrl,fsr0l
  1358   000BE6  CFF7 FFEA          	movff	tblptrh,fsr0h
  1359   000BEA  50EF               	movf	indf0,w,c
  1360   000BEC                     u400:
  1361   000BEC  0900               	iorlw	0
  1362   000BEE  B4D8               	btfsc	status,2,c
  1363   000BF0  0012               	return	
  1364                           
  1365                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  1366   000BF2  501D               	movf	MensajeLCD_Var@i^0,w,c
  1367   000BF4  2419               	addwf	MensajeLCD_Var@a^0,w,c
  1368   000BF6  6E1B               	movwf	??_MensajeLCD_Var^0,c
  1369   000BF8  501E               	movf	(MensajeLCD_Var@i+1)^0,w,c
  1370   000BFA  201A               	addwfc	(MensajeLCD_Var@a+1)^0,w,c
  1371   000BFC  6E1C               	movwf	(??_MensajeLCD_Var+1)^0,c
  1372   000BFE  C01B  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1373   000C02  C01C  FFF7         	movff	??_MensajeLCD_Var+1,tblptrh
  1374   000C06  6AF8               	clrf	tblptru,c
  1375   000C08  0E07               	movlw	(high __ramtop+-1)
  1376   000C0A  64F7               	cpfsgt	tblptrh,c
  1377   000C0C  D003               	bra	u427
  1378   000C0E  0008               	tblrd		*
  1379   000C10  50F5               	movf	tablat,w,c
  1380   000C12  D005               	bra	u420
  1381   000C14                     u427:
  1382   000C14  CFF6 FFE9          	movff	tblptrl,fsr0l
  1383   000C18  CFF7 FFEA          	movff	tblptrh,fsr0h
  1384   000C1C  50EF               	movf	indf0,w,c
  1385   000C1E                     u420:
  1386   000C1E  EC07  F008         	call	_EscribeLCD_c
  1387   000C22  4A1D               	infsnz	MensajeLCD_Var@i^0,f,c
  1388   000C24  2A1E               	incf	(MensajeLCD_Var@i+1)^0,f,c
  1389   000C26                     l1473:
  1390   000C26  C019  F014         	movff	MensajeLCD_Var@a,strlen@s
  1391   000C2A  C01A  F015         	movff	MensajeLCD_Var@a+1,strlen@s+1
  1392   000C2E  EC71  F007         	call	_strlen	;wreg free
  1393   000C32  5014               	movf	?_strlen^0,w,c
  1394   000C34  5C1D               	subwf	MensajeLCD_Var@i^0,w,c
  1395   000C36  5015               	movf	(?_strlen+1)^0,w,c
  1396   000C38  581E               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  1397   000C3A  B0D8               	btfsc	status,0,c
  1398   000C3C  0012               	return	
  1399   000C3E  D7C0               	goto	l1465
  1400   000C40                     __end_of_MensajeLCD_Var:
  1401                           	callstack 0
  1402                           
  1403 ;; *************** function _strlen *****************
  1404 ;; Defined at:
  1405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  s               2   19[COMRAM] PTR const unsigned char 
  1408 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  1409 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1410 ;; Auto vars:     Size  Location     Type
  1411 ;;  cp              2   21[COMRAM] PTR const unsigned char 
  1412 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  1413 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  1414 ;; Return value:  Size  Location     Type
  1415 ;;                  2   19[COMRAM] unsigned int 
  1416 ;; Registers used:
  1417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  1418 ;; Tracked objects:
  1419 ;;		On entry : 0/0
  1420 ;;		On exit  : 0/0
  1421 ;;		Unchanged: 0/0
  1422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1423 ;;      Params:         2       0       0       0       0       0       0       0       0
  1424 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1425 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1426 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1427 ;;Total ram usage:        4 bytes
  1428 ;; Hardware stack levels used: 1
  1429 ;; Hardware stack levels required when called: 5
  1430 ;; This function calls:
  1431 ;;		Nothing
  1432 ;; This function is called by:
  1433 ;;		_MensajeLCD_Var
  1434 ;; This function uses a non-reentrant model
  1435 ;;
  1436                           
  1437                           	psect	text7
  1438   000EE2                     __ptext7:
  1439                           	callstack 0
  1440   000EE2                     _strlen:
  1441                           	callstack 23
  1442                           
  1443                           ;incstack = 0
  1444   000EE2  C014  F016         	movff	strlen@s,strlen@cp
  1445   000EE6  C015  F017         	movff	strlen@s+1,strlen@cp+1
  1446   000EEA  D002               	goto	l1443
  1447   000EEC                     l1441:
  1448   000EEC  4A16               	infsnz	strlen@cp^0,f,c
  1449   000EEE  2A17               	incf	(strlen@cp+1)^0,f,c
  1450   000EF0                     l1443:
  1451   000EF0  C016  FFF6         	movff	strlen@cp,tblptrl
  1452   000EF4  C017  FFF7         	movff	strlen@cp+1,tblptrh
  1453   000EF8  6AF8               	clrf	tblptru,c
  1454   000EFA  0E07               	movlw	(high __ramtop+-1)
  1455   000EFC  64F7               	cpfsgt	tblptrh,c
  1456   000EFE  D003               	bra	u367
  1457   000F00  0008               	tblrd		*
  1458   000F02  50F5               	movf	tablat,w,c
  1459   000F04  D005               	bra	u360
  1460   000F06                     u367:
  1461   000F06  CFF6 FFE9          	movff	tblptrl,fsr0l
  1462   000F0A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1463   000F0E  50EF               	movf	indf0,w,c
  1464   000F10                     u360:
  1465   000F10  0900               	iorlw	0
  1466   000F12  A4D8               	btfss	status,2,c
  1467   000F14  D7EB               	goto	l1441
  1468   000F16  5014               	movf	strlen@s^0,w,c
  1469   000F18  5C16               	subwf	strlen@cp^0,w,c
  1470   000F1A  6E14               	movwf	?_strlen^0,c
  1471   000F1C  5015               	movf	(strlen@s+1)^0,w,c
  1472   000F1E  5817               	subwfb	(strlen@cp+1)^0,w,c
  1473   000F20  6E15               	movwf	(?_strlen+1)^0,c
  1474   000F22  0012               	return		;funcret
  1475   000F24                     __end_of_strlen:
  1476                           	callstack 0
  1477                           
  1478 ;; *************** function _EscribeLCD_c *****************
  1479 ;; Defined at:
  1480 ;;		line 118 in file "LibLCDXC8.h"
  1481 ;; Parameters:    Size  Location     Type
  1482 ;;  a               1    wreg     unsigned char 
  1483 ;; Auto vars:     Size  Location     Type
  1484 ;;  a               1   23[COMRAM] unsigned char 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  1    wreg      void 
  1487 ;; Registers used:
  1488 ;;		wreg, status,2, status,0, cstack
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         0       0       0       0       0       0       0       0       0
  1495 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        1 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; Hardware stack levels required when called: 7
  1501 ;; This function calls:
  1502 ;;		_EnviaDato
  1503 ;;		_HabilitaLCD
  1504 ;;		_RetardoLCD
  1505 ;; This function is called by:
  1506 ;;		_MensajeLCD_Var
  1507 ;;		_main
  1508 ;;		_TransmitirDatos
  1509 ;; This function uses a non-reentrant model
  1510 ;;
  1511                           
  1512                           	psect	text8
  1513   00100E                     __ptext8:
  1514                           	callstack 0
  1515   00100E                     _EscribeLCD_c:
  1516                           	callstack 21
  1517                           
  1518                           ;incstack = 0
  1519                           ;EscribeLCD_c@a stored from wreg
  1520   00100E  6E18               	movwf	EscribeLCD_c@a^0,c
  1521                           
  1522                           ;LibLCDXC8.h: 122: LATD2=1;
  1523   001010  848C               	bsf	3980,2,c	;volatile
  1524                           
  1525                           ;LibLCDXC8.h: 123: EnviaDato(a);
  1526   001012  5018               	movf	EscribeLCD_c@a^0,w,c
  1527   001014  EC2B  F007         	call	_EnviaDato
  1528                           
  1529                           ;LibLCDXC8.h: 124: HabilitaLCD();
  1530   001018  EC32  F008         	call	_HabilitaLCD	;wreg free
  1531                           
  1532                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  1533   00101C  0E04               	movlw	4
  1534   00101E  EC9C  F006         	call	_RetardoLCD
  1535   001022  0012               	return		;funcret
  1536   001024                     __end_of_EscribeLCD_c:
  1537                           	callstack 0
  1538                           
  1539 ;; *************** function _DireccionaLCD *****************
  1540 ;; Defined at:
  1541 ;;		line 227 in file "LibLCDXC8.h"
  1542 ;; Parameters:    Size  Location     Type
  1543 ;;  a               1    wreg     unsigned char 
  1544 ;; Auto vars:     Size  Location     Type
  1545 ;;  a               1   23[COMRAM] unsigned char 
  1546 ;; Return value:  Size  Location     Type
  1547 ;;                  1    wreg      void 
  1548 ;; Registers used:
  1549 ;;		wreg, status,2, status,0, cstack
  1550 ;; Tracked objects:
  1551 ;;		On entry : 0/0
  1552 ;;		On exit  : 0/0
  1553 ;;		Unchanged: 0/0
  1554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1555 ;;      Params:         0       0       0       0       0       0       0       0       0
  1556 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1557 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1558 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1559 ;;Total ram usage:        1 bytes
  1560 ;; Hardware stack levels used: 1
  1561 ;; Hardware stack levels required when called: 7
  1562 ;; This function calls:
  1563 ;;		_EnviaDato
  1564 ;;		_HabilitaLCD
  1565 ;;		_RetardoLCD
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;;		_TransmitirDatos
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text9
  1573   001024                     __ptext9:
  1574                           	callstack 0
  1575   001024                     _DireccionaLCD:
  1576                           	callstack 22
  1577                           
  1578                           ;incstack = 0
  1579                           ;DireccionaLCD@a stored from wreg
  1580   001024  6E18               	movwf	DireccionaLCD@a^0,c
  1581                           
  1582                           ;LibLCDXC8.h: 230: LATD2=0;
  1583   001026  948C               	bcf	3980,2,c	;volatile
  1584                           
  1585                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1586   001028  5018               	movf	DireccionaLCD@a^0,w,c
  1587   00102A  EC2B  F007         	call	_EnviaDato
  1588                           
  1589                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1590   00102E  EC32  F008         	call	_HabilitaLCD	;wreg free
  1591                           
  1592                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1593   001032  0E04               	movlw	4
  1594   001034  EC9C  F006         	call	_RetardoLCD
  1595   001038  0012               	return		;funcret
  1596   00103A                     __end_of_DireccionaLCD:
  1597                           	callstack 0
  1598                           
  1599 ;; *************** function _InicializaLCD *****************
  1600 ;; Defined at:
  1601 ;;		line 64 in file "LibLCDXC8.h"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;		None
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;		None
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1615 ;;      Params:         0       0       0       0       0       0       0       0       0
  1616 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1617 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1618 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1619 ;;Total ram usage:        0 bytes
  1620 ;; Hardware stack levels used: 1
  1621 ;; Hardware stack levels required when called: 8
  1622 ;; This function calls:
  1623 ;;		_BorraLCD
  1624 ;;		_EnviaDato
  1625 ;;		_HabilitaLCD
  1626 ;;		_RetardoLCD
  1627 ;; This function is called by:
  1628 ;;		_main
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text10
  1633   000B1A                     __ptext10:
  1634                           	callstack 0
  1635   000B1A                     _InicializaLCD:
  1636                           	callstack 22
  1637                           
  1638                           ;LibLCDXC8.h: 66: LATD2=0;
  1639                           
  1640                           ;incstack = 0
  1641   000B1A  948C               	bcf	3980,2,c	;volatile
  1642                           
  1643                           ;LibLCDXC8.h: 67: if(interfaz==4)
  1644   000B1C  0E04               	movlw	4
  1645   000B1E  1829               	xorwf	_interfaz^0,w,c
  1646   000B20  A4D8               	btfss	status,2,c
  1647   000B22  D004               	goto	l1169
  1648                           
  1649                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  1650   000B24  508C               	movf	140,w,c	;volatile
  1651   000B26  0B0F               	andlw	15
  1652   000B28  0930               	iorlw	48
  1653   000B2A  D001               	goto	L2
  1654   000B2C                     l1169:
  1655                           
  1656                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  1657   000B2C  0E3F               	movlw	63
  1658   000B2E                     L2:
  1659   000B2E  6E8C               	movwf	140,c	;volatile
  1660                           
  1661                           ;LibLCDXC8.h: 71: HabilitaLCD();
  1662   000B30  EC32  F008         	call	_HabilitaLCD	;wreg free
  1663                           
  1664                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  1665   000B34  0E01               	movlw	1
  1666   000B36  EC9C  F006         	call	_RetardoLCD
  1667                           
  1668                           ;LibLCDXC8.h: 73: if(interfaz==4)
  1669   000B3A  0E04               	movlw	4
  1670   000B3C  1829               	xorwf	_interfaz^0,w,c
  1671   000B3E  A4D8               	btfss	status,2,c
  1672   000B40  D004               	goto	l1179
  1673                           
  1674                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  1675   000B42  508C               	movf	140,w,c	;volatile
  1676   000B44  0B0F               	andlw	15
  1677   000B46  0930               	iorlw	48
  1678   000B48  D001               	goto	L3
  1679   000B4A                     l1179:
  1680                           
  1681                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  1682   000B4A  0E3F               	movlw	63
  1683   000B4C                     L3:
  1684   000B4C  6E8C               	movwf	140,c	;volatile
  1685                           
  1686                           ;LibLCDXC8.h: 77: HabilitaLCD();
  1687   000B4E  EC32  F008         	call	_HabilitaLCD	;wreg free
  1688                           
  1689                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  1690   000B52  0E03               	movlw	3
  1691   000B54  EC9C  F006         	call	_RetardoLCD
  1692                           
  1693                           ;LibLCDXC8.h: 79: if(interfaz==4)
  1694   000B58  0E04               	movlw	4
  1695   000B5A  1829               	xorwf	_interfaz^0,w,c
  1696   000B5C  A4D8               	btfss	status,2,c
  1697   000B5E  D004               	goto	l1189
  1698                           
  1699                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  1700   000B60  508C               	movf	140,w,c	;volatile
  1701   000B62  0B0F               	andlw	15
  1702   000B64  0930               	iorlw	48
  1703   000B66  D001               	goto	L4
  1704   000B68                     l1189:
  1705                           
  1706                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  1707   000B68  0E3F               	movlw	63
  1708   000B6A                     L4:
  1709   000B6A  6E8C               	movwf	140,c	;volatile
  1710                           
  1711                           ;LibLCDXC8.h: 83: HabilitaLCD();
  1712   000B6C  EC32  F008         	call	_HabilitaLCD	;wreg free
  1713                           
  1714                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  1715   000B70  0E04               	movlw	4
  1716   000B72  EC9C  F006         	call	_RetardoLCD
  1717                           
  1718                           ;LibLCDXC8.h: 85: if(interfaz==4){
  1719   000B76  0E04               	movlw	4
  1720   000B78  1829               	xorwf	_interfaz^0,w,c
  1721   000B7A  A4D8               	btfss	status,2,c
  1722   000B7C  D011               	goto	l1209
  1723                           
  1724                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  1725   000B7E  508C               	movf	140,w,c	;volatile
  1726   000B80  0B0F               	andlw	15
  1727   000B82  0920               	iorlw	32
  1728   000B84  6E8C               	movwf	140,c	;volatile
  1729                           
  1730                           ;LibLCDXC8.h: 87: HabilitaLCD();
  1731   000B86  EC32  F008         	call	_HabilitaLCD	;wreg free
  1732                           
  1733                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  1734   000B8A  0E04               	movlw	4
  1735   000B8C  EC9C  F006         	call	_RetardoLCD
  1736                           
  1737                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  1738   000B90  0E2F               	movlw	47
  1739   000B92  EC2B  F007         	call	_EnviaDato
  1740                           
  1741                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1742   000B96  EC32  F008         	call	_HabilitaLCD	;wreg free
  1743                           
  1744                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1745   000B9A  0E04               	movlw	4
  1746   000B9C  EC9C  F006         	call	_RetardoLCD
  1747   000BA0                     l1209:
  1748                           
  1749                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  1750   000BA0  EC28  F008         	call	_BorraLCD	;wreg free
  1751                           
  1752                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  1753   000BA4  0E0F               	movlw	15
  1754   000BA6  EC2B  F007         	call	_EnviaDato
  1755                           
  1756                           ;LibLCDXC8.h: 95: HabilitaLCD();
  1757   000BAA  EC32  F008         	call	_HabilitaLCD	;wreg free
  1758                           
  1759                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  1760   000BAE  0E04               	movlw	4
  1761   000BB0  EC9C  F006         	call	_RetardoLCD
  1762   000BB4  0012               	return		;funcret
  1763   000BB6                     __end_of_InicializaLCD:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _BorraLCD *****************
  1767 ;; Defined at:
  1768 ;;		line 105 in file "LibLCDXC8.h"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, status,2, status,0, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 7
  1789 ;; This function calls:
  1790 ;;		_EnviaDato
  1791 ;;		_HabilitaLCD
  1792 ;;		_RetardoLCD
  1793 ;; This function is called by:
  1794 ;;		_InicializaLCD
  1795 ;;		_main
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           
  1799                           	psect	text11
  1800   001050                     __ptext11:
  1801                           	callstack 0
  1802   001050                     _BorraLCD:
  1803                           	callstack 22
  1804                           
  1805                           ;LibLCDXC8.h: 107: LATD2=0;
  1806                           
  1807                           ;incstack = 0
  1808   001050  948C               	bcf	3980,2,c	;volatile
  1809                           
  1810                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  1811   001052  0E01               	movlw	1
  1812   001054  EC2B  F007         	call	_EnviaDato
  1813                           
  1814                           ;LibLCDXC8.h: 109: HabilitaLCD();
  1815   001058  EC32  F008         	call	_HabilitaLCD	;wreg free
  1816                           
  1817                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  1818   00105C  0E02               	movlw	2
  1819   00105E  EC9C  F006         	call	_RetardoLCD
  1820   001062  0012               	return		;funcret
  1821   001064                     __end_of_BorraLCD:
  1822                           	callstack 0
  1823                           
  1824 ;; *************** function _EnviaDato *****************
  1825 ;; Defined at:
  1826 ;;		line 54 in file "LibLCDXC8.h"
  1827 ;; Parameters:    Size  Location     Type
  1828 ;;  a               1    wreg     unsigned char 
  1829 ;; Auto vars:     Size  Location     Type
  1830 ;;  a               1   22[COMRAM] unsigned char 
  1831 ;; Return value:  Size  Location     Type
  1832 ;;                  1    wreg      void 
  1833 ;; Registers used:
  1834 ;;		wreg, status,2, status,0, cstack
  1835 ;; Tracked objects:
  1836 ;;		On entry : 0/0
  1837 ;;		On exit  : 0/0
  1838 ;;		Unchanged: 0/0
  1839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1840 ;;      Params:         0       0       0       0       0       0       0       0       0
  1841 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1842 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1843 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1844 ;;Total ram usage:        2 bytes
  1845 ;; Hardware stack levels used: 1
  1846 ;; Hardware stack levels required when called: 6
  1847 ;; This function calls:
  1848 ;;		_HabilitaLCD
  1849 ;;		_RetardoLCD
  1850 ;; This function is called by:
  1851 ;;		_InicializaLCD
  1852 ;;		_BorraLCD
  1853 ;;		_EscribeLCD_c
  1854 ;;		_DireccionaLCD
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           	psect	text12
  1859   000E56                     __ptext12:
  1860                           	callstack 0
  1861   000E56                     _EnviaDato:
  1862                           	callstack 21
  1863                           
  1864                           ;incstack = 0
  1865                           ;EnviaDato@a stored from wreg
  1866   000E56  6E17               	movwf	EnviaDato@a^0,c
  1867                           
  1868                           ;LibLCDXC8.h: 55: if(interfaz==4){
  1869   000E58  0E04               	movlw	4
  1870   000E5A  1829               	xorwf	_interfaz^0,w,c
  1871   000E5C  A4D8               	btfss	status,2,c
  1872   000E5E  D017               	goto	l1011
  1873                           
  1874                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1875   000E60  C017  F016         	movff	EnviaDato@a,??_EnviaDato
  1876   000E64  0EF0               	movlw	240
  1877   000E66  1616               	andwf	??_EnviaDato^0,f,c
  1878   000E68  508C               	movf	140,w,c	;volatile
  1879   000E6A  0B0F               	andlw	15
  1880   000E6C  1016               	iorwf	??_EnviaDato^0,w,c
  1881   000E6E  6E8C               	movwf	140,c	;volatile
  1882                           
  1883                           ;LibLCDXC8.h: 57: HabilitaLCD();
  1884   000E70  EC32  F008         	call	_HabilitaLCD	;wreg free
  1885                           
  1886                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  1887   000E74  0E01               	movlw	1
  1888   000E76  EC9C  F006         	call	_RetardoLCD
  1889                           
  1890                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  1891   000E7A  C017  F016         	movff	EnviaDato@a,??_EnviaDato
  1892   000E7E  3A16               	swapf	??_EnviaDato^0,f,c
  1893   000E80  0EF0               	movlw	240
  1894   000E82  1616               	andwf	??_EnviaDato^0,f,c
  1895   000E84  508C               	movf	140,w,c	;volatile
  1896   000E86  0B0F               	andlw	15
  1897   000E88  1016               	iorwf	??_EnviaDato^0,w,c
  1898   000E8A  6E8C               	movwf	140,c	;volatile
  1899                           
  1900                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  1901   000E8C  0012               	return	
  1902   000E8E                     l1011:
  1903   000E8E  0E08               	movlw	8
  1904   000E90  1829               	xorwf	_interfaz^0,w,c
  1905   000E92  A4D8               	btfss	status,2,c
  1906   000E94  0012               	return	
  1907                           
  1908                           ;LibLCDXC8.h: 61: LATD=a;
  1909   000E96  C017  FF8C         	movff	EnviaDato@a,3980	;volatile
  1910   000E9A  0012               	return		;funcret
  1911   000E9C                     __end_of_EnviaDato:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _RetardoLCD *****************
  1915 ;; Defined at:
  1916 ;;		line 262 in file "LibLCDXC8.h"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  a               1    wreg     unsigned char 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  a               1   20[COMRAM] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      void 
  1923 ;; Registers used:
  1924 ;;		wreg, status,2, status,0
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1930 ;;      Params:         0       0       0       0       0       0       0       0       0
  1931 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1932 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1933 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1934 ;;Total ram usage:        2 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 5
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_EnviaDato
  1941 ;;		_InicializaLCD
  1942 ;;		_BorraLCD
  1943 ;;		_EscribeLCD_c
  1944 ;;		_DireccionaLCD
  1945 ;; This function uses a non-reentrant model
  1946 ;;
  1947                           
  1948                           	psect	text13
  1949   000D38                     __ptext13:
  1950                           	callstack 0
  1951   000D38                     _RetardoLCD:
  1952                           	callstack 22
  1953                           
  1954                           ;incstack = 0
  1955                           ;RetardoLCD@a stored from wreg
  1956   000D38  6E15               	movwf	RetardoLCD@a^0,c
  1957                           
  1958                           ;LibLCDXC8.h: 263: switch(a){
  1959   000D3A  D023               	goto	l999
  1960   000D3C                     l989:
  1961   000D3C  0E62               	movlw	98
  1962   000D3E  6E14               	movwf	??_RetardoLCD^0,c
  1963   000D40  0E66               	movlw	102
  1964   000D42                     u707:
  1965   000D42  2EE8               	decfsz	wreg,f,c
  1966   000D44  D7FE               	bra	u707
  1967   000D46  2E14               	decfsz	??_RetardoLCD^0,f,c
  1968   000D48  D7FC               	bra	u707
  1969                           
  1970                           ;LibLCDXC8.h: 266: break;
  1971   000D4A  0012               	return	
  1972   000D4C                     l991:
  1973   000D4C  0E07               	movlw	7
  1974   000D4E  6E14               	movwf	??_RetardoLCD^0,c
  1975   000D50  0E7D               	movlw	125
  1976   000D52                     u717:
  1977   000D52  2EE8               	decfsz	wreg,f,c
  1978   000D54  D7FE               	bra	u717
  1979   000D56  2E14               	decfsz	??_RetardoLCD^0,f,c
  1980   000D58  D7FC               	bra	u717
  1981   000D5A  F000               	nop	
  1982                           
  1983                           ;LibLCDXC8.h: 268: _delay((unsigned long)((640)*(20000000/4000000.0)));
  1984   000D5C  0E05               	movlw	5
  1985   000D5E  6E14               	movwf	??_RetardoLCD^0,c
  1986   000D60  0E26               	movlw	38
  1987   000D62                     u727:
  1988   000D62  2EE8               	decfsz	wreg,f,c
  1989   000D64  D7FE               	bra	u727
  1990   000D66  2E14               	decfsz	??_RetardoLCD^0,f,c
  1991   000D68  D7FC               	bra	u727
  1992   000D6A  D000               	nop2	
  1993                           
  1994                           ;LibLCDXC8.h: 270: break;
  1995   000D6C  0012               	return	
  1996   000D6E                     l993:
  1997   000D6E  0EA6               	movlw	166
  1998   000D70                     u737:
  1999   000D70  2EE8               	decfsz	wreg,f,c
  2000   000D72  D7FE               	bra	u737
  2001   000D74  D000               	nop2	
  2002                           
  2003                           ;LibLCDXC8.h: 273: break;
  2004   000D76  0012               	return	
  2005   000D78                     l995:
  2006   000D78  0E42               	movlw	66
  2007   000D7A                     u747:
  2008   000D7A  2EE8               	decfsz	wreg,f,c
  2009   000D7C  D7FE               	bra	u747
  2010   000D7E  D000               	nop2	
  2011                           
  2012                           ;LibLCDXC8.h: 276: break;
  2013   000D80  0012               	return	
  2014   000D82                     l999:
  2015   000D82  5015               	movf	RetardoLCD@a^0,w,c
  2016                           
  2017                           ; Switch size 1, requested type "simple"
  2018                           ; Number of cases is 4, Range of values is 1 to 4
  2019                           ; switch strategies available:
  2020                           ; Name         Instructions Cycles
  2021                           ; simple_byte           13     7 (average)
  2022                           ;	Chosen strategy is simple_byte
  2023   000D84  0A01               	xorlw	1	; case 1
  2024   000D86  B4D8               	btfsc	status,2,c
  2025   000D88  D7D9               	goto	l989
  2026   000D8A  0A03               	xorlw	3	; case 2
  2027   000D8C  B4D8               	btfsc	status,2,c
  2028   000D8E  D7DE               	goto	l991
  2029   000D90  0A01               	xorlw	1	; case 3
  2030   000D92  B4D8               	btfsc	status,2,c
  2031   000D94  D7EC               	goto	l993
  2032   000D96  0A07               	xorlw	7	; case 4
  2033   000D98  A4D8               	btfss	status,2,c
  2034   000D9A  0012               	return	
  2035   000D9C  D7ED               	goto	l995
  2036   000D9E                     __end_of_RetardoLCD:
  2037                           	callstack 0
  2038                           
  2039 ;; *************** function _HabilitaLCD *****************
  2040 ;; Defined at:
  2041 ;;		line 98 in file "LibLCDXC8.h"
  2042 ;; Parameters:    Size  Location     Type
  2043 ;;		None
  2044 ;; Auto vars:     Size  Location     Type
  2045 ;;		None
  2046 ;; Return value:  Size  Location     Type
  2047 ;;                  1    wreg      void 
  2048 ;; Registers used:
  2049 ;;		wreg
  2050 ;; Tracked objects:
  2051 ;;		On entry : 0/0
  2052 ;;		On exit  : 0/0
  2053 ;;		Unchanged: 0/0
  2054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2055 ;;      Params:         0       0       0       0       0       0       0       0       0
  2056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2058 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2059 ;;Total ram usage:        0 bytes
  2060 ;; Hardware stack levels used: 1
  2061 ;; Hardware stack levels required when called: 5
  2062 ;; This function calls:
  2063 ;;		Nothing
  2064 ;; This function is called by:
  2065 ;;		_EnviaDato
  2066 ;;		_InicializaLCD
  2067 ;;		_BorraLCD
  2068 ;;		_EscribeLCD_c
  2069 ;;		_DireccionaLCD
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text14
  2074   001064                     __ptext14:
  2075                           	callstack 0
  2076   001064                     _HabilitaLCD:
  2077                           	callstack 22
  2078                           
  2079                           ;LibLCDXC8.h: 100: LATD3=1;
  2080                           
  2081                           ;incstack = 0
  2082   001064  868C               	bsf	3980,3,c	;volatile
  2083                           
  2084                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2085   001066  0E42               	movlw	66
  2086   001068                     u757:
  2087   001068  2EE8               	decfsz	wreg,f,c
  2088   00106A  D7FE               	bra	u757
  2089   00106C  D000               	nop2	
  2090                           
  2091                           ;LibLCDXC8.h: 103: LATD3=0;
  2092   00106E  968C               	bcf	3980,3,c	;volatile
  2093   001070  0012               	return		;funcret
  2094   001072                     __end_of_HabilitaLCD:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _ConfiguraLCD *****************
  2098 ;; Defined at:
  2099 ;;		line 50 in file "LibLCDXC8.h"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  a               1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  a               1   19[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 5
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text15
  2128   000FF6                     __ptext15:
  2129                           	callstack 0
  2130   000FF6                     _ConfiguraLCD:
  2131                           	callstack 25
  2132                           
  2133                           ;incstack = 0
  2134                           ;ConfiguraLCD@a stored from wreg
  2135   000FF6  6E14               	movwf	ConfiguraLCD@a^0,c
  2136                           
  2137                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  2138   000FF8  0E04               	movlw	4
  2139   000FFA  1814               	xorwf	ConfiguraLCD@a^0,w,c
  2140   000FFC  B4D8               	btfsc	status,2,c
  2141   000FFE  D004               	goto	u190
  2142   001000  0E08               	movlw	8
  2143   001002  1814               	xorwf	ConfiguraLCD@a^0,w,c
  2144   001004  A4D8               	btfss	status,2,c
  2145   001006  0012               	return	
  2146   001008                     u190:
  2147                           
  2148                           ;LibLCDXC8.h: 52: interfaz=a;
  2149   001008  C014  F029         	movff	ConfiguraLCD@a,_interfaz
  2150   00100C  0012               	return		;funcret
  2151   00100E                     __end_of_ConfiguraLCD:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _ISR *****************
  2155 ;; Defined at:
  2156 ;;		line 188 in file "Proyecto.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2172 ;;      Temps:          8       0       0       0       0       0       0       0       0
  2173 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2174 ;;Total ram usage:        8 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 4
  2177 ;; This function calls:
  2178 ;;		_Recibir
  2179 ;;		i2_MensajeLCD_Var
  2180 ;; This function is called by:
  2181 ;;		Interrupt level 2
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	intcode
  2186   000008                     __pintcode:
  2187                           	callstack 0
  2188   000008                     _ISR:
  2189                           	callstack 21
  2190                           
  2191                           ;incstack = 0
  2192   000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2193   00000A  ED65  F006         	call	int_func,f	;refresh shadow registers
  2194                           
  2195                           	psect	intcode_body
  2196   000CCA                     __pintcode_body:
  2197                           	callstack 21
  2198   000CCA                     int_func:
  2199                           	callstack 21
  2200   000CCA  0006               	pop		; remove dummy address from shadow register refresh
  2201   000CCC  CFE9 F00E          	movff	fsr0l,??_ISR+2
  2202   000CD0  CFEA F00F          	movff	fsr0h,??_ISR+3
  2203   000CD4  CFF6 F010          	movff	tblptrl,??_ISR+4
  2204   000CD8  CFF7 F011          	movff	tblptrh,??_ISR+5
  2205   000CDC  CFF8 F012          	movff	tblptru,??_ISR+6
  2206   000CE0  CFF5 F013          	movff	tablat,??_ISR+7
  2207                           
  2208                           ;Proyecto.c: 213: if (RCIF==1) {
  2209   000CE4  AA9E               	btfss	3998,5,c	;volatile
  2210   000CE6  D01A               	goto	i2l227
  2211                           
  2212                           ;Proyecto.c: 214: en_entrada=1;
  2213   000CE8  0E01               	movlw	1
  2214   000CEA  6E25               	movwf	_en_entrada^0,c
  2215                           
  2216                           ;Proyecto.c: 215: Minimo = Recibir();
  2217   000CEC  EC46  F008         	call	_Recibir	;wreg free
  2218   000CF0  5001               	movf	?_Recibir^0,w,c
  2219   000CF2  6E28               	movwf	_Minimo^0,c
  2220                           
  2221                           ;Proyecto.c: 217: MensajeLCD_Var(Minimo);
  2222   000CF4  5028               	movf	_Minimo^0,w,c
  2223   000CF6  6E0C               	movwf	??_ISR^0,c
  2224   000CF8  6A0D               	clrf	(??_ISR+1)^0,c
  2225   000CFA  C00C  F006         	movff	??_ISR,i2MensajeLCD_Var@a
  2226   000CFE  C00D  F007         	movff	??_ISR+1,i2MensajeLCD_Var@a+1
  2227   000D02  EC20  F006         	call	i2_MensajeLCD_Var	;wreg free
  2228                           
  2229                           ;Proyecto.c: 218: _delay((unsigned long)((1000)*(8000000/4000.0)));
  2230   000D06  0E0B               	movlw	11
  2231   000D08  6E0D               	movwf	(??_ISR+1)^0,c
  2232   000D0A  0E26               	movlw	38
  2233   000D0C  6E0C               	movwf	??_ISR^0,c
  2234   000D0E  0E5E               	movlw	94
  2235   000D10                     i2u76_47:
  2236   000D10  2EE8               	decfsz	wreg,f,c
  2237   000D12  D7FE               	bra	i2u76_47
  2238   000D14  2E0C               	decfsz	??_ISR^0,f,c
  2239   000D16  D7FC               	bra	i2u76_47
  2240   000D18  2E0D               	decfsz	(??_ISR+1)^0,f,c
  2241   000D1A  D7FA               	bra	i2u76_47
  2242   000D1C                     i2l227:
  2243   000D1C  C013  FFF5         	movff	??_ISR+7,tablat
  2244   000D20  C012  FFF8         	movff	??_ISR+6,tblptru
  2245   000D24  C011  FFF7         	movff	??_ISR+5,tblptrh
  2246   000D28  C010  FFF6         	movff	??_ISR+4,tblptrl
  2247   000D2C  C00F  FFEA         	movff	??_ISR+3,fsr0h
  2248   000D30  C00E  FFE9         	movff	??_ISR+2,fsr0l
  2249   000D34  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2250   000D36  0011               	retfie		f
  2251   000D38                     __end_of_ISR:
  2252                           	callstack 0
  2253                           
  2254 ;; *************** function i2_MensajeLCD_Var *****************
  2255 ;; Defined at:
  2256 ;;		line 215 in file "LibLCDXC8.h"
  2257 ;; Parameters:    Size  Location     Type
  2258 ;;  a               2    5[COMRAM] PTR unsigned char 
  2259 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  2260 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;  i               2    9[COMRAM] int 
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         2       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2275 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:        6 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 3
  2279 ;; This function calls:
  2280 ;;		i2_EscribeLCD_c
  2281 ;;		i2_strlen
  2282 ;; This function is called by:
  2283 ;;		_ISR
  2284 ;; This function uses a non-reentrant model
  2285 ;;
  2286                           
  2287                           	psect	text17
  2288   000C40                     __ptext17:
  2289                           	callstack 0
  2290   000C40                     i2_MensajeLCD_Var:
  2291                           	callstack 21
  2292                           
  2293                           ;LibLCDXC8.h: 219: for(int i = 0; i<strlen(a); i++){
  2294                           
  2295                           ;incstack = 0
  2296   000C40  0E00               	movlw	0
  2297   000C42  6E0B               	movwf	(i2MensajeLCD_Var@i+1)^0,c
  2298   000C44  0E00               	movlw	0
  2299   000C46  6E0A               	movwf	i2MensajeLCD_Var@i^0,c
  2300   000C48  D033               	goto	i2l1599
  2301   000C4A                     i2l1591:
  2302                           
  2303                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  2304   000C4A  500A               	movf	i2MensajeLCD_Var@i^0,w,c
  2305   000C4C  2406               	addwf	i2MensajeLCD_Var@a^0,w,c
  2306   000C4E  6E08               	movwf	??i2_MensajeLCD_Var^0,c
  2307   000C50  500B               	movf	(i2MensajeLCD_Var@i+1)^0,w,c
  2308   000C52  2007               	addwfc	(i2MensajeLCD_Var@a+1)^0,w,c
  2309   000C54  6E09               	movwf	(??i2_MensajeLCD_Var+1)^0,c
  2310   000C56  C008  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  2311   000C5A  C009  FFF7         	movff	??i2_MensajeLCD_Var+1,tblptrh
  2312   000C5E  6AF8               	clrf	tblptru,c
  2313   000C60  0E07               	movlw	(high __ramtop+-1)
  2314   000C62  64F7               	cpfsgt	tblptrh,c
  2315   000C64  D003               	bra	i2u54_47
  2316   000C66  0008               	tblrd		*
  2317   000C68  50F5               	movf	tablat,w,c
  2318   000C6A  D005               	bra	i2u54_40
  2319   000C6C                     i2u54_47:
  2320   000C6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2321   000C70  CFF7 FFEA          	movff	tblptrh,fsr0h
  2322   000C74  50EF               	movf	indf0,w,c
  2323   000C76                     i2u54_40:
  2324   000C76  0900               	iorlw	0
  2325   000C78  B4D8               	btfsc	status,2,c
  2326   000C7A  0012               	return	
  2327                           
  2328                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  2329   000C7C  500A               	movf	i2MensajeLCD_Var@i^0,w,c
  2330   000C7E  2406               	addwf	i2MensajeLCD_Var@a^0,w,c
  2331   000C80  6E08               	movwf	??i2_MensajeLCD_Var^0,c
  2332   000C82  500B               	movf	(i2MensajeLCD_Var@i+1)^0,w,c
  2333   000C84  2007               	addwfc	(i2MensajeLCD_Var@a+1)^0,w,c
  2334   000C86  6E09               	movwf	(??i2_MensajeLCD_Var+1)^0,c
  2335   000C88  C008  FFF6         	movff	??i2_MensajeLCD_Var,tblptrl
  2336   000C8C  C009  FFF7         	movff	??i2_MensajeLCD_Var+1,tblptrh
  2337   000C90  6AF8               	clrf	tblptru,c
  2338   000C92  0E07               	movlw	(high __ramtop+-1)
  2339   000C94  64F7               	cpfsgt	tblptrh,c
  2340   000C96  D003               	bra	i2u56_47
  2341   000C98  0008               	tblrd		*
  2342   000C9A  50F5               	movf	tablat,w,c
  2343   000C9C  D005               	bra	i2u56_40
  2344   000C9E                     i2u56_47:
  2345   000C9E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2346   000CA2  CFF7 FFEA          	movff	tblptrh,fsr0h
  2347   000CA6  50EF               	movf	indf0,w,c
  2348   000CA8                     i2u56_40:
  2349   000CA8  EC1D  F008         	call	i2_EscribeLCD_c
  2350   000CAC  4A0A               	infsnz	i2MensajeLCD_Var@i^0,f,c
  2351   000CAE  2A0B               	incf	(i2MensajeLCD_Var@i+1)^0,f,c
  2352   000CB0                     i2l1599:
  2353   000CB0  C006  F001         	movff	i2MensajeLCD_Var@a,i2strlen@s
  2354   000CB4  C007  F002         	movff	i2MensajeLCD_Var@a+1,i2strlen@s+1
  2355   000CB8  EC92  F007         	call	i2_strlen	;wreg free
  2356   000CBC  5001               	movf	?i2_strlen^0,w,c
  2357   000CBE  5C0A               	subwf	i2MensajeLCD_Var@i^0,w,c
  2358   000CC0  5002               	movf	(?i2_strlen+1)^0,w,c
  2359   000CC2  580B               	subwfb	(i2MensajeLCD_Var@i+1)^0,w,c
  2360   000CC4  B0D8               	btfsc	status,0,c
  2361   000CC6  0012               	return	
  2362   000CC8  D7C0               	goto	i2l1591
  2363   000CCA                     __end_ofi2_MensajeLCD_Var:
  2364                           	callstack 0
  2365                           
  2366 ;; *************** function i2_strlen *****************
  2367 ;; Defined at:
  2368 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  s               2    0[COMRAM] PTR const unsigned char 
  2371 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  2372 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  cp              2    2[COMRAM] PTR const unsigned char 
  2375 ;;		 -> RAM(2047), STR_7(3), STR_6(11), STR_5(10), 
  2376 ;;		 -> STR_4(11), STR_3(13), STR_2(11), STR_1(14), 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  2    0[COMRAM] unsigned int 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2386 ;;      Params:         2       0       0       0       0       0       0       0       0
  2387 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2388 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2389 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2390 ;;Total ram usage:        4 bytes
  2391 ;; Hardware stack levels used: 1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		i2_MensajeLCD_Var
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text18
  2400   000F24                     __ptext18:
  2401                           	callstack 0
  2402   000F24                     i2_strlen:
  2403                           	callstack 23
  2404                           
  2405                           ;incstack = 0
  2406   000F24  C001  F003         	movff	i2strlen@s,i2strlen@cp
  2407   000F28  C002  F004         	movff	i2strlen@s+1,i2strlen@cp+1
  2408   000F2C  D002               	goto	i2l1529
  2409   000F2E                     i2l1527:
  2410   000F2E  4A03               	infsnz	i2strlen@cp^0,f,c
  2411   000F30  2A04               	incf	(i2strlen@cp+1)^0,f,c
  2412   000F32                     i2l1529:
  2413   000F32  C003  FFF6         	movff	i2strlen@cp,tblptrl
  2414   000F36  C004  FFF7         	movff	i2strlen@cp+1,tblptrh
  2415   000F3A  6AF8               	clrf	tblptru,c
  2416   000F3C  0E07               	movlw	(high __ramtop+-1)
  2417   000F3E  64F7               	cpfsgt	tblptrh,c
  2418   000F40  D003               	bra	i2u48_47
  2419   000F42  0008               	tblrd		*
  2420   000F44  50F5               	movf	tablat,w,c
  2421   000F46  D005               	bra	i2u48_40
  2422   000F48                     i2u48_47:
  2423   000F48  CFF6 FFE9          	movff	tblptrl,fsr0l
  2424   000F4C  CFF7 FFEA          	movff	tblptrh,fsr0h
  2425   000F50  50EF               	movf	indf0,w,c
  2426   000F52                     i2u48_40:
  2427   000F52  0900               	iorlw	0
  2428   000F54  A4D8               	btfss	status,2,c
  2429   000F56  D7EB               	goto	i2l1527
  2430   000F58  5001               	movf	i2strlen@s^0,w,c
  2431   000F5A  5C03               	subwf	i2strlen@cp^0,w,c
  2432   000F5C  6E01               	movwf	?i2_strlen^0,c
  2433   000F5E  5002               	movf	(i2strlen@s+1)^0,w,c
  2434   000F60  5804               	subwfb	(i2strlen@cp+1)^0,w,c
  2435   000F62  6E02               	movwf	(?i2_strlen+1)^0,c
  2436   000F64  0012               	return		;funcret
  2437   000F66                     __end_ofi2_strlen:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function i2_EscribeLCD_c *****************
  2441 ;; Defined at:
  2442 ;;		line 118 in file "LibLCDXC8.h"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  a               1    wreg     unsigned char 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;  a               1    4[COMRAM] unsigned char 
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      void 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0, cstack
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 2
  2463 ;; This function calls:
  2464 ;;		i2_EnviaDato
  2465 ;;		i2_HabilitaLCD
  2466 ;;		i2_RetardoLCD
  2467 ;; This function is called by:
  2468 ;;		i2_MensajeLCD_Var
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text19
  2473   00103A                     __ptext19:
  2474                           	callstack 0
  2475   00103A                     i2_EscribeLCD_c:
  2476                           	callstack 21
  2477                           
  2478                           ;incstack = 0
  2479                           ;i2EscribeLCD_c@a stored from wreg
  2480   00103A  6E05               	movwf	i2EscribeLCD_c@a^0,c
  2481                           
  2482                           ;LibLCDXC8.h: 122: LATD2=1;
  2483   00103C  848C               	bsf	3980,2,c	;volatile
  2484                           
  2485                           ;LibLCDXC8.h: 123: EnviaDato(a);
  2486   00103E  5005               	movf	i2EscribeLCD_c@a^0,w,c
  2487   001040  EC4E  F007         	call	i2_EnviaDato
  2488                           
  2489                           ;LibLCDXC8.h: 124: HabilitaLCD();
  2490   001044  EC39  F008         	call	i2_HabilitaLCD	;wreg free
  2491                           
  2492                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  2493   001048  0E04               	movlw	4
  2494   00104A  ECCF  F006         	call	i2_RetardoLCD
  2495   00104E  0012               	return		;funcret
  2496   001050                     __end_ofi2_EscribeLCD_c:
  2497                           	callstack 0
  2498                           
  2499 ;; *************** function i2_EnviaDato *****************
  2500 ;; Defined at:
  2501 ;;		line 54 in file "LibLCDXC8.h"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  a               1    wreg     unsigned char 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  a               1    3[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2517 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2518 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2519 ;;Total ram usage:        2 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 1
  2522 ;; This function calls:
  2523 ;;		i2_HabilitaLCD
  2524 ;;		i2_RetardoLCD
  2525 ;; This function is called by:
  2526 ;;		i2_EscribeLCD_c
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text20
  2531   000E9C                     __ptext20:
  2532                           	callstack 0
  2533   000E9C                     i2_EnviaDato:
  2534                           	callstack 21
  2535                           
  2536                           ;incstack = 0
  2537                           ;i2EnviaDato@a stored from wreg
  2538   000E9C  6E04               	movwf	i2EnviaDato@a^0,c
  2539                           
  2540                           ;LibLCDXC8.h: 55: if(interfaz==4){
  2541   000E9E  0E04               	movlw	4
  2542   000EA0  1829               	xorwf	_interfaz^0,w,c
  2543   000EA2  A4D8               	btfss	status,2,c
  2544   000EA4  D017               	goto	i2l1459
  2545                           
  2546                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  2547   000EA6  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  2548   000EAA  0EF0               	movlw	240
  2549   000EAC  1603               	andwf	??i2_EnviaDato^0,f,c
  2550   000EAE  508C               	movf	140,w,c	;volatile
  2551   000EB0  0B0F               	andlw	15
  2552   000EB2  1003               	iorwf	??i2_EnviaDato^0,w,c
  2553   000EB4  6E8C               	movwf	140,c	;volatile
  2554                           
  2555                           ;LibLCDXC8.h: 57: HabilitaLCD();
  2556   000EB6  EC39  F008         	call	i2_HabilitaLCD	;wreg free
  2557                           
  2558                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  2559   000EBA  0E01               	movlw	1
  2560   000EBC  ECCF  F006         	call	i2_RetardoLCD
  2561                           
  2562                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  2563   000EC0  C004  F003         	movff	i2EnviaDato@a,??i2_EnviaDato
  2564   000EC4  3A03               	swapf	??i2_EnviaDato^0,f,c
  2565   000EC6  0EF0               	movlw	240
  2566   000EC8  1603               	andwf	??i2_EnviaDato^0,f,c
  2567   000ECA  508C               	movf	140,w,c	;volatile
  2568   000ECC  0B0F               	andlw	15
  2569   000ECE  1003               	iorwf	??i2_EnviaDato^0,w,c
  2570   000ED0  6E8C               	movwf	140,c	;volatile
  2571                           
  2572                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  2573   000ED2  0012               	return	
  2574   000ED4                     i2l1459:
  2575   000ED4  0E08               	movlw	8
  2576   000ED6  1829               	xorwf	_interfaz^0,w,c
  2577   000ED8  A4D8               	btfss	status,2,c
  2578   000EDA  0012               	return	
  2579                           
  2580                           ;LibLCDXC8.h: 61: LATD=a;
  2581   000EDC  C004  FF8C         	movff	i2EnviaDato@a,3980	;volatile
  2582   000EE0  0012               	return		;funcret
  2583   000EE2                     __end_ofi2_EnviaDato:
  2584                           	callstack 0
  2585                           
  2586 ;; *************** function i2_RetardoLCD *****************
  2587 ;; Defined at:
  2588 ;;		line 262 in file "LibLCDXC8.h"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;  a               1    wreg     unsigned char 
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  a               1    1[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      void 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        2 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; This function calls:
  2609 ;;		Nothing
  2610 ;; This function is called by:
  2611 ;;		i2_EnviaDato
  2612 ;;		i2_EscribeLCD_c
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text21
  2617   000D9E                     __ptext21:
  2618                           	callstack 0
  2619   000D9E                     i2_RetardoLCD:
  2620                           	callstack 22
  2621                           
  2622                           ;incstack = 0
  2623                           ;i2RetardoLCD@a stored from wreg
  2624   000D9E  6E02               	movwf	i2RetardoLCD@a^0,c
  2625                           
  2626                           ;LibLCDXC8.h: 263: switch(a){
  2627   000DA0  D023               	goto	i2l1437
  2628   000DA2                     i2l1427:
  2629   000DA2  0E62               	movlw	98
  2630   000DA4  6E01               	movwf	??i2_RetardoLCD^0,c
  2631   000DA6  0E66               	movlw	102
  2632   000DA8                     i2u77_47:
  2633   000DA8  2EE8               	decfsz	wreg,f,c
  2634   000DAA  D7FE               	bra	i2u77_47
  2635   000DAC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  2636   000DAE  D7FC               	bra	i2u77_47
  2637                           
  2638                           ;LibLCDXC8.h: 266: break;
  2639   000DB0  0012               	return	
  2640   000DB2                     i2l1429:
  2641   000DB2  0E07               	movlw	7
  2642   000DB4  6E01               	movwf	??i2_RetardoLCD^0,c
  2643   000DB6  0E7D               	movlw	125
  2644   000DB8                     i2u78_47:
  2645   000DB8  2EE8               	decfsz	wreg,f,c
  2646   000DBA  D7FE               	bra	i2u78_47
  2647   000DBC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  2648   000DBE  D7FC               	bra	i2u78_47
  2649   000DC0  F000               	nop	
  2650                           
  2651                           ;LibLCDXC8.h: 268: _delay((unsigned long)((640)*(20000000/4000000.0)));
  2652   000DC2  0E05               	movlw	5
  2653   000DC4  6E01               	movwf	??i2_RetardoLCD^0,c
  2654   000DC6  0E26               	movlw	38
  2655   000DC8                     i2u79_47:
  2656   000DC8  2EE8               	decfsz	wreg,f,c
  2657   000DCA  D7FE               	bra	i2u79_47
  2658   000DCC  2E01               	decfsz	??i2_RetardoLCD^0,f,c
  2659   000DCE  D7FC               	bra	i2u79_47
  2660   000DD0  D000               	nop2	
  2661                           
  2662                           ;LibLCDXC8.h: 270: break;
  2663   000DD2  0012               	return	
  2664   000DD4                     i2l1431:
  2665   000DD4  0EA6               	movlw	166
  2666   000DD6                     i2u80_47:
  2667   000DD6  2EE8               	decfsz	wreg,f,c
  2668   000DD8  D7FE               	bra	i2u80_47
  2669   000DDA  D000               	nop2	
  2670                           
  2671                           ;LibLCDXC8.h: 273: break;
  2672   000DDC  0012               	return	
  2673   000DDE                     i2l1433:
  2674   000DDE  0E42               	movlw	66
  2675   000DE0                     i2u81_47:
  2676   000DE0  2EE8               	decfsz	wreg,f,c
  2677   000DE2  D7FE               	bra	i2u81_47
  2678   000DE4  D000               	nop2	
  2679                           
  2680                           ;LibLCDXC8.h: 276: break;
  2681   000DE6  0012               	return	
  2682   000DE8                     i2l1437:
  2683   000DE8  5002               	movf	i2RetardoLCD@a^0,w,c
  2684                           
  2685                           ; Switch size 1, requested type "simple"
  2686                           ; Number of cases is 4, Range of values is 1 to 4
  2687                           ; switch strategies available:
  2688                           ; Name         Instructions Cycles
  2689                           ; simple_byte           13     7 (average)
  2690                           ;	Chosen strategy is simple_byte
  2691   000DEA  0A01               	xorlw	1	; case 1
  2692   000DEC  B4D8               	btfsc	status,2,c
  2693   000DEE  D7D9               	goto	i2l1427
  2694   000DF0  0A03               	xorlw	3	; case 2
  2695   000DF2  B4D8               	btfsc	status,2,c
  2696   000DF4  D7DE               	goto	i2l1429
  2697   000DF6  0A01               	xorlw	1	; case 3
  2698   000DF8  B4D8               	btfsc	status,2,c
  2699   000DFA  D7EC               	goto	i2l1431
  2700   000DFC  0A07               	xorlw	7	; case 4
  2701   000DFE  A4D8               	btfss	status,2,c
  2702   000E00  0012               	return	
  2703   000E02  D7ED               	goto	i2l1433
  2704   000E04                     __end_ofi2_RetardoLCD:
  2705                           	callstack 0
  2706                           
  2707 ;; *************** function i2_HabilitaLCD *****************
  2708 ;; Defined at:
  2709 ;;		line 98 in file "LibLCDXC8.h"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;		None
  2712 ;; Auto vars:     Size  Location     Type
  2713 ;;		None
  2714 ;; Return value:  Size  Location     Type
  2715 ;;                  1    wreg      void 
  2716 ;; Registers used:
  2717 ;;		wreg
  2718 ;; Tracked objects:
  2719 ;;		On entry : 0/0
  2720 ;;		On exit  : 0/0
  2721 ;;		Unchanged: 0/0
  2722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2723 ;;      Params:         0       0       0       0       0       0       0       0       0
  2724 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2725 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2726 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2727 ;;Total ram usage:        0 bytes
  2728 ;; Hardware stack levels used: 1
  2729 ;; This function calls:
  2730 ;;		Nothing
  2731 ;; This function is called by:
  2732 ;;		i2_EnviaDato
  2733 ;;		i2_EscribeLCD_c
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text22
  2738   001072                     __ptext22:
  2739                           	callstack 0
  2740   001072                     i2_HabilitaLCD:
  2741                           	callstack 22
  2742                           
  2743                           ;LibLCDXC8.h: 100: LATD3=1;
  2744                           
  2745                           ;incstack = 0
  2746   001072  868C               	bsf	3980,3,c	;volatile
  2747                           
  2748                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  2749   001074  0E42               	movlw	66
  2750   001076                     i2u82_47:
  2751   001076  2EE8               	decfsz	wreg,f,c
  2752   001078  D7FE               	bra	i2u82_47
  2753   00107A  D000               	nop2	
  2754                           
  2755                           ;LibLCDXC8.h: 103: LATD3=0;
  2756   00107C  968C               	bcf	3980,3,c	;volatile
  2757   00107E  0012               	return		;funcret
  2758   001080                     __end_ofi2_HabilitaLCD:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _Recibir *****************
  2762 ;; Defined at:
  2763 ;;		line 127 in file "Proyecto.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  2    0[COMRAM] unsigned int 
  2770 ;; Registers used:
  2771 ;;		None
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         2       0       0       0       0       0       0       0       0
  2778 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        2 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_ISR
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text23
  2791   00108C                     __ptext23:
  2792                           	callstack 0
  2793   00108C                     _Recibir:
  2794                           	callstack 24
  2795                           
  2796                           ;Proyecto.c: 128: while (RCIF == 0);
  2797                           
  2798                           ;incstack = 0
  2799   00108C  AA9E               	btfss	3998,5,c	;volatile
  2800   00108E  D7FE               	goto	__ptext23
  2801                           
  2802                           ;Proyecto.c: 129: return RCREG;
  2803   001090  CFAE F001          	movff	4014,?_Recibir	;volatile
  2804   001094  6A02               	clrf	(?_Recibir+1)^0,c
  2805   001096  0012               	return		;funcret
  2806   001098                     __end_of_Recibir:
  2807                           	callstack 0
  2808                           
  2809                           	psect	rparam
  2810   000000                     
  2811                           	psect	temp
  2812   00002A                     btemp:
  2813                           	callstack 0
  2814   00002A                     	ds	1
  2815   000000                     int$flags	set	btemp
  2816   000000                     wtemp8	set	btemp+1
  2817   000000                     ttemp5	set	btemp+1
  2818   000000                     ttemp6	set	btemp+4
  2819   000000                     ttemp7	set	btemp+8
  2820                           
  2821                           	psect	idloc
  2822                           
  2823                           ;Config register IDLOC0 @ 0x200000
  2824                           ;	unspecified, using default values
  2825   200000                     	org	2097152
  2826   200000  FF                 	db	255
  2827                           
  2828                           ;Config register IDLOC1 @ 0x200001
  2829                           ;	unspecified, using default values
  2830   200001                     	org	2097153
  2831   200001  FF                 	db	255
  2832                           
  2833                           ;Config register IDLOC2 @ 0x200002
  2834                           ;	unspecified, using default values
  2835   200002                     	org	2097154
  2836   200002  FF                 	db	255
  2837                           
  2838                           ;Config register IDLOC3 @ 0x200003
  2839                           ;	unspecified, using default values
  2840   200003                     	org	2097155
  2841   200003  FF                 	db	255
  2842                           
  2843                           ;Config register IDLOC4 @ 0x200004
  2844                           ;	unspecified, using default values
  2845   200004                     	org	2097156
  2846   200004  FF                 	db	255
  2847                           
  2848                           ;Config register IDLOC5 @ 0x200005
  2849                           ;	unspecified, using default values
  2850   200005                     	org	2097157
  2851   200005  FF                 	db	255
  2852                           
  2853                           ;Config register IDLOC6 @ 0x200006
  2854                           ;	unspecified, using default values
  2855   200006                     	org	2097158
  2856   200006  FF                 	db	255
  2857                           
  2858                           ;Config register IDLOC7 @ 0x200007
  2859                           ;	unspecified, using default values
  2860   200007                     	org	2097159
  2861   200007  FF                 	db	255
  2862                           
  2863                           	psect	config
  2864                           
  2865                           ;Config register CONFIG1L @ 0x300000
  2866                           ;	unspecified, using default values
  2867                           ;	PLL Prescaler Selection bits
  2868                           ;	PLLDIV = 0x0, unprogrammed default
  2869                           ;	System Clock Postscaler Selection bits
  2870                           ;	CPUDIV = 0x0, unprogrammed default
  2871                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2872                           ;	USBDIV = 0x0, unprogrammed default
  2873   300000                     	org	3145728
  2874   300000  00                 	db	0
  2875                           
  2876                           ;Config register CONFIG1H @ 0x300001
  2877                           ;	Oscillator Selection bits
  2878                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2879                           ;	Fail-Safe Clock Monitor Enable bit
  2880                           ;	FCMEN = 0x0, unprogrammed default
  2881                           ;	Internal/External Oscillator Switchover bit
  2882                           ;	IESO = 0x0, unprogrammed default
  2883   300001                     	org	3145729
  2884   300001  09                 	db	9
  2885                           
  2886                           ;Config register CONFIG2L @ 0x300002
  2887                           ;	unspecified, using default values
  2888                           ;	Power-up Timer Enable bit
  2889                           ;	PWRT = 0x1, unprogrammed default
  2890                           ;	Brown-out Reset Enable bits
  2891                           ;	BOR = 0x3, unprogrammed default
  2892                           ;	Brown-out Reset Voltage bits
  2893                           ;	BORV = 0x3, unprogrammed default
  2894                           ;	USB Voltage Regulator Enable bit
  2895                           ;	VREGEN = 0x0, unprogrammed default
  2896   300002                     	org	3145730
  2897   300002  1F                 	db	31
  2898                           
  2899                           ;Config register CONFIG2H @ 0x300003
  2900                           ;	Watchdog Timer Enable bit
  2901                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2902                           ;	Watchdog Timer Postscale Select bits
  2903                           ;	WDTPS = 0xF, unprogrammed default
  2904   300003                     	org	3145731
  2905   300003  1E                 	db	30
  2906                           
  2907                           ; Padding undefined space
  2908   300004                     	org	3145732
  2909   300004  FF                 	db	255
  2910                           
  2911                           ;Config register CONFIG3H @ 0x300005
  2912                           ;	CCP2 MUX bit
  2913                           ;	CCP2MX = 0x1, unprogrammed default
  2914                           ;	PORTB A/D Enable bit
  2915                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2916                           ;	Low-Power Timer 1 Oscillator Enable bit
  2917                           ;	LPT1OSC = 0x0, unprogrammed default
  2918                           ;	MCLR Pin Enable bit
  2919                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2920   300005                     	org	3145733
  2921   300005  81                 	db	129
  2922                           
  2923                           ;Config register CONFIG4L @ 0x300006
  2924                           ;	Stack Full/Underflow Reset Enable bit
  2925                           ;	STVREN = 0x1, unprogrammed default
  2926                           ;	Single-Supply ICSP Enable bit
  2927                           ;	LVP = OFF, Single-Supply ICSP disabled
  2928                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2929                           ;	ICPRT = 0x0, unprogrammed default
  2930                           ;	Extended Instruction Set Enable bit
  2931                           ;	XINST = 0x0, unprogrammed default
  2932                           ;	Background Debugger Enable bit
  2933                           ;	DEBUG = 0x1, unprogrammed default
  2934   300006                     	org	3145734
  2935   300006  81                 	db	129
  2936                           
  2937                           ; Padding undefined space
  2938   300007                     	org	3145735
  2939   300007  FF                 	db	255
  2940                           
  2941                           ;Config register CONFIG5L @ 0x300008
  2942                           ;	unspecified, using default values
  2943                           ;	Code Protection bit
  2944                           ;	CP0 = 0x1, unprogrammed default
  2945                           ;	Code Protection bit
  2946                           ;	CP1 = 0x1, unprogrammed default
  2947                           ;	Code Protection bit
  2948                           ;	CP2 = 0x1, unprogrammed default
  2949                           ;	Code Protection bit
  2950                           ;	CP3 = 0x1, unprogrammed default
  2951   300008                     	org	3145736
  2952   300008  0F                 	db	15
  2953                           
  2954                           ;Config register CONFIG5H @ 0x300009
  2955                           ;	unspecified, using default values
  2956                           ;	Boot Block Code Protection bit
  2957                           ;	CPB = 0x1, unprogrammed default
  2958                           ;	Data EEPROM Code Protection bit
  2959                           ;	CPD = 0x1, unprogrammed default
  2960   300009                     	org	3145737
  2961   300009  C0                 	db	192
  2962                           
  2963                           ;Config register CONFIG6L @ 0x30000A
  2964                           ;	unspecified, using default values
  2965                           ;	Write Protection bit
  2966                           ;	WRT0 = 0x1, unprogrammed default
  2967                           ;	Write Protection bit
  2968                           ;	WRT1 = 0x1, unprogrammed default
  2969                           ;	Write Protection bit
  2970                           ;	WRT2 = 0x1, unprogrammed default
  2971                           ;	Write Protection bit
  2972                           ;	WRT3 = 0x1, unprogrammed default
  2973   30000A                     	org	3145738
  2974   30000A  0F                 	db	15
  2975                           
  2976                           ;Config register CONFIG6H @ 0x30000B
  2977                           ;	unspecified, using default values
  2978                           ;	Configuration Register Write Protection bit
  2979                           ;	WRTC = 0x1, unprogrammed default
  2980                           ;	Boot Block Write Protection bit
  2981                           ;	WRTB = 0x1, unprogrammed default
  2982                           ;	Data EEPROM Write Protection bit
  2983                           ;	WRTD = 0x1, unprogrammed default
  2984   30000B                     	org	3145739
  2985   30000B  E0                 	db	224
  2986                           
  2987                           ;Config register CONFIG7L @ 0x30000C
  2988                           ;	unspecified, using default values
  2989                           ;	Table Read Protection bit
  2990                           ;	EBTR0 = 0x1, unprogrammed default
  2991                           ;	Table Read Protection bit
  2992                           ;	EBTR1 = 0x1, unprogrammed default
  2993                           ;	Table Read Protection bit
  2994                           ;	EBTR2 = 0x1, unprogrammed default
  2995                           ;	Table Read Protection bit
  2996                           ;	EBTR3 = 0x1, unprogrammed default
  2997   30000C                     	org	3145740
  2998   30000C  0F                 	db	15
  2999                           
  3000                           ;Config register CONFIG7H @ 0x30000D
  3001                           ;	unspecified, using default values
  3002                           ;	Boot Block Table Read Protection bit
  3003                           ;	EBTRB = 0x1, unprogrammed default
  3004   30000D                     	org	3145741
  3005   30000D  40                 	db	64
  3006                           tosu	equ	0xFFF
  3007                           tosh	equ	0xFFE
  3008                           tosl	equ	0xFFD
  3009                           stkptr	equ	0xFFC
  3010                           pclatu	equ	0xFFB
  3011                           pclath	equ	0xFFA
  3012                           pcl	equ	0xFF9
  3013                           tblptru	equ	0xFF8
  3014                           tblptrh	equ	0xFF7
  3015                           tblptrl	equ	0xFF6
  3016                           tablat	equ	0xFF5
  3017                           prodh	equ	0xFF4
  3018                           prodl	equ	0xFF3
  3019                           indf0	equ	0xFEF
  3020                           postinc0	equ	0xFEE
  3021                           postdec0	equ	0xFED
  3022                           preinc0	equ	0xFEC
  3023                           plusw0	equ	0xFEB
  3024                           fsr0h	equ	0xFEA
  3025                           fsr0l	equ	0xFE9
  3026                           wreg	equ	0xFE8
  3027                           indf1	equ	0xFE7
  3028                           postinc1	equ	0xFE6
  3029                           postdec1	equ	0xFE5
  3030                           preinc1	equ	0xFE4
  3031                           plusw1	equ	0xFE3
  3032                           fsr1h	equ	0xFE2
  3033                           fsr1l	equ	0xFE1
  3034                           bsr	equ	0xFE0
  3035                           indf2	equ	0xFDF
  3036                           postinc2	equ	0xFDE
  3037                           postdec2	equ	0xFDD
  3038                           preinc2	equ	0xFDC
  3039                           plusw2	equ	0xFDB
  3040                           fsr2h	equ	0xFDA
  3041                           fsr2l	equ	0xFD9
  3042                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        2
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     36      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    MensajeLCD_Var@a	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), 
		 -> STR_4(CODE[11]), STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Var
    ___lbdiv->___lbmod
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISR in COMRAM

    _ISR->i2_MensajeLCD_Var
    i2_MensajeLCD_Var->i2_EscribeLCD_c
    i2_EscribeLCD_c->i2_EnviaDato
    i2_EnviaDato->i2_RetardoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4008
                                             34 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                    _TransmitirDatos
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                             19 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                      6     4      2    2272
                                             30 COMRAM     4     2      2
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                         _Transmitir
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     463
                                             19 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     466
                                             23 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       6     4      2     972
                                             24 COMRAM     6     4      2
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               4     2      2     166
                                             19 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                             23 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                             23 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                             21 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                             19 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                             19 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                  8     8      0     408
                                             11 COMRAM     8     8      0
                            _Recibir
                   i2_MensajeLCD_Var
 ---------------------------------------------------------------------------------
 (7) i2_MensajeLCD_Var                                     6     4      2     408
                                              5 COMRAM     6     4      2
                     i2_EscribeLCD_c
                           i2_strlen
 ---------------------------------------------------------------------------------
 (8) i2_strlen                                             4     2      2     116
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) i2_EscribeLCD_c                                       1     1      0     132
                                              4 COMRAM     1     1      0
                        i2_EnviaDato
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_EnviaDato                                          2     2      0      88
                                              2 COMRAM     2     2      0
                      i2_HabilitaLCD
                       i2_RetardoLCD
 ---------------------------------------------------------------------------------
 (9) i2_RetardoLCD                                         2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) i2_HabilitaLCD                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _Recibir                                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
     _Transmitir
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   ___lwdiv

 _ISR (ROOT)
   _Recibir
   i2_MensajeLCD_Var
     i2_EscribeLCD_c
       i2_EnviaDato
         i2_HabilitaLCD
         i2_RetardoLCD
       i2_HabilitaLCD
       i2_RetardoLCD
     i2_strlen

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM_1           400      0       0      39        0.0%
BIGRAM             3EE      0       0      40        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      17        0.0%
BANK7              100      0       0      18        0.0%
BITBANK6           100      0       0      15        0.0%
BANK6              100      0       0      16        0.0%
BITBANK5           100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK3            EF      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     24      29       1       43.6%
BITBIGSFRlhl        11      0       0      36        0.0%
BITBIGSFRll          F      0       0      37        0.0%
BITBIGSFR_1lh        9      0       0      29        0.0%
BITBIGSFR_5h         9      0       0      19        0.0%
BITBIGSFR_1hhhl      8      0       0      25        0.0%
BITBIGSFR_1hlh       8      0       0      28        0.0%
BITBIGSFR_2          6      0       0      23        0.0%
BITBIGSFRlhhhl       5      0       0      34        0.0%
BITBIGSFRhhh         5      0       0      31        0.0%
BITBIGSFRhl          5      0       0      32        0.0%
BITBIGSFR_1hhhh      3      0       0      24        0.0%
BITBIGSFR_4          3      0       0      21        0.0%
BITBIGSFR_3          3      0       0      22        0.0%
BITBIGSFR_1hhlh      2      0       0      26        0.0%
BITBIGSFR_1ll        2      0       0      30        0.0%
BITBIGSFRlhhhh       1      0       0      33        0.0%
BITBIGSFRlhhl        1      0       0      35        0.0%
BITBIGSFR_1hhll      1      0       0      27        0.0%
BITBIGSFR_5l         1      0       0      20        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      38        0.0%
DATA                 0      0      29      41        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Jun 07 11:57:01 2023

       Transmitir@BufferT 0014                EnviaDato@a 0017             _InicializaLCD 0B1A  
                     l171 09F0                       l168 09EA                       l709 0E4C  
                     l991 0D4C                       l993 0D6E                       l995 0D78  
                     _GIE 007F97                       l989 0D3C                       l999 0D82  
                     _RC0 007C10                       _RC1 007C11                       _RB5 007C0D  
                     _RE1 007C21                       u400 0BEC                       u420 0C1E  
                     u190 1008                       _PR2 000FCB                       u407 0BE2  
                     u360 0F10                       u520 0E26                       u450 0F82  
                     u427 0C14                       _ISR 0008                       u367 0F06  
                     u707 0D42                       u627 0870                       u717 0D52  
                     u637 08F0                       u727 0D62                       u647 0930  
                     u737 0D70                       u657 095A                       u747 0D7A  
                     u667 0976                       u757 1068                       u677 0992  
                     u687 09AE                       u697 09E2                       wreg 000FE8  
                    ?_ISR 0001          ??i2_EscribeLCD_c 0005                      l1011 0E8E  
                    l1209 0BA0                      l1095 1082                      l1511 0FEE  
                    l1503 0FD6                      l1169 0B2C                      l1441 0EEC  
                    l1179 0B4A                      l1443 0EF0                      l1189 0B68  
                    l1701 09D0                      l1465 0BC0                      l1473 0C26  
                    l1481 0F78                      l1493 0F94                      l1485 0F7E  
                    l1573 0E1A                      l1725 0A24                      l1575 0E22  
                    l1497 0F9C                      l1585 0E42                      STR_1 0801  
                    STR_2 0827                      STR_3 080F                      STR_4 0832  
                    STR_5 083D                      STR_6 081C                      STR_7 0847  
                    _LATB 000F8A                      _LATD 000F8C                      _RBIE 007F93  
                    _RBIF 007F90                      _RCIE 007CED                      _RCIF 007CF5  
                    _RBPU 007F8F                      _TMR1 000FCE                      _TMR2 000FCC  
                    _TRMT 007D61            ??_EscribeLCD_c 0018                      _main 084C  
                    fsr0h 000FEA                      indf0 000FEF                      fsr0l 000FE9  
                    btemp 002A                      start 000E              ___param_bank 000000  
                   ??_ISR 000C           __end_of_Recibir 1098            ?_InicializaLCD 0001  
                   ?_main 0001           __end_of___lbdiv 0FA0                     _CCPR2 000FBB  
           EscribeLCD_c@a 0018           __end_of___lbmod 0FF6                     _T1CON 000FCD  
                   _T2CON 000FCA                     _LATD2 007C62                     _LATD3 007C63  
         __end_of___lwdiv 0E56                     i2l227 0D1C                     _RCREG 000FAE  
                   _RCSTA 000FAB                     _SPBRG 000FAF                     _TRISA 000F92  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
                   _TRISE 000F96                     _TXREG 000FAD                     _TXSTA 000FAC  
                   _Tecla 0027                     tablat 000FF5               _HabilitaLCD 1064  
                   ttemp5 002B                     ttemp6 002E                     ttemp7 0032  
                   status 000FD8                     wtemp8 002B           ___lbdiv@divisor 0018  
         ___lbdiv@counter 001A          __end_ofi2_strlen 0F66          __end_of_BorraLCD 1064  
         __initialization 0FA0              __end_of_main 0A2A          i2_MensajeLCD_Var 0C40  
                  ??_main 0023      __end_of_ConfiguraLCD 100E             __activetblptr 000002  
              i2strlen@cp 0003                    _ADCON1 000FC1                    _CCP2IF 007D08  
          DireccionaLCD@a 0018                    _CCPR1L 000FBE                    i2l1431 0DD4  
                  i2l1433 0DDE                    i2l1427 0DA2                    i2l1429 0DB2  
                  i2l1437 0DE8                    i2l1527 0F2E                    i2l1529 0F32  
                  i2l1459 0ED4                    i2l1591 0C4A                    i2l1599 0CB0  
                  _OSCCON 000FD3                    _TMR1ON 007E68                    _TMR2ON 007E52  
   __end_of_DireccionaLCD 103A                    _UTRDIS 007B7B                _RetardoLCD 0D38  
               ??_Recibir 0003                    _Minimo 0028       TransmitirDatos@MinC 0021  
               ??___lbdiv 0019                 ??___lbmod 0015                 ??___lwdiv 0018  
         ??_InicializaLCD 0018                    isa$std 000001      __end_of_EscribeLCD_c 1024  
                  _strlen 0EE2              ?i2_EnviaDato 0001              __pdataCOMRAM 0028  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                _Transmitir 1080          ___lbdiv@dividend 0019  
         ___lbmod@divisor 0014     __end_ofi2_HabilitaLCD 1080                __accesstop 0060  
 __end_of__initialization 0FBE           ___lbmod@counter 0016             ___rparam_used 000001  
          __pcstackCOMRAM 0001         __end_of_EnviaDato 0E9C          ___lbdiv@quotient 001B  
               ?i2_strlen 0001                 ?_BorraLCD 0001            _MensajeLCD_Var 0BB6  
         MensajeLCD_Var@a 0019           MensajeLCD_Var@i 001D               ?_RetardoLCD 0001  
             RetardoLCD@a 0015                   _CCP1CON 000FBD                   _CCP2CON 000FBA  
                 _BAUDCON 000FB8                _en_entrada 0025                   ?_strlen 0014  
  __end_of_MensajeLCD_Var 0C40                   i2u54_40 0C76                   i2u54_47 0C6C  
                 i2u48_40 0F52                   i2u56_40 0CA8                   i2u80_47 0DD6  
                 i2u48_47 0F48                   i2u56_47 0C9E                   i2u81_47 0DE0  
                 i2u82_47 1076                   i2u76_47 0D10                   i2u77_47 0DA8  
                 i2u78_47 0DB8                   i2u79_47 0DC8                ??i2_strlen 0003  
              ??_BorraLCD 0018               ?_Transmitir 0001  __end_ofi2_MensajeLCD_Var 0CCA  
            ?_HabilitaLCD 0001              _ConfiguraLCD 0FF6                   _Recibir 108C  
                 __Hparam 0000                   __Lparam 0000                   ___lbdiv 0F66  
                 ___lbmod 0FCC                   ___lwdiv 0E04              __psmallconst 0800  
                 __pcinit 0FA0                   __ramtop 0800                   __ptext0 084C  
                 __ptext1 0E04                   __ptext2 0A2A                   __ptext3 0FCC  
                 __ptext4 0F66                   __ptext5 1080                   __ptext6 0BB6  
                 __ptext7 0EE2                   __ptext8 100E                   __ptext9 1024  
         ?_MensajeLCD_Var 0019            __pintcode_body 0CCA      end_of_initialization 0FBE  
           __Lmediumconst 0000                   int_func 0CCA              _EscribeLCD_c 100E  
       ??_TransmitirDatos 0021                   strlen@s 0014          ___lbmod@dividend 0015  
         i2EscribeLCD_c@a 0005               ___lbmod@rem 0017             ?i2_RetardoLCD 0001  
           __pidataCOMRAM 1098                 _Distancia 0026     __end_of_InicializaLCD 0BB6  
               _EnviaDato 0E56            __end_of_strlen 0F24       start_initialization 0FA0  
             __end_of_ISR 0D38                 i2strlen@s 0001            ??i2_RetardoLCD 0001  
            ??_RetardoLCD 0014                  ??_strlen 0016                ?_EnviaDato 0001  
             __pbssCOMRAM 0025        __end_of_RetardoLCD 0D9E              ??_Transmitir 0014  
       ?i2_MensajeLCD_Var 0006        ??i2_MensajeLCD_Var 0008             _DireccionaLCD 1024  
                ?_Recibir 0001            i2_EscribeLCD_c 103A          ___lwdiv@dividend 0014  
               __pintcode 0008                  ?___lbdiv 0018                  ?___lbmod 0014  
                ?___lwdiv 0014        __end_of_Transmitir 108C          ??_MensajeLCD_Var 001B  
             __smallconst 0800          ___lwdiv@quotient 0018           _TransmitirDatos 0A2A  
           i2_HabilitaLCD 1072            ?_DireccionaLCD 0001    __end_ofi2_EscribeLCD_c 1050  
           ??i2_EnviaDato 0003      __end_ofi2_RetardoLCD 0E04               ??_EnviaDato 0016  
                i2_strlen 0F24                  _BorraLCD 1050            ?i2_HabilitaLCD 0001  
         ?i2_EscribeLCD_c 0001                  __Hrparam 0000                  __Lrparam 0000  
   TransmitirDatos@Minimo 001F              i2EnviaDato@a 0004             ConfiguraLCD@a 0014  
 __end_of_TransmitirDatos 0B1A           ___lwdiv@divisor 0016           ___lwdiv@counter 001A  
                __ptext10 0B1A                  __ptext11 1050                  __ptext20 0E9C  
                __ptext12 0E56                  __ptext21 0D9E                  __ptext13 0D38  
                __ptext22 1072                  __ptext14 1064                  __ptext23 108C  
                __ptext15 0FF6                  __ptext17 0C40                  __ptext18 0F24  
                __ptext19 103A       __end_ofi2_EnviaDato 0EE2           ??_DireccionaLCD 0018  
                _interfaz 0029                  isa$xinst 000000                  int$flags 002A  
         ??i2_HabilitaLCD 0001                  intlevel2 0000             ??_HabilitaLCD 0014  
           ?_ConfiguraLCD 0001             i2RetardoLCD@a 0002               i2_EnviaDato 0E9C  
                strlen@cp 0016          ?_TransmitirDatos 001F            ??_ConfiguraLCD 0014  
           ?_EscribeLCD_c 0001         i2MensajeLCD_Var@a 0006         i2MensajeLCD_Var@i 000A  
            i2_RetardoLCD 0D9E       __end_of_HabilitaLCD 1072  
