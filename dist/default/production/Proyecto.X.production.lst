

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Mon Jun 05 22:12:43 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og9 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    36   000000                     
    37                           ; Version 2.40
    38                           ; Generated 04/07/2022 GMT
    39                           ; 
    40                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000000                     
    73                           	psect	idataCOMRAM
    74   000E28                     __pidataCOMRAM:
    75                           	callstack 0
    76                           
    77                           ;initializer for _Minimo_Teclado
    78   000E28  C8                 	db	200
    79                           
    80                           ;initializer for _interfaz
    81   000E29  08                 	db	8
    82   000000                     _RCREG	set	4014
    83   000000                     _TXREG	set	4013
    84   000000                     _SPBRG	set	4015
    85   000000                     _BAUDCON	set	4024
    86   000000                     _TRISC	set	3988
    87   000000                     _TRISD	set	3989
    88   000000                     _RBPU	set	32655
    89   000000                     _RB7	set	31759
    90   000000                     _RB6	set	31758
    91   000000                     _RB5	set	31757
    92   000000                     _RBIF	set	32656
    93   000000                     _RE2	set	31778
    94   000000                     _RCIF	set	31989
    95   000000                     _TRMT	set	32097
    96   000000                     _TMR1ON	set	32360
    97   000000                     _RC2	set	31762
    98   000000                     _TMR0ON	set	32431
    99   000000                     _GIE	set	32663
   100   000000                     _TMR0IE	set	32661
   101   000000                     _LATD3	set	31843
   102   000000                     _LATD2	set	31842
   103   000000                     _LATD	set	3980
   104   000000                     _UTRDIS	set	31611
   105   000000                     _TRISB	set	3987
   106   000000                     _TMR0IF	set	32658
   107   000000                     _RCSTA	set	4011
   108   000000                     _TXSTA	set	4012
   109   000000                     _OSCCON	set	4051
   110   000000                     _TRISE	set	3990
   111   000000                     _CCP1IF	set	31986
   112   000000                     _T0CON	set	4053
   113   000000                     _CCP1CON	set	4029
   114   000000                     _TMR2	set	4044
   115   000000                     _T1CON	set	4045
   116   000000                     _TMR0	set	4054
   117   000000                     _TMR1	set	4046
   118   000000                     _PORTB	set	3969
   119   000000                     _RC1	set	31761
   120   000000                     _CCPR1	set	4030
   121   000000                     _RE1	set	31777
   122   000000                     _LATB	set	3978
   123                           
   124                           	psect	smallconst
   125   000800                     __psmallconst:
   126                           	callstack 0
   127   000800  00                 	db	0
   128   000801                     STR_1:
   129   000801  42                 	db	66	;'B'
   130   000802  69                 	db	105	;'i'
   131   000803  65                 	db	101	;'e'
   132   000804  6E                 	db	110	;'n'
   133   000805  76                 	db	118	;'v'
   134   000806  65                 	db	101	;'e'
   135   000807  6E                 	db	110	;'n'
   136   000808  69                 	db	105	;'i'
   137   000809  64                 	db	100	;'d'
   138   00080A  6F                 	db	111	;'o'
   139   00080B  20                 	db	32
   140   00080C  61                 	db	97	;'a'
   141   00080D  6C                 	db	108	;'l'
   142   00080E  00                 	db	0
   143   00080F                     STR_3:
   144   00080F  64                 	db	100	;'d'
   145   000810  65                 	db	101	;'e'
   146   000811  74                 	db	116	;'t'
   147   000812  65                 	db	101	;'e'
   148   000813  63                 	db	99	;'c'
   149   000814  63                 	db	99	;'c'
   150   000815  69                 	db	105	;'i'
   151   000816  6F                 	db	111	;'o'
   152   000817  6E                 	db	110	;'n'
   153   000818  20                 	db	32
   154   000819  64                 	db	100	;'d'
   155   00081A  65                 	db	101	;'e'
   156   00081B  00                 	db	0
   157   00081C                     STR_6:
   158   00081C  44                 	db	68	;'D'
   159   00081D  69                 	db	105	;'i'
   160   00081E  73                 	db	115	;'s'
   161   00081F  74                 	db	116	;'t'
   162   000820  61                 	db	97	;'a'
   163   000821  6E                 	db	110	;'n'
   164   000822  63                 	db	99	;'c'
   165   000823  69                 	db	105	;'i'
   166   000824  61                 	db	97	;'a'
   167   000825  3A                 	db	58	;':'
   168   000826  00                 	db	0
   169   000827                     STR_2:
   170   000827  73                 	db	115	;'s'
   171   000828  69                 	db	105	;'i'
   172   000829  73                 	db	115	;'s'
   173   00082A  74                 	db	116	;'t'
   174   00082B  65                 	db	101	;'e'
   175   00082C  6D                 	db	109	;'m'
   176   00082D  61                 	db	97	;'a'
   177   00082E  20                 	db	32
   178   00082F  64                 	db	100	;'d'
   179   000830  65                 	db	101	;'e'
   180   000831  00                 	db	0
   181   000832                     STR_4:
   182   000832  64                 	db	100	;'d'
   183   000833  69                 	db	105	;'i'
   184   000834  73                 	db	115	;'s'
   185   000835  74                 	db	116	;'t'
   186   000836  61                 	db	97	;'a'
   187   000837  6E                 	db	110	;'n'
   188   000838  63                 	db	99	;'c'
   189   000839  69                 	db	105	;'i'
   190   00083A  61                 	db	97	;'a'
   191   00083B  73                 	db	115	;'s'
   192   00083C  00                 	db	0
   193   00083D                     STR_5:
   194   00083D  49                 	db	73	;'I'
   195   00083E  6E                 	db	110	;'n'
   196   00083F  69                 	db	105	;'i'
   197   000840  63                 	db	99	;'c'
   198   000841  69                 	db	105	;'i'
   199   000842  61                 	db	97	;'a'
   200   000843  6E                 	db	110	;'n'
   201   000844  64                 	db	100	;'d'
   202   000845  6F                 	db	111	;'o'
   203   000846  00                 	db	0
   204   000847                     STR_7:
   205   000847  63                 	db	99	;'c'
   206   000848  6D                 	db	109	;'m'
   207   000849  00                 	db	0
   208   00084A  00                 	db	0	; dummy byte at the end
   209   000000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213   000D30                     __pcinit:
   214                           	callstack 0
   215   000D30                     start_initialization:
   216                           	callstack 0
   217   000D30                     __initialization:
   218                           	callstack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (2 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222   000D30  0E28               	movlw	low __pidataCOMRAM
   223   000D32  6EF6               	movwf	tblptrl,c
   224   000D34  0E0E               	movlw	high __pidataCOMRAM
   225   000D36  6EF7               	movwf	tblptrh,c
   226   000D38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227   000D3A  6EF8               	movwf	tblptru,c
   228   000D3C  0009               	tblrd		*+	;fetch initializer
   229   000D3E  CFF5 F01A          	movff	tablat,__pdataCOMRAM
   230   000D42  0009               	tblrd		*+	;fetch initializer
   231   000D44  CFF5 F01B          	movff	tablat,__pdataCOMRAM+1
   232                           
   233                           ; Clear objects allocated to COMRAM (3 bytes)
   234   000D48  6A19               	clrf	(__pbssCOMRAM+2)& (0+255),c
   235   000D4A  6A18               	clrf	(__pbssCOMRAM+1)& (0+255),c
   236   000D4C  6A17               	clrf	__pbssCOMRAM& (0+255),c
   237   000D4E                     end_of_initialization:
   238                           	callstack 0
   239   000D4E                     __end_of__initialization:
   240                           	callstack 0
   241   000D4E  901C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   242   000D50  921C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   243   000D52  0E00               	movlw	low (__Lmediumconst shr (0+16))
   244   000D54  6EF8               	movwf	tblptru,c
   245   000D56  0100               	movlb	0
   246   000D58  EF26  F004         	goto	_main	;jump to C main() function
   247                           
   248                           	psect	bssCOMRAM
   249   000017                     __pbssCOMRAM:
   250                           	callstack 0
   251   000017                     _Minimo_Consola:
   252                           	callstack 0
   253   000017                     	ds	1
   254   000018                     _Distancia:
   255                           	callstack 0
   256   000018                     	ds	1
   257   000019                     _Tecla:
   258                           	callstack 0
   259   000019                     	ds	1
   260                           
   261                           	psect	dataCOMRAM
   262   00001A                     __pdataCOMRAM:
   263                           	callstack 0
   264   00001A                     _Minimo_Teclado:
   265                           	callstack 0
   266   00001A                     	ds	1
   267   00001B                     _interfaz:
   268                           	callstack 0
   269   00001B                     	ds	1
   270                           
   271                           	psect	cstackCOMRAM
   272   000001                     __pcstackCOMRAM:
   273                           	callstack 0
   274   000001                     ??_ISR:
   275   000001                     
   276                           ; 1 bytes @ 0x0
   277   000001                     	ds	2
   278   000003                     ??_ISRL:
   279                           
   280                           ; 1 bytes @ 0x2
   281   000003                     	ds	5
   282   000008                     ??_RetardoLCD:
   283   000008                     ?_strlen:
   284                           	callstack 0
   285   000008                     ?___lwdiv:
   286                           	callstack 0
   287   000008                     ConfiguraLCD@a:
   288                           	callstack 0
   289   000008                     Transmitir@BufferT:
   290                           	callstack 0
   291   000008                     ___lbmod@divisor:
   292                           	callstack 0
   293   000008                     strlen@s:
   294                           	callstack 0
   295   000008                     ___lwdiv@dividend:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x7
   299   000008                     	ds	1
   300   000009                     RetardoLCD@a:
   301                           	callstack 0
   302   000009                     ___lbmod@dividend:
   303                           	callstack 0
   304                           
   305                           ; 1 bytes @ 0x8
   306   000009                     	ds	1
   307   00000A                     ??_EnviaDato:
   308   00000A                     ___lbmod@counter:
   309                           	callstack 0
   310   00000A                     strlen@cp:
   311                           	callstack 0
   312   00000A                     ___lwdiv@divisor:
   313                           	callstack 0
   314                           
   315                           ; 2 bytes @ 0x9
   316   00000A                     	ds	1
   317   00000B                     EnviaDato@a:
   318                           	callstack 0
   319   00000B                     ___lbmod@rem:
   320                           	callstack 0
   321                           
   322                           ; 1 bytes @ 0xA
   323   00000B                     	ds	1
   324   00000C                     EscribeLCD_c@a:
   325                           	callstack 0
   326   00000C                     DireccionaLCD@a:
   327                           	callstack 0
   328   00000C                     ___lbdiv@divisor:
   329                           	callstack 0
   330   00000C                     ___lwdiv@quotient:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0xB
   334   00000C                     	ds	1
   335   00000D                     MensajeLCD_Var@a:
   336                           	callstack 0
   337   00000D                     ___lbdiv@dividend:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0xC
   341   00000D                     	ds	1
   342   00000E                     ??_MensajeLCD_Var:
   343   00000E                     ___lbdiv@counter:
   344                           	callstack 0
   345   00000E                     ___lwdiv@counter:
   346                           	callstack 0
   347                           
   348                           ; 1 bytes @ 0xD
   349   00000E                     	ds	1
   350   00000F                     ___lbdiv@quotient:
   351                           	callstack 0
   352   00000F                     MensajeLCD_Var@i:
   353                           	callstack 0
   354                           
   355                           ; 2 bytes @ 0xE
   356   00000F                     	ds	2
   357   000011                     TransmitirDatos@Minimo:
   358                           	callstack 0
   359                           
   360                           ; 2 bytes @ 0x10
   361   000011                     	ds	2
   362   000013                     TransmitirDatos@MinC:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x12
   366   000013                     	ds	2
   367   000015                     ??_main:
   368                           
   369                           ; 1 bytes @ 0x14
   370   000015                     	ds	2
   371                           
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 28 in file "Proyecto.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0
   394 ;;      Totals:         2       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        2 bytes
   396 ;; Hardware stack levels required when called: 8
   397 ;; This function calls:
   398 ;;		_BorraLCD
   399 ;;		_ConfiguraLCD
   400 ;;		_DireccionaLCD
   401 ;;		_EscribeLCD_c
   402 ;;		_InicializaLCD
   403 ;;		_MensajeLCD_Var
   404 ;;		_TransmitirDatos
   405 ;;		___lwdiv
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text0
   412   00084C                     __ptext0:
   413                           	callstack 0
   414   00084C                     _main:
   415                           	callstack 23
   416                           
   417                           ;Proyecto.c: 29: TRISB=0b11110000;
   418                           
   419                           ;incstack = 0
   420   00084C  0EF0               	movlw	240
   421   00084E  6E93               	movwf	147,c	;volatile
   422                           
   423                           ;Proyecto.c: 30: RBPU=0;
   424   000850  9EF1               	bcf	4081,7,c	;volatile
   425                           
   426                           ;Proyecto.c: 31: TRISD=0;
   427   000852  0E00               	movlw	0
   428   000854  6E95               	movwf	149,c	;volatile
   429                           
   430                           ;Proyecto.c: 32: TRISC = 0b11000100;
   431   000856  0EC4               	movlw	196
   432   000858  6E94               	movwf	148,c	;volatile
   433                           
   434                           ;Proyecto.c: 33: TRISE=0b00001010;
   435   00085A  0E0A               	movlw	10
   436   00085C  6E96               	movwf	150,c	;volatile
   437                           
   438                           ;Proyecto.c: 34: OSCCON=0b01110000;
   439   00085E  0E70               	movlw	112
   440   000860  6ED3               	movwf	211,c	;volatile
   441                           
   442                           ;Proyecto.c: 35: _delay((unsigned long)((1)*(8000000/4000.0)));
   443   000862  0E03               	movlw	3
   444   000864  6E15               	movwf	??_main^0,c
   445   000866  0E98               	movlw	152
   446   000868                     u557:
   447   000868  2EE8               	decfsz	wreg,f,c
   448   00086A  D7FE               	bra	u557
   449   00086C  2E15               	decfsz	??_main^0,f,c
   450   00086E  D7FC               	bra	u557
   451                           
   452                           ;Proyecto.c: 36: TXSTA = 0b00100000;
   453   000870  0E20               	movlw	32
   454   000872  6EAC               	movwf	172,c	;volatile
   455                           
   456                           ;Proyecto.c: 37: RCSTA = 0b10010000;
   457   000874  0E90               	movlw	144
   458   000876  6EAB               	movwf	171,c	;volatile
   459                           
   460                           ;Proyecto.c: 38: BAUDCON=0b00000000;
   461   000878  0E00               	movlw	0
   462   00087A  6EB8               	movwf	184,c	;volatile
   463                           
   464                           ;Proyecto.c: 39: SPBRG=12;
   465   00087C  0E0C               	movlw	12
   466   00087E  6EAF               	movwf	175,c	;volatile
   467                           
   468                           ;Proyecto.c: 41: T0CON=0b00001011;
   469   000880  0E0B               	movlw	11
   470   000882  6ED5               	movwf	213,c	;volatile
   471                           
   472                           ;Proyecto.c: 42: TMR0IF=0;
   473   000884  94F2               	bcf	4082,2,c	;volatile
   474                           
   475                           ;Proyecto.c: 43: TMR0=3036;
   476   000886  0E0B               	movlw	11
   477   000888  6ED7               	movwf	215,c	;volatile
   478   00088A  0EDC               	movlw	220
   479   00088C  6ED6               	movwf	214,c	;volatile
   480                           
   481                           ;Proyecto.c: 44: TMR0IE=1;
   482   00088E  8AF2               	bsf	4082,5,c	;volatile
   483                           
   484                           ;Proyecto.c: 45: GIE=1;
   485   000890  8EF2               	bsf	4082,7,c	;volatile
   486                           
   487                           ;Proyecto.c: 46: TMR0ON=1;
   488   000892  8ED5               	bsf	4053,7,c	;volatile
   489                           
   490                           ;Proyecto.c: 48: T1CON=0b10010000;
   491   000894  0E90               	movlw	144
   492   000896  6ECD               	movwf	205,c	;volatile
   493                           
   494                           ;Proyecto.c: 49: UTRDIS = 1;
   495   000898  866F               	bsf	3951,3,c	;volatile
   496                           
   497                           ;Proyecto.c: 51: TMR2 = 0;
   498   00089A  0E00               	movlw	0
   499   00089C  6ECC               	movwf	204,c	;volatile
   500                           
   501                           ;Proyecto.c: 54: ConfiguraLCD(4);
   502   00089E  0E04               	movlw	4
   503   0008A0  ECD7  F006         	call	_ConfiguraLCD
   504                           
   505                           ;Proyecto.c: 55: InicializaLCD();
   506   0008A4  EC65  F005         	call	_InicializaLCD	;wreg free
   507                           
   508                           ;Proyecto.c: 56: DireccionaLCD(0x80);
   509   0008A8  0E80               	movlw	128
   510   0008AA  ECEE  F006         	call	_DireccionaLCD
   511                           
   512                           ;Proyecto.c: 57: MensajeLCD_Var("Bienvenido al");
   513   0008AE  0E01               	movlw	low STR_1
   514   0008B0  6E0D               	movwf	MensajeLCD_Var@a^0,c
   515   0008B2  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   516                           
   517                           ;Proyecto.c: 58: DireccionaLCD(0xC0);
   518   0008B6  0EC0               	movlw	192
   519   0008B8  ECEE  F006         	call	_DireccionaLCD
   520                           
   521                           ;Proyecto.c: 59: MensajeLCD_Var("sistema de");
   522   0008BC  0E27               	movlw	low STR_2
   523   0008BE  6E0D               	movwf	MensajeLCD_Var@a^0,c
   524   0008C0  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   525                           
   526                           ;Proyecto.c: 60: _delay((unsigned long)((1500)*(8000000/4000.0)));
   527   0008C4  0E10               	movlw	16
   528   0008C6  6E16               	movwf	(??_main+1)^0,c
   529   0008C8  0E39               	movlw	57
   530   0008CA  6E15               	movwf	??_main^0,c
   531   0008CC  0E0E               	movlw	14
   532   0008CE                     u567:
   533   0008CE  2EE8               	decfsz	wreg,f,c
   534   0008D0  D7FE               	bra	u567
   535   0008D2  2E15               	decfsz	??_main^0,f,c
   536   0008D4  D7FC               	bra	u567
   537   0008D6  2E16               	decfsz	(??_main+1)^0,f,c
   538   0008D8  D7FA               	bra	u567
   539                           
   540                           ;Proyecto.c: 61: BorraLCD();
   541   0008DA  ECF9  F006         	call	_BorraLCD	;wreg free
   542                           
   543                           ;Proyecto.c: 62: MensajeLCD_Var("deteccion de");
   544   0008DE  0E0F               	movlw	low STR_3
   545   0008E0  6E0D               	movwf	MensajeLCD_Var@a^0,c
   546   0008E2  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   547                           
   548                           ;Proyecto.c: 63: DireccionaLCD(0xC0);
   549   0008E6  0EC0               	movlw	192
   550   0008E8  ECEE  F006         	call	_DireccionaLCD
   551                           
   552                           ;Proyecto.c: 64: MensajeLCD_Var("distancias");
   553   0008EC  0E32               	movlw	low STR_4
   554   0008EE  6E0D               	movwf	MensajeLCD_Var@a^0,c
   555   0008F0  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   556                           
   557                           ;Proyecto.c: 65: _delay((unsigned long)((1500)*(8000000/4000.0)));
   558   0008F4  0E10               	movlw	16
   559   0008F6  6E16               	movwf	(??_main+1)^0,c
   560   0008F8  0E39               	movlw	57
   561   0008FA  6E15               	movwf	??_main^0,c
   562   0008FC  0E0E               	movlw	14
   563   0008FE                     u577:
   564   0008FE  2EE8               	decfsz	wreg,f,c
   565   000900  D7FE               	bra	u577
   566   000902  2E15               	decfsz	??_main^0,f,c
   567   000904  D7FC               	bra	u577
   568   000906  2E16               	decfsz	(??_main+1)^0,f,c
   569   000908  D7FA               	bra	u577
   570                           
   571                           ;Proyecto.c: 66: BorraLCD();
   572   00090A  ECF9  F006         	call	_BorraLCD	;wreg free
   573                           
   574                           ;Proyecto.c: 67: MensajeLCD_Var("Iniciando");
   575   00090E  0E3D               	movlw	low STR_5
   576   000910  6E0D               	movwf	MensajeLCD_Var@a^0,c
   577   000912  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   578                           
   579                           ;Proyecto.c: 68: _delay((unsigned long)((500)*(8000000/4000.0)));
   580   000916  0E06               	movlw	6
   581   000918  6E16               	movwf	(??_main+1)^0,c
   582   00091A  0E13               	movlw	19
   583   00091C  6E15               	movwf	??_main^0,c
   584   00091E  0EAE               	movlw	174
   585   000920                     u587:
   586   000920  2EE8               	decfsz	wreg,f,c
   587   000922  D7FE               	bra	u587
   588   000924  2E15               	decfsz	??_main^0,f,c
   589   000926  D7FC               	bra	u587
   590   000928  2E16               	decfsz	(??_main+1)^0,f,c
   591   00092A  D7FA               	bra	u587
   592                           
   593                           ;Proyecto.c: 69: EscribeLCD_c('.');
   594   00092C  0E2E               	movlw	46
   595   00092E  ECE3  F006         	call	_EscribeLCD_c
   596                           
   597                           ;Proyecto.c: 70: _delay((unsigned long)((500)*(8000000/4000.0)));
   598   000932  0E06               	movlw	6
   599   000934  6E16               	movwf	(??_main+1)^0,c
   600   000936  0E13               	movlw	19
   601   000938  6E15               	movwf	??_main^0,c
   602   00093A  0EAE               	movlw	174
   603   00093C                     u597:
   604   00093C  2EE8               	decfsz	wreg,f,c
   605   00093E  D7FE               	bra	u597
   606   000940  2E15               	decfsz	??_main^0,f,c
   607   000942  D7FC               	bra	u597
   608   000944  2E16               	decfsz	(??_main+1)^0,f,c
   609   000946  D7FA               	bra	u597
   610                           
   611                           ;Proyecto.c: 71: EscribeLCD_c('.');
   612   000948  0E2E               	movlw	46
   613   00094A  ECE3  F006         	call	_EscribeLCD_c
   614                           
   615                           ;Proyecto.c: 72: _delay((unsigned long)((500)*(8000000/4000.0)));
   616   00094E  0E06               	movlw	6
   617   000950  6E16               	movwf	(??_main+1)^0,c
   618   000952  0E13               	movlw	19
   619   000954  6E15               	movwf	??_main^0,c
   620   000956  0EAE               	movlw	174
   621   000958                     u607:
   622   000958  2EE8               	decfsz	wreg,f,c
   623   00095A  D7FE               	bra	u607
   624   00095C  2E15               	decfsz	??_main^0,f,c
   625   00095E  D7FC               	bra	u607
   626   000960  2E16               	decfsz	(??_main+1)^0,f,c
   627   000962  D7FA               	bra	u607
   628                           
   629                           ;Proyecto.c: 73: EscribeLCD_c('.');
   630   000964  0E2E               	movlw	46
   631   000966  ECE3  F006         	call	_EscribeLCD_c
   632                           
   633                           ;Proyecto.c: 74: _delay((unsigned long)((500)*(8000000/4000.0)));
   634   00096A  0E06               	movlw	6
   635   00096C  6E16               	movwf	(??_main+1)^0,c
   636   00096E  0E13               	movlw	19
   637   000970  6E15               	movwf	??_main^0,c
   638   000972  0EAE               	movlw	174
   639   000974                     u617:
   640   000974  2EE8               	decfsz	wreg,f,c
   641   000976  D7FE               	bra	u617
   642   000978  2E15               	decfsz	??_main^0,f,c
   643   00097A  D7FC               	bra	u617
   644   00097C  2E16               	decfsz	(??_main+1)^0,f,c
   645   00097E  D7FA               	bra	u617
   646                           
   647                           ;Proyecto.c: 75: BorraLCD();
   648   000980  ECF9  F006         	call	_BorraLCD	;wreg free
   649                           
   650                           ;Proyecto.c: 76: MensajeLCD_Var("Distancia:");
   651   000984  0E1C               	movlw	low STR_6
   652   000986  6E0D               	movwf	MensajeLCD_Var@a^0,c
   653   000988  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   654   00098C                     l1554:
   655                           
   656                           ;Proyecto.c: 78: CCP1CON=0b00000100;
   657   00098C  0E04               	movlw	4
   658   00098E  6EBD               	movwf	189,c	;volatile
   659                           
   660                           ;Proyecto.c: 79: TMR1=0;
   661   000990  0E00               	movlw	0
   662   000992  6ECF               	movwf	207,c	;volatile
   663   000994  0E00               	movlw	0
   664   000996  6ECE               	movwf	206,c	;volatile
   665                           
   666                           ;Proyecto.c: 80: CCP1IF=0;
   667   000998  949E               	bcf	3998,2,c	;volatile
   668                           
   669                           ;Proyecto.c: 81: RC1=1;
   670   00099A  8282               	bsf	3970,1,c	;volatile
   671                           
   672                           ;Proyecto.c: 82: _delay((unsigned long)((10)*(8000000/4000000.0)));
   673   00099C  0E06               	movlw	6
   674   00099E                     u627:
   675   00099E  2EE8               	decfsz	wreg,f,c
   676   0009A0  D7FE               	bra	u627
   677   0009A2  D000               	nop2	
   678                           
   679                           ;Proyecto.c: 83: RC1=0;
   680   0009A4  9282               	bcf	3970,1,c	;volatile
   681   0009A6                     l164:
   682   0009A6  A482               	btfss	3970,2,c	;volatile
   683   0009A8  D7FE               	goto	l164
   684                           
   685                           ;Proyecto.c: 91: TMR1ON=1;
   686   0009AA  80CD               	bsf	4045,0,c	;volatile
   687   0009AC                     l167:
   688   0009AC  A49E               	btfss	3998,2,c	;volatile
   689   0009AE  D7FE               	goto	l167
   690                           
   691                           ;Proyecto.c: 93: TMR1ON=0;
   692   0009B0  90CD               	bcf	4045,0,c	;volatile
   693                           
   694                           ;Proyecto.c: 94: Distancia=CCPR1/58;
   695   0009B2  CFBE F008          	movff	4030,___lwdiv@dividend	;volatile
   696   0009B6  CFBF F009          	movff	4031,___lwdiv@dividend+1	;volatile
   697   0009BA  0E00               	movlw	0
   698   0009BC  6E0B               	movwf	(___lwdiv@divisor+1)^0,c
   699   0009BE  0E3A               	movlw	58
   700   0009C0  6E0A               	movwf	___lwdiv@divisor^0,c
   701   0009C2  ECE6  F005         	call	___lwdiv	;wreg free
   702   0009C6  5008               	movf	?___lwdiv^0,w,c
   703   0009C8  6E18               	movwf	_Distancia^0,c
   704                           
   705                           ;Proyecto.c: 96: if(!RE1) TransmitirDatos(Minimo_Teclado);
   706   0009CA  B284               	btfsc	3972,1,c	;volatile
   707   0009CC  D007               	goto	l1572
   708   0009CE  0E00               	movlw	0
   709   0009D0  6E12               	movwf	(TransmitirDatos@Minimo+1)^0,c
   710   0009D2  0EC8               	movlw	200
   711   0009D4  6E11               	movwf	TransmitirDatos@Minimo^0,c
   712   0009D6  ECF4  F004         	call	_TransmitirDatos	;wreg free
   713   0009DA  D7D8               	goto	l1554
   714   0009DC                     l1572:
   715                           
   716                           ;Proyecto.c: 97: else TransmitirDatos(Minimo_Consola);
   717   0009DC  C017  F011         	movff	_Minimo_Consola,TransmitirDatos@Minimo
   718   0009E0  6A12               	clrf	(TransmitirDatos@Minimo+1)^0,c
   719   0009E2  ECF4  F004         	call	_TransmitirDatos	;wreg free
   720   0009E6  D7D2               	goto	l1554
   721   0009E8                     __end_of_main:
   722                           	callstack 0
   723                           
   724 ;; *************** function ___lwdiv *****************
   725 ;; Defined at:
   726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  dividend        2    7[COMRAM] unsigned int 
   729 ;;  divisor         2    9[COMRAM] unsigned int 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;  quotient        2   11[COMRAM] unsigned int 
   732 ;;  counter         1   13[COMRAM] unsigned char 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  2    7[COMRAM] unsigned int 
   735 ;; Registers used:
   736 ;;		wreg, status,2, status,0
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   742 ;;      Params:         4       0       0       0       0       0       0       0       0
   743 ;;      Locals:         3       0       0       0       0       0       0       0       0
   744 ;;      Temps:          0       0       0       0       0       0       0       0       0
   745 ;;      Totals:         7       0       0       0       0       0       0       0       0
   746 ;;Total ram usage:        7 bytes
   747 ;; Hardware stack levels used: 1
   748 ;; Hardware stack levels required when called: 3
   749 ;; This function calls:
   750 ;;		Nothing
   751 ;; This function is called by:
   752 ;;		_main
   753 ;; This function uses a non-reentrant model
   754 ;;
   755                           
   756                           	psect	text1
   757   000BCC                     __ptext1:
   758                           	callstack 0
   759   000BCC                     ___lwdiv:
   760                           	callstack 27
   761                           
   762                           ;incstack = 0
   763   000BCC  0E00               	movlw	0
   764   000BCE  6E0D               	movwf	(___lwdiv@quotient+1)^0,c
   765   000BD0  0E00               	movlw	0
   766   000BD2  6E0C               	movwf	___lwdiv@quotient^0,c
   767   000BD4  500A               	movf	___lwdiv@divisor^0,w,c
   768   000BD6  100B               	iorwf	(___lwdiv@divisor+1)^0,w,c
   769   000BD8  B4D8               	btfsc	status,2,c
   770   000BDA  D01C               	goto	l708
   771   000BDC  0E01               	movlw	1
   772   000BDE  6E0E               	movwf	___lwdiv@counter^0,c
   773   000BE0  D004               	goto	l1462
   774   000BE2                     l1460:
   775   000BE2  90D8               	bcf	status,0,c
   776   000BE4  360A               	rlcf	___lwdiv@divisor^0,f,c
   777   000BE6  360B               	rlcf	(___lwdiv@divisor+1)^0,f,c
   778   000BE8  2A0E               	incf	___lwdiv@counter^0,f,c
   779   000BEA                     l1462:
   780   000BEA  AE0B               	btfss	(___lwdiv@divisor+1)^0,7,c
   781   000BEC  D7FA               	goto	l1460
   782   000BEE                     u500:
   783   000BEE  90D8               	bcf	status,0,c
   784   000BF0  360C               	rlcf	___lwdiv@quotient^0,f,c
   785   000BF2  360D               	rlcf	(___lwdiv@quotient+1)^0,f,c
   786   000BF4  500A               	movf	___lwdiv@divisor^0,w,c
   787   000BF6  5C08               	subwf	___lwdiv@dividend^0,w,c
   788   000BF8  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   789   000BFA  5809               	subwfb	(___lwdiv@dividend+1)^0,w,c
   790   000BFC  A0D8               	btfss	status,0,c
   791   000BFE  D005               	goto	l1472
   792   000C00  500A               	movf	___lwdiv@divisor^0,w,c
   793   000C02  5E08               	subwf	___lwdiv@dividend^0,f,c
   794   000C04  500B               	movf	(___lwdiv@divisor+1)^0,w,c
   795   000C06  5A09               	subwfb	(___lwdiv@dividend+1)^0,f,c
   796   000C08  800C               	bsf	___lwdiv@quotient^0,0,c
   797   000C0A                     l1472:
   798   000C0A  90D8               	bcf	status,0,c
   799   000C0C  320B               	rrcf	(___lwdiv@divisor+1)^0,f,c
   800   000C0E  320A               	rrcf	___lwdiv@divisor^0,f,c
   801   000C10  2E0E               	decfsz	___lwdiv@counter^0,f,c
   802   000C12  D7ED               	goto	u500
   803   000C14                     l708:
   804   000C14  C00C  F008         	movff	___lwdiv@quotient,?___lwdiv
   805   000C18  C00D  F009         	movff	___lwdiv@quotient+1,?___lwdiv+1
   806   000C1C  0012               	return		;funcret
   807   000C1E                     __end_of___lwdiv:
   808                           	callstack 0
   809                           
   810 ;; *************** function _TransmitirDatos *****************
   811 ;; Defined at:
   812 ;;		line 114 in file "Proyecto.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  Minimo          2   16[COMRAM] unsigned int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  MinC            2   18[COMRAM] unsigned int 
   817 ;;  DistC           2    0        unsigned int 
   818 ;; Return value:  Size  Location     Type
   819 ;;                  1    wreg      void 
   820 ;; Registers used:
   821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   822 ;; Tracked objects:
   823 ;;		On entry : 0/0
   824 ;;		On exit  : 0/0
   825 ;;		Unchanged: 0/0
   826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   827 ;;      Params:         2       0       0       0       0       0       0       0       0
   828 ;;      Locals:         2       0       0       0       0       0       0       0       0
   829 ;;      Temps:          0       0       0       0       0       0       0       0       0
   830 ;;      Totals:         4       0       0       0       0       0       0       0       0
   831 ;;Total ram usage:        4 bytes
   832 ;; Hardware stack levels used: 1
   833 ;; Hardware stack levels required when called: 7
   834 ;; This function calls:
   835 ;;		_DireccionaLCD
   836 ;;		_EscribeLCD_c
   837 ;;		_MensajeLCD_Var
   838 ;;		_Transmitir
   839 ;;		___lbdiv
   840 ;;		___lbmod
   841 ;; This function is called by:
   842 ;;		_main
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text2
   847   0009E8                     __ptext2:
   848                           	callstack 0
   849   0009E8                     _TransmitirDatos:
   850                           	callstack 23
   851                           
   852                           ;incstack = 0
   853   0009E8  C011  F013         	movff	TransmitirDatos@Minimo,TransmitirDatos@MinC
   854   0009EC  C012  F014         	movff	TransmitirDatos@Minimo+1,TransmitirDatos@MinC+1
   855                           
   856                           ;Proyecto.c: 116: Transmitir('D');
   857   0009F0  0E44               	movlw	68
   858   0009F2  EC0A  F007         	call	_Transmitir
   859                           
   860                           ;Proyecto.c: 117: Transmitir('i');
   861   0009F6  0E69               	movlw	105
   862   0009F8  EC0A  F007         	call	_Transmitir
   863                           
   864                           ;Proyecto.c: 118: Transmitir('s');
   865   0009FC  0E73               	movlw	115
   866   0009FE  EC0A  F007         	call	_Transmitir
   867                           
   868                           ;Proyecto.c: 119: Transmitir('t');
   869   000A02  0E74               	movlw	116
   870   000A04  EC0A  F007         	call	_Transmitir
   871                           
   872                           ;Proyecto.c: 120: Transmitir('a');
   873   000A08  0E61               	movlw	97
   874   000A0A  EC0A  F007         	call	_Transmitir
   875                           
   876                           ;Proyecto.c: 121: Transmitir('n');
   877   000A0E  0E6E               	movlw	110
   878   000A10  EC0A  F007         	call	_Transmitir
   879                           
   880                           ;Proyecto.c: 122: Transmitir('c');
   881   000A14  0E63               	movlw	99
   882   000A16  EC0A  F007         	call	_Transmitir
   883                           
   884                           ;Proyecto.c: 123: Transmitir('i');
   885   000A1A  0E69               	movlw	105
   886   000A1C  EC0A  F007         	call	_Transmitir
   887                           
   888                           ;Proyecto.c: 124: Transmitir('a');
   889   000A20  0E61               	movlw	97
   890   000A22  EC0A  F007         	call	_Transmitir
   891                           
   892                           ;Proyecto.c: 125: Transmitir(':');
   893   000A26  0E3A               	movlw	58
   894   000A28  EC0A  F007         	call	_Transmitir
   895                           
   896                           ;Proyecto.c: 126: Transmitir(' ');
   897   000A2C  0E20               	movlw	32
   898   000A2E  EC0A  F007         	call	_Transmitir
   899                           
   900                           ;Proyecto.c: 128: Transmitir(Distancia/100 + 48);
   901   000A32  0E64               	movlw	100
   902   000A34  6E0C               	movwf	___lbdiv@divisor^0,c
   903   000A36  5018               	movf	_Distancia^0,w,c
   904   000A38  EC7B  F006         	call	___lbdiv
   905   000A3C  0F30               	addlw	48
   906   000A3E  EC0A  F007         	call	_Transmitir
   907                           
   908                           ;Proyecto.c: 129: Transmitir((Distancia%100)/10 + 48);
   909   000A42  0E0A               	movlw	10
   910   000A44  6E0C               	movwf	___lbdiv@divisor^0,c
   911   000A46  0E64               	movlw	100
   912   000A48  6E08               	movwf	___lbmod@divisor^0,c
   913   000A4A  5018               	movf	_Distancia^0,w,c
   914   000A4C  ECAE  F006         	call	___lbmod
   915   000A50  EC7B  F006         	call	___lbdiv
   916   000A54  0F30               	addlw	48
   917   000A56  EC0A  F007         	call	_Transmitir
   918                           
   919                           ;Proyecto.c: 130: Transmitir(Distancia%10 + 48);
   920   000A5A  0E0A               	movlw	10
   921   000A5C  6E08               	movwf	___lbmod@divisor^0,c
   922   000A5E  5018               	movf	_Distancia^0,w,c
   923   000A60  ECAE  F006         	call	___lbmod
   924   000A64  0F30               	addlw	48
   925   000A66  EC0A  F007         	call	_Transmitir
   926                           
   927                           ;Proyecto.c: 131: Transmitir('c');
   928   000A6A  0E63               	movlw	99
   929   000A6C  EC0A  F007         	call	_Transmitir
   930                           
   931                           ;Proyecto.c: 132: Transmitir('m');
   932   000A70  0E6D               	movlw	109
   933   000A72  EC0A  F007         	call	_Transmitir
   934                           
   935                           ;Proyecto.c: 133: Transmitir(' ');
   936   000A76  0E20               	movlw	32
   937   000A78  EC0A  F007         	call	_Transmitir
   938                           
   939                           ;Proyecto.c: 135: DireccionaLCD(0xC7);
   940   000A7C  0EC7               	movlw	199
   941   000A7E  ECEE  F006         	call	_DireccionaLCD
   942                           
   943                           ;Proyecto.c: 136: EscribeLCD_c(Distancia/100 + 48);
   944   000A82  0E64               	movlw	100
   945   000A84  6E0C               	movwf	___lbdiv@divisor^0,c
   946   000A86  5018               	movf	_Distancia^0,w,c
   947   000A88  EC7B  F006         	call	___lbdiv
   948   000A8C  0F30               	addlw	48
   949   000A8E  ECE3  F006         	call	_EscribeLCD_c
   950                           
   951                           ;Proyecto.c: 137: EscribeLCD_c((Distancia%100)/10 + 48);
   952   000A92  0E0A               	movlw	10
   953   000A94  6E0C               	movwf	___lbdiv@divisor^0,c
   954   000A96  0E64               	movlw	100
   955   000A98  6E08               	movwf	___lbmod@divisor^0,c
   956   000A9A  5018               	movf	_Distancia^0,w,c
   957   000A9C  ECAE  F006         	call	___lbmod
   958   000AA0  EC7B  F006         	call	___lbdiv
   959   000AA4  0F30               	addlw	48
   960   000AA6  ECE3  F006         	call	_EscribeLCD_c
   961                           
   962                           ;Proyecto.c: 138: EscribeLCD_c(Distancia%10 + 48);
   963   000AAA  0E0A               	movlw	10
   964   000AAC  6E08               	movwf	___lbmod@divisor^0,c
   965   000AAE  5018               	movf	_Distancia^0,w,c
   966   000AB0  ECAE  F006         	call	___lbmod
   967   000AB4  0F30               	addlw	48
   968   000AB6  ECE3  F006         	call	_EscribeLCD_c
   969                           
   970                           ;Proyecto.c: 139: MensajeLCD_Var("cm");
   971   000ABA  0E47               	movlw	low STR_7
   972   000ABC  6E0D               	movwf	MensajeLCD_Var@a^0,c
   973   000ABE  EC0F  F006         	call	_MensajeLCD_Var	;wreg free
   974                           
   975                           ;Proyecto.c: 140: EscribeLCD_c(' ');
   976   000AC2  0E20               	movlw	32
   977   000AC4  ECE3  F006         	call	_EscribeLCD_c
   978   000AC8  0012               	return		;funcret
   979   000ACA                     __end_of_TransmitirDatos:
   980                           	callstack 0
   981                           
   982 ;; *************** function ___lbmod *****************
   983 ;; Defined at:
   984 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbmod.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  dividend        1    wreg     unsigned char 
   987 ;;  divisor         1    7[COMRAM] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  dividend        1    8[COMRAM] unsigned char 
   990 ;;  rem             1   10[COMRAM] unsigned char 
   991 ;;  counter         1    9[COMRAM] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      unsigned char 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1001 ;;      Params:         1       0       0       0       0       0       0       0       0
  1002 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1003 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1004 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1005 ;;Total ram usage:        4 bytes
  1006 ;; Hardware stack levels used: 1
  1007 ;; Hardware stack levels required when called: 3
  1008 ;; This function calls:
  1009 ;;		Nothing
  1010 ;; This function is called by:
  1011 ;;		_TransmitirDatos
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           	psect	text3
  1016   000D5C                     __ptext3:
  1017                           	callstack 0
  1018   000D5C                     ___lbmod:
  1019                           	callstack 26
  1020                           
  1021                           ;incstack = 0
  1022                           ;___lbmod@dividend stored from wreg
  1023   000D5C  6E09               	movwf	___lbmod@dividend^0,c
  1024   000D5E  0E08               	movlw	8
  1025   000D60  6E0A               	movwf	___lbmod@counter^0,c
  1026   000D62  0E00               	movlw	0
  1027   000D64  6E0B               	movwf	___lbmod@rem^0,c
  1028   000D66                     l1420:
  1029   000D66  90D8               	bcf	status,0,c
  1030   000D68  3409               	rlcf	___lbmod@dividend^0,w,c
  1031   000D6A  340B               	rlcf	___lbmod@rem^0,w,c
  1032   000D6C  6E0B               	movwf	___lbmod@rem^0,c
  1033   000D6E  90D8               	bcf	status,0,c
  1034   000D70  3609               	rlcf	___lbmod@dividend^0,f,c
  1035   000D72  5008               	movf	___lbmod@divisor^0,w,c
  1036   000D74  5C0B               	subwf	___lbmod@rem^0,w,c
  1037   000D76  A0D8               	btfss	status,0,c
  1038   000D78  D002               	goto	l1428
  1039   000D7A  5008               	movf	___lbmod@divisor^0,w,c
  1040   000D7C  5E0B               	subwf	___lbmod@rem^0,f,c
  1041   000D7E                     l1428:
  1042   000D7E  2E0A               	decfsz	___lbmod@counter^0,f,c
  1043   000D80  D7F2               	goto	l1420
  1044   000D82  500B               	movf	___lbmod@rem^0,w,c
  1045   000D84  0012               	return		;funcret
  1046   000D86                     __end_of___lbmod:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function ___lbdiv *****************
  1050 ;; Defined at:
  1051 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lbdiv.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;  dividend        1    wreg     unsigned char 
  1054 ;;  divisor         1   11[COMRAM] unsigned char 
  1055 ;; Auto vars:     Size  Location     Type
  1056 ;;  dividend        1   12[COMRAM] unsigned char 
  1057 ;;  quotient        1   14[COMRAM] unsigned char 
  1058 ;;  counter         1   13[COMRAM] unsigned char 
  1059 ;; Return value:  Size  Location     Type
  1060 ;;                  1    wreg      unsigned char 
  1061 ;; Registers used:
  1062 ;;		wreg, status,2, status,0
  1063 ;; Tracked objects:
  1064 ;;		On entry : 0/0
  1065 ;;		On exit  : 0/0
  1066 ;;		Unchanged: 0/0
  1067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1068 ;;      Params:         1       0       0       0       0       0       0       0       0
  1069 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1070 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1071 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1072 ;;Total ram usage:        4 bytes
  1073 ;; Hardware stack levels used: 1
  1074 ;; Hardware stack levels required when called: 3
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_TransmitirDatos
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           	psect	text4
  1083   000CF6                     __ptext4:
  1084                           	callstack 0
  1085   000CF6                     ___lbdiv:
  1086                           	callstack 26
  1087                           
  1088                           ;incstack = 0
  1089                           ;___lbdiv@dividend stored from wreg
  1090   000CF6  6E0D               	movwf	___lbdiv@dividend^0,c
  1091   000CF8  0E00               	movlw	0
  1092   000CFA  6E0F               	movwf	___lbdiv@quotient^0,c
  1093   000CFC  500C               	movf	___lbdiv@divisor^0,w,c
  1094   000CFE  B4D8               	btfsc	status,2,c
  1095   000D00  D015               	goto	l1414
  1096   000D02  0E01               	movlw	1
  1097   000D04  6E0E               	movwf	___lbdiv@counter^0,c
  1098   000D06  D003               	goto	l1402
  1099   000D08                     l1398:
  1100   000D08  90D8               	bcf	status,0,c
  1101   000D0A  360C               	rlcf	___lbdiv@divisor^0,f,c
  1102   000D0C  2A0E               	incf	___lbdiv@counter^0,f,c
  1103   000D0E                     l1402:
  1104   000D0E  AE0C               	btfss	___lbdiv@divisor^0,7,c
  1105   000D10  D7FB               	goto	l1398
  1106   000D12                     u460:
  1107   000D12  90D8               	bcf	status,0,c
  1108   000D14  360F               	rlcf	___lbdiv@quotient^0,f,c
  1109   000D16  500C               	movf	___lbdiv@divisor^0,w,c
  1110   000D18  5C0D               	subwf	___lbdiv@dividend^0,w,c
  1111   000D1A  A0D8               	btfss	status,0,c
  1112   000D1C  D003               	goto	l1410
  1113   000D1E  500C               	movf	___lbdiv@divisor^0,w,c
  1114   000D20  5E0D               	subwf	___lbdiv@dividend^0,f,c
  1115   000D22  800F               	bsf	___lbdiv@quotient^0,0,c
  1116   000D24                     l1410:
  1117   000D24  90D8               	bcf	status,0,c
  1118   000D26  320C               	rrcf	___lbdiv@divisor^0,f,c
  1119   000D28  2E0E               	decfsz	___lbdiv@counter^0,f,c
  1120   000D2A  D7F3               	goto	u460
  1121   000D2C                     l1414:
  1122   000D2C  500F               	movf	___lbdiv@quotient^0,w,c
  1123   000D2E  0012               	return		;funcret
  1124   000D30                     __end_of___lbdiv:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _Transmitir *****************
  1128 ;; Defined at:
  1129 ;;		line 104 in file "Proyecto.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;  BufferT         1    wreg     unsigned char 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  BufferT         1    7[COMRAM] unsigned char 
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		wreg
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         0       0       0       0       0       0       0       0       0
  1144 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1147 ;;Total ram usage:        1 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 3
  1150 ;; This function calls:
  1151 ;;		Nothing
  1152 ;; This function is called by:
  1153 ;;		_TransmitirDatos
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157                           	psect	text5
  1158   000E14                     __ptext5:
  1159                           	callstack 0
  1160   000E14                     _Transmitir:
  1161                           	callstack 26
  1162                           
  1163                           ;incstack = 0
  1164                           ;Transmitir@BufferT stored from wreg
  1165   000E14  6E08               	movwf	Transmitir@BufferT^0,c
  1166   000E16                     
  1167                           ;Proyecto.c: 105: while(TRMT==0);
  1168   000E16  A2AC               	btfss	4012,1,c	;volatile
  1169   000E18  D7FE               	goto	l1060
  1170                           
  1171                           ;Proyecto.c: 106: TXREG=BufferT;
  1172   000E1A  C008  FFAD         	movff	Transmitir@BufferT,4013	;volatile
  1173   000E1E  0012               	return		;funcret
  1174   000E20                     __end_of_Transmitir:
  1175                           	callstack 0
  1176                           
  1177 ;; *************** function _MensajeLCD_Var *****************
  1178 ;; Defined at:
  1179 ;;		line 215 in file "LibLCDXC8.h"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;  a               1   12[COMRAM] PTR unsigned char 
  1182 ;;		 -> STR_7(3), STR_6(11), STR_5(10), STR_4(11), 
  1183 ;;		 -> STR_3(13), STR_2(11), STR_1(14), 
  1184 ;; Auto vars:     Size  Location     Type
  1185 ;;  i               2   14[COMRAM] int 
  1186 ;; Return value:  Size  Location     Type
  1187 ;;                  1    wreg      void 
  1188 ;; Registers used:
  1189 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1190 ;; Tracked objects:
  1191 ;;		On entry : 0/0
  1192 ;;		On exit  : 0/0
  1193 ;;		Unchanged: 0/0
  1194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1195 ;;      Params:         1       0       0       0       0       0       0       0       0
  1196 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1197 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1198 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1199 ;;Total ram usage:        4 bytes
  1200 ;; Hardware stack levels used: 1
  1201 ;; Hardware stack levels required when called: 6
  1202 ;; This function calls:
  1203 ;;		_EscribeLCD_c
  1204 ;;		_strlen
  1205 ;; This function is called by:
  1206 ;;		_main
  1207 ;;		_TransmitirDatos
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text6
  1212   000C1E                     __ptext6:
  1213                           	callstack 0
  1214   000C1E                     _MensajeLCD_Var:
  1215                           	callstack 23
  1216                           
  1217                           ;LibLCDXC8.h: 219: for(int i = 0; i<strlen(a); i++){
  1218                           
  1219                           ;incstack = 0
  1220   000C1E  0E00               	movlw	0
  1221   000C20  6E10               	movwf	(MensajeLCD_Var@i+1)^0,c
  1222   000C22  0E00               	movlw	0
  1223   000C24  6E0F               	movwf	MensajeLCD_Var@i^0,c
  1224   000C26  D019               	goto	l1390
  1225   000C28                     l1382:
  1226                           
  1227                           ;LibLCDXC8.h: 220: if(a[i] == (0)){
  1228   000C28  500D               	movf	MensajeLCD_Var@a^0,w,c
  1229   000C2A  240F               	addwf	MensajeLCD_Var@i^0,w,c
  1230   000C2C  6E0E               	movwf	??_MensajeLCD_Var^0,c
  1231   000C2E  C00E  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1232   000C32                     	if	1	;There is more than 1 active tblptr byte
  1233   000C32  0E08               	movlw	high __smallconst
  1234   000C34  6EF7               	movwf	tblptrh,c
  1235   000C36                     	endif
  1236   000C36                     	if	0	;tblptru may be non-zero
  1237   000C36                     	endif
  1238   000C36                     	if	0	;tblptru may be non-zero
  1239   000C36                     	endif
  1240   000C36  0008               	tblrd		*
  1241   000C38  50F5               	movf	tablat,w,c
  1242   000C3A  0900               	iorlw	0
  1243   000C3C  B4D8               	btfsc	status,2,c
  1244   000C3E  0012               	return	
  1245                           
  1246                           ;LibLCDXC8.h: 222: };LibLCDXC8.h: 223: EscribeLCD_c(a[i]);
  1247   000C40  500D               	movf	MensajeLCD_Var@a^0,w,c
  1248   000C42  240F               	addwf	MensajeLCD_Var@i^0,w,c
  1249   000C44  6E0E               	movwf	??_MensajeLCD_Var^0,c
  1250   000C46  C00E  FFF6         	movff	??_MensajeLCD_Var,tblptrl
  1251   000C4A                     	if	1	;There is more than 1 active tblptr byte
  1252   000C4A  0E08               	movlw	high __smallconst
  1253   000C4C  6EF7               	movwf	tblptrh,c
  1254   000C4E                     	endif
  1255   000C4E                     	if	0	;tblptru may be non-zero
  1256   000C4E                     	endif
  1257   000C4E                     	if	0	;tblptru may be non-zero
  1258   000C4E                     	endif
  1259   000C4E  0008               	tblrd		*
  1260   000C50  50F5               	movf	tablat,w,c
  1261   000C52  ECE3  F006         	call	_EscribeLCD_c
  1262   000C56  4A0F               	infsnz	MensajeLCD_Var@i^0,f,c
  1263   000C58  2A10               	incf	(MensajeLCD_Var@i+1)^0,f,c
  1264   000C5A                     l1390:
  1265   000C5A  C00D  F008         	movff	MensajeLCD_Var@a,strlen@s
  1266   000C5E  ECC3  F006         	call	_strlen	;wreg free
  1267   000C62  5008               	movf	?_strlen^0,w,c
  1268   000C64  5C0F               	subwf	MensajeLCD_Var@i^0,w,c
  1269   000C66  5009               	movf	(?_strlen+1)^0,w,c
  1270   000C68  5810               	subwfb	(MensajeLCD_Var@i+1)^0,w,c
  1271   000C6A  B0D8               	btfsc	status,0,c
  1272   000C6C  0012               	return	
  1273   000C6E  D7DC               	goto	l1382
  1274   000C70                     __end_of_MensajeLCD_Var:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _strlen *****************
  1278 ;; Defined at:
  1279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\strlen.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;  s               1    7[COMRAM] PTR const unsigned char 
  1282 ;;		 -> STR_7(3), STR_6(11), STR_5(10), STR_4(11), 
  1283 ;;		 -> STR_3(13), STR_2(11), STR_1(14), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  cp              1    9[COMRAM] PTR const unsigned char 
  1286 ;;		 -> STR_7(3), STR_6(11), STR_5(10), STR_4(11), 
  1287 ;;		 -> STR_3(13), STR_2(11), STR_1(14), 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  2    7[COMRAM] unsigned int 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1300 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1301 ;;Total ram usage:        3 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 3
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_MensajeLCD_Var
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text7
  1312   000D86                     __ptext7:
  1313                           	callstack 0
  1314   000D86                     _strlen:
  1315                           	callstack 25
  1316                           
  1317                           ;incstack = 0
  1318   000D86  C008  F00A         	movff	strlen@s,strlen@cp
  1319   000D8A  D001               	goto	l1374
  1320   000D8C                     l1372:
  1321   000D8C  2A0A               	incf	strlen@cp^0,f,c
  1322   000D8E                     l1374:
  1323   000D8E  C00A  FFF6         	movff	strlen@cp,tblptrl
  1324   000D92                     	if	1	;There is more than 1 active tblptr byte
  1325   000D92  0E08               	movlw	high __smallconst
  1326   000D94  6EF7               	movwf	tblptrh,c
  1327   000D96                     	endif
  1328   000D96                     	if	0	;tblptru may be non-zero
  1329   000D96                     	endif
  1330   000D96                     	if	0	;tblptru may be non-zero
  1331   000D96                     	endif
  1332   000D96  0008               	tblrd		*
  1333   000D98  50F5               	movf	tablat,w,c
  1334   000D9A  0900               	iorlw	0
  1335   000D9C  A4D8               	btfss	status,2,c
  1336   000D9E  D7F6               	goto	l1372
  1337   000DA0  5008               	movf	strlen@s^0,w,c
  1338   000DA2  5C0A               	subwf	strlen@cp^0,w,c
  1339   000DA4  6E08               	movwf	?_strlen^0,c
  1340   000DA6  6A09               	clrf	(?_strlen+1)^0,c
  1341   000DA8  BE08               	btfsc	?_strlen^0,7,c
  1342   000DAA  0609               	decf	(?_strlen+1)^0,f,c
  1343   000DAC  0012               	return		;funcret
  1344   000DAE                     __end_of_strlen:
  1345                           	callstack 0
  1346                           
  1347 ;; *************** function _EscribeLCD_c *****************
  1348 ;; Defined at:
  1349 ;;		line 118 in file "LibLCDXC8.h"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  a               1    wreg     unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  a               1   11[COMRAM] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1363 ;;      Params:         0       0       0       0       0       0       0       0       0
  1364 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1365 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1366 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1367 ;;Total ram usage:        1 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; Hardware stack levels required when called: 5
  1370 ;; This function calls:
  1371 ;;		_EnviaDato
  1372 ;;		_HabilitaLCD
  1373 ;;		_RetardoLCD
  1374 ;; This function is called by:
  1375 ;;		_MensajeLCD_Var
  1376 ;;		_main
  1377 ;;		_TransmitirDatos
  1378 ;; This function uses a non-reentrant model
  1379 ;;
  1380                           
  1381                           	psect	text8
  1382   000DC6                     __ptext8:
  1383                           	callstack 0
  1384   000DC6                     _EscribeLCD_c:
  1385                           	callstack 23
  1386                           
  1387                           ;incstack = 0
  1388                           ;EscribeLCD_c@a stored from wreg
  1389   000DC6  6E0C               	movwf	EscribeLCD_c@a^0,c
  1390                           
  1391                           ;LibLCDXC8.h: 122: LATD2=1;
  1392   000DC8  848C               	bsf	3980,2,c	;volatile
  1393                           
  1394                           ;LibLCDXC8.h: 123: EnviaDato(a);
  1395   000DCA  500C               	movf	EscribeLCD_c@a^0,w,c
  1396   000DCC  EC38  F006         	call	_EnviaDato
  1397                           
  1398                           ;LibLCDXC8.h: 124: HabilitaLCD();
  1399   000DD0  EC03  F007         	call	_HabilitaLCD	;wreg free
  1400                           
  1401                           ;LibLCDXC8.h: 125: RetardoLCD(4);
  1402   000DD4  0E04               	movlw	4
  1403   000DD6  ECB3  F005         	call	_RetardoLCD
  1404   000DDA  0012               	return		;funcret
  1405   000DDC                     __end_of_EscribeLCD_c:
  1406                           	callstack 0
  1407                           
  1408 ;; *************** function _DireccionaLCD *****************
  1409 ;; Defined at:
  1410 ;;		line 227 in file "LibLCDXC8.h"
  1411 ;; Parameters:    Size  Location     Type
  1412 ;;  a               1    wreg     unsigned char 
  1413 ;; Auto vars:     Size  Location     Type
  1414 ;;  a               1   11[COMRAM] unsigned char 
  1415 ;; Return value:  Size  Location     Type
  1416 ;;                  1    wreg      void 
  1417 ;; Registers used:
  1418 ;;		wreg, status,2, status,0, cstack
  1419 ;; Tracked objects:
  1420 ;;		On entry : 0/0
  1421 ;;		On exit  : 0/0
  1422 ;;		Unchanged: 0/0
  1423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1424 ;;      Params:         0       0       0       0       0       0       0       0       0
  1425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1426 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1427 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1428 ;;Total ram usage:        1 bytes
  1429 ;; Hardware stack levels used: 1
  1430 ;; Hardware stack levels required when called: 5
  1431 ;; This function calls:
  1432 ;;		_EnviaDato
  1433 ;;		_HabilitaLCD
  1434 ;;		_RetardoLCD
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;;		_TransmitirDatos
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           	psect	text9
  1442   000DDC                     __ptext9:
  1443                           	callstack 0
  1444   000DDC                     _DireccionaLCD:
  1445                           	callstack 24
  1446                           
  1447                           ;incstack = 0
  1448                           ;DireccionaLCD@a stored from wreg
  1449   000DDC  6E0C               	movwf	DireccionaLCD@a^0,c
  1450                           
  1451                           ;LibLCDXC8.h: 230: LATD2=0;
  1452   000DDE  948C               	bcf	3980,2,c	;volatile
  1453                           
  1454                           ;LibLCDXC8.h: 231: EnviaDato(a);
  1455   000DE0  500C               	movf	DireccionaLCD@a^0,w,c
  1456   000DE2  EC38  F006         	call	_EnviaDato
  1457                           
  1458                           ;LibLCDXC8.h: 232: HabilitaLCD();
  1459   000DE6  EC03  F007         	call	_HabilitaLCD	;wreg free
  1460                           
  1461                           ;LibLCDXC8.h: 233: RetardoLCD(4);
  1462   000DEA  0E04               	movlw	4
  1463   000DEC  ECB3  F005         	call	_RetardoLCD
  1464   000DF0  0012               	return		;funcret
  1465   000DF2                     __end_of_DireccionaLCD:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _InicializaLCD *****************
  1469 ;; Defined at:
  1470 ;;		line 64 in file "LibLCDXC8.h"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, status,2, status,0, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 6
  1491 ;; This function calls:
  1492 ;;		_BorraLCD
  1493 ;;		_EnviaDato
  1494 ;;		_HabilitaLCD
  1495 ;;		_RetardoLCD
  1496 ;; This function is called by:
  1497 ;;		_main
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text10
  1502   000ACA                     __ptext10:
  1503                           	callstack 0
  1504   000ACA                     _InicializaLCD:
  1505                           	callstack 24
  1506                           
  1507                           ;LibLCDXC8.h: 66: LATD2=0;
  1508                           
  1509                           ;incstack = 0
  1510   000ACA  948C               	bcf	3980,2,c	;volatile
  1511                           
  1512                           ;LibLCDXC8.h: 67: if(interfaz==4)
  1513   000ACC  0E04               	movlw	4
  1514   000ACE  181B               	xorwf	_interfaz^0,w,c
  1515   000AD0  A4D8               	btfss	status,2,c
  1516   000AD2  D004               	goto	l1116
  1517                           
  1518                           ;LibLCDXC8.h: 68: LATD=(LATD & 0b00001111) | 0x30;
  1519   000AD4  508C               	movf	140,w,c	;volatile
  1520   000AD6  0B0F               	andlw	15
  1521   000AD8  0930               	iorlw	48
  1522   000ADA  D001               	goto	L1
  1523   000ADC                     l1116:
  1524                           
  1525                           ;LibLCDXC8.h: 69: else;LibLCDXC8.h: 70: LATD=0x3F;
  1526   000ADC  0E3F               	movlw	63
  1527   000ADE                     L1:
  1528   000ADE  6E8C               	movwf	140,c	;volatile
  1529                           
  1530                           ;LibLCDXC8.h: 71: HabilitaLCD();
  1531   000AE0  EC03  F007         	call	_HabilitaLCD	;wreg free
  1532                           
  1533                           ;LibLCDXC8.h: 72: RetardoLCD(1);
  1534   000AE4  0E01               	movlw	1
  1535   000AE6  ECB3  F005         	call	_RetardoLCD
  1536                           
  1537                           ;LibLCDXC8.h: 73: if(interfaz==4)
  1538   000AEA  0E04               	movlw	4
  1539   000AEC  181B               	xorwf	_interfaz^0,w,c
  1540   000AEE  A4D8               	btfss	status,2,c
  1541   000AF0  D004               	goto	l1126
  1542                           
  1543                           ;LibLCDXC8.h: 74: LATD=(LATD & 0b00001111) | 0x30;
  1544   000AF2  508C               	movf	140,w,c	;volatile
  1545   000AF4  0B0F               	andlw	15
  1546   000AF6  0930               	iorlw	48
  1547   000AF8  D001               	goto	L2
  1548   000AFA                     l1126:
  1549                           
  1550                           ;LibLCDXC8.h: 75: else;LibLCDXC8.h: 76: LATD=0x3F;
  1551   000AFA  0E3F               	movlw	63
  1552   000AFC                     L2:
  1553   000AFC  6E8C               	movwf	140,c	;volatile
  1554                           
  1555                           ;LibLCDXC8.h: 77: HabilitaLCD();
  1556   000AFE  EC03  F007         	call	_HabilitaLCD	;wreg free
  1557                           
  1558                           ;LibLCDXC8.h: 78: RetardoLCD(3);
  1559   000B02  0E03               	movlw	3
  1560   000B04  ECB3  F005         	call	_RetardoLCD
  1561                           
  1562                           ;LibLCDXC8.h: 79: if(interfaz==4)
  1563   000B08  0E04               	movlw	4
  1564   000B0A  181B               	xorwf	_interfaz^0,w,c
  1565   000B0C  A4D8               	btfss	status,2,c
  1566   000B0E  D004               	goto	l1136
  1567                           
  1568                           ;LibLCDXC8.h: 80: LATD=(LATD & 0b00001111) | 0x30;
  1569   000B10  508C               	movf	140,w,c	;volatile
  1570   000B12  0B0F               	andlw	15
  1571   000B14  0930               	iorlw	48
  1572   000B16  D001               	goto	L3
  1573   000B18                     l1136:
  1574                           
  1575                           ;LibLCDXC8.h: 81: else;LibLCDXC8.h: 82: LATD=0x3F;
  1576   000B18  0E3F               	movlw	63
  1577   000B1A                     L3:
  1578   000B1A  6E8C               	movwf	140,c	;volatile
  1579                           
  1580                           ;LibLCDXC8.h: 83: HabilitaLCD();
  1581   000B1C  EC03  F007         	call	_HabilitaLCD	;wreg free
  1582                           
  1583                           ;LibLCDXC8.h: 84: RetardoLCD(4);
  1584   000B20  0E04               	movlw	4
  1585   000B22  ECB3  F005         	call	_RetardoLCD
  1586                           
  1587                           ;LibLCDXC8.h: 85: if(interfaz==4){
  1588   000B26  0E04               	movlw	4
  1589   000B28  181B               	xorwf	_interfaz^0,w,c
  1590   000B2A  A4D8               	btfss	status,2,c
  1591   000B2C  D011               	goto	l1156
  1592                           
  1593                           ;LibLCDXC8.h: 86: LATD=(LATD & 0b00001111) | 0x20;
  1594   000B2E  508C               	movf	140,w,c	;volatile
  1595   000B30  0B0F               	andlw	15
  1596   000B32  0920               	iorlw	32
  1597   000B34  6E8C               	movwf	140,c	;volatile
  1598                           
  1599                           ;LibLCDXC8.h: 87: HabilitaLCD();
  1600   000B36  EC03  F007         	call	_HabilitaLCD	;wreg free
  1601                           
  1602                           ;LibLCDXC8.h: 88: RetardoLCD(4);
  1603   000B3A  0E04               	movlw	4
  1604   000B3C  ECB3  F005         	call	_RetardoLCD
  1605                           
  1606                           ;LibLCDXC8.h: 89: EnviaDato(0x2F);
  1607   000B40  0E2F               	movlw	47
  1608   000B42  EC38  F006         	call	_EnviaDato
  1609                           
  1610                           ;LibLCDXC8.h: 90: HabilitaLCD();
  1611   000B46  EC03  F007         	call	_HabilitaLCD	;wreg free
  1612                           
  1613                           ;LibLCDXC8.h: 91: RetardoLCD(4);
  1614   000B4A  0E04               	movlw	4
  1615   000B4C  ECB3  F005         	call	_RetardoLCD
  1616   000B50                     l1156:
  1617                           
  1618                           ;LibLCDXC8.h: 92: };LibLCDXC8.h: 93: BorraLCD();
  1619   000B50  ECF9  F006         	call	_BorraLCD	;wreg free
  1620                           
  1621                           ;LibLCDXC8.h: 94: EnviaDato(0xF);
  1622   000B54  0E0F               	movlw	15
  1623   000B56  EC38  F006         	call	_EnviaDato
  1624                           
  1625                           ;LibLCDXC8.h: 95: HabilitaLCD();
  1626   000B5A  EC03  F007         	call	_HabilitaLCD	;wreg free
  1627                           
  1628                           ;LibLCDXC8.h: 96: RetardoLCD(4);
  1629   000B5E  0E04               	movlw	4
  1630   000B60  ECB3  F005         	call	_RetardoLCD
  1631   000B64  0012               	return		;funcret
  1632   000B66                     __end_of_InicializaLCD:
  1633                           	callstack 0
  1634                           
  1635 ;; *************** function _BorraLCD *****************
  1636 ;; Defined at:
  1637 ;;		line 105 in file "LibLCDXC8.h"
  1638 ;; Parameters:    Size  Location     Type
  1639 ;;		None
  1640 ;; Auto vars:     Size  Location     Type
  1641 ;;		None
  1642 ;; Return value:  Size  Location     Type
  1643 ;;                  1    wreg      void 
  1644 ;; Registers used:
  1645 ;;		wreg, status,2, status,0, cstack
  1646 ;; Tracked objects:
  1647 ;;		On entry : 0/0
  1648 ;;		On exit  : 0/0
  1649 ;;		Unchanged: 0/0
  1650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1651 ;;      Params:         0       0       0       0       0       0       0       0       0
  1652 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1653 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1654 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1655 ;;Total ram usage:        0 bytes
  1656 ;; Hardware stack levels used: 1
  1657 ;; Hardware stack levels required when called: 5
  1658 ;; This function calls:
  1659 ;;		_EnviaDato
  1660 ;;		_HabilitaLCD
  1661 ;;		_RetardoLCD
  1662 ;; This function is called by:
  1663 ;;		_InicializaLCD
  1664 ;;		_main
  1665 ;; This function uses a non-reentrant model
  1666 ;;
  1667                           
  1668                           	psect	text11
  1669   000DF2                     __ptext11:
  1670                           	callstack 0
  1671   000DF2                     _BorraLCD:
  1672                           	callstack 24
  1673                           
  1674                           ;LibLCDXC8.h: 107: LATD2=0;
  1675                           
  1676                           ;incstack = 0
  1677   000DF2  948C               	bcf	3980,2,c	;volatile
  1678                           
  1679                           ;LibLCDXC8.h: 108: EnviaDato(0x01);
  1680   000DF4  0E01               	movlw	1
  1681   000DF6  EC38  F006         	call	_EnviaDato
  1682                           
  1683                           ;LibLCDXC8.h: 109: HabilitaLCD();
  1684   000DFA  EC03  F007         	call	_HabilitaLCD	;wreg free
  1685                           
  1686                           ;LibLCDXC8.h: 110: RetardoLCD(2);
  1687   000DFE  0E02               	movlw	2
  1688   000E00  ECB3  F005         	call	_RetardoLCD
  1689   000E04  0012               	return		;funcret
  1690   000E06                     __end_of_BorraLCD:
  1691                           	callstack 0
  1692                           
  1693 ;; *************** function _EnviaDato *****************
  1694 ;; Defined at:
  1695 ;;		line 54 in file "LibLCDXC8.h"
  1696 ;; Parameters:    Size  Location     Type
  1697 ;;  a               1    wreg     unsigned char 
  1698 ;; Auto vars:     Size  Location     Type
  1699 ;;  a               1   10[COMRAM] unsigned char 
  1700 ;; Return value:  Size  Location     Type
  1701 ;;                  1    wreg      void 
  1702 ;; Registers used:
  1703 ;;		wreg, status,2, status,0, cstack
  1704 ;; Tracked objects:
  1705 ;;		On entry : 0/0
  1706 ;;		On exit  : 0/0
  1707 ;;		Unchanged: 0/0
  1708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1709 ;;      Params:         0       0       0       0       0       0       0       0       0
  1710 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1711 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1712 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1713 ;;Total ram usage:        2 bytes
  1714 ;; Hardware stack levels used: 1
  1715 ;; Hardware stack levels required when called: 4
  1716 ;; This function calls:
  1717 ;;		_HabilitaLCD
  1718 ;;		_RetardoLCD
  1719 ;; This function is called by:
  1720 ;;		_InicializaLCD
  1721 ;;		_BorraLCD
  1722 ;;		_EscribeLCD_c
  1723 ;;		_DireccionaLCD
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text12
  1728   000C70                     __ptext12:
  1729                           	callstack 0
  1730   000C70                     _EnviaDato:
  1731                           	callstack 23
  1732                           
  1733                           ;incstack = 0
  1734                           ;EnviaDato@a stored from wreg
  1735   000C70  6E0B               	movwf	EnviaDato@a^0,c
  1736                           
  1737                           ;LibLCDXC8.h: 55: if(interfaz==4){
  1738   000C72  0E04               	movlw	4
  1739   000C74  181B               	xorwf	_interfaz^0,w,c
  1740   000C76  A4D8               	btfss	status,2,c
  1741   000C78  D017               	goto	l1010
  1742                           
  1743                           ;LibLCDXC8.h: 56: LATD=(LATD & 0b00001111) | (a & 0b11110000);
  1744   000C7A  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  1745   000C7E  0EF0               	movlw	240
  1746   000C80  160A               	andwf	??_EnviaDato^0,f,c
  1747   000C82  508C               	movf	140,w,c	;volatile
  1748   000C84  0B0F               	andlw	15
  1749   000C86  100A               	iorwf	??_EnviaDato^0,w,c
  1750   000C88  6E8C               	movwf	140,c	;volatile
  1751                           
  1752                           ;LibLCDXC8.h: 57: HabilitaLCD();
  1753   000C8A  EC03  F007         	call	_HabilitaLCD	;wreg free
  1754                           
  1755                           ;LibLCDXC8.h: 58: RetardoLCD(1);
  1756   000C8E  0E01               	movlw	1
  1757   000C90  ECB3  F005         	call	_RetardoLCD
  1758                           
  1759                           ;LibLCDXC8.h: 59: LATD=(LATD & 0b00001111) | (a<<4);
  1760   000C94  C00B  F00A         	movff	EnviaDato@a,??_EnviaDato
  1761   000C98  3A0A               	swapf	??_EnviaDato^0,f,c
  1762   000C9A  0EF0               	movlw	240
  1763   000C9C  160A               	andwf	??_EnviaDato^0,f,c
  1764   000C9E  508C               	movf	140,w,c	;volatile
  1765   000CA0  0B0F               	andlw	15
  1766   000CA2  100A               	iorwf	??_EnviaDato^0,w,c
  1767   000CA4  6E8C               	movwf	140,c	;volatile
  1768                           
  1769                           ;LibLCDXC8.h: 60: }else if(interfaz==8){
  1770   000CA6  0012               	return	
  1771   000CA8                     l1010:
  1772   000CA8  0E08               	movlw	8
  1773   000CAA  181B               	xorwf	_interfaz^0,w,c
  1774   000CAC  A4D8               	btfss	status,2,c
  1775   000CAE  0012               	return	
  1776                           
  1777                           ;LibLCDXC8.h: 61: LATD=a;
  1778   000CB0  C00B  FF8C         	movff	EnviaDato@a,3980	;volatile
  1779   000CB4  0012               	return		;funcret
  1780   000CB6                     __end_of_EnviaDato:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _RetardoLCD *****************
  1784 ;; Defined at:
  1785 ;;		line 262 in file "LibLCDXC8.h"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  a               1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  a               1    8[COMRAM] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1799 ;;      Params:         0       0       0       0       0       0       0       0       0
  1800 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1801 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1802 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used: 1
  1805 ;; Hardware stack levels required when called: 3
  1806 ;; This function calls:
  1807 ;;		Nothing
  1808 ;; This function is called by:
  1809 ;;		_EnviaDato
  1810 ;;		_InicializaLCD
  1811 ;;		_BorraLCD
  1812 ;;		_EscribeLCD_c
  1813 ;;		_DireccionaLCD
  1814 ;; This function uses a non-reentrant model
  1815 ;;
  1816                           
  1817                           	psect	text13
  1818   000B66                     __ptext13:
  1819                           	callstack 0
  1820   000B66                     _RetardoLCD:
  1821                           	callstack 24
  1822                           
  1823                           ;incstack = 0
  1824                           ;RetardoLCD@a stored from wreg
  1825   000B66  6E09               	movwf	RetardoLCD@a^0,c
  1826                           
  1827                           ;LibLCDXC8.h: 263: switch(a){
  1828   000B68  D023               	goto	l998
  1829   000B6A                     l988:
  1830   000B6A  0E62               	movlw	98
  1831   000B6C  6E08               	movwf	??_RetardoLCD^0,c
  1832   000B6E  0E66               	movlw	102
  1833   000B70                     u637:
  1834   000B70  2EE8               	decfsz	wreg,f,c
  1835   000B72  D7FE               	bra	u637
  1836   000B74  2E08               	decfsz	??_RetardoLCD^0,f,c
  1837   000B76  D7FC               	bra	u637
  1838                           
  1839                           ;LibLCDXC8.h: 266: break;
  1840   000B78  0012               	return	
  1841   000B7A                     l990:
  1842   000B7A  0E07               	movlw	7
  1843   000B7C  6E08               	movwf	??_RetardoLCD^0,c
  1844   000B7E  0E7D               	movlw	125
  1845   000B80                     u647:
  1846   000B80  2EE8               	decfsz	wreg,f,c
  1847   000B82  D7FE               	bra	u647
  1848   000B84  2E08               	decfsz	??_RetardoLCD^0,f,c
  1849   000B86  D7FC               	bra	u647
  1850   000B88  F000               	nop	
  1851                           
  1852                           ;LibLCDXC8.h: 268: _delay((unsigned long)((640)*(20000000/4000000.0)));
  1853   000B8A  0E05               	movlw	5
  1854   000B8C  6E08               	movwf	??_RetardoLCD^0,c
  1855   000B8E  0E26               	movlw	38
  1856   000B90                     u657:
  1857   000B90  2EE8               	decfsz	wreg,f,c
  1858   000B92  D7FE               	bra	u657
  1859   000B94  2E08               	decfsz	??_RetardoLCD^0,f,c
  1860   000B96  D7FC               	bra	u657
  1861   000B98  D000               	nop2	
  1862                           
  1863                           ;LibLCDXC8.h: 270: break;
  1864   000B9A  0012               	return	
  1865   000B9C                     l992:
  1866   000B9C  0EA6               	movlw	166
  1867   000B9E                     u667:
  1868   000B9E  2EE8               	decfsz	wreg,f,c
  1869   000BA0  D7FE               	bra	u667
  1870   000BA2  D000               	nop2	
  1871                           
  1872                           ;LibLCDXC8.h: 273: break;
  1873   000BA4  0012               	return	
  1874   000BA6                     l994:
  1875   000BA6  0E42               	movlw	66
  1876   000BA8                     u677:
  1877   000BA8  2EE8               	decfsz	wreg,f,c
  1878   000BAA  D7FE               	bra	u677
  1879   000BAC  D000               	nop2	
  1880                           
  1881                           ;LibLCDXC8.h: 276: break;
  1882   000BAE  0012               	return	
  1883   000BB0                     l998:
  1884   000BB0  5009               	movf	RetardoLCD@a^0,w,c
  1885                           
  1886                           ; Switch size 1, requested type "simple"
  1887                           ; Number of cases is 4, Range of values is 1 to 4
  1888                           ; switch strategies available:
  1889                           ; Name         Instructions Cycles
  1890                           ; simple_byte           13     7 (average)
  1891                           ;	Chosen strategy is simple_byte
  1892   000BB2  0A01               	xorlw	1	; case 1
  1893   000BB4  B4D8               	btfsc	status,2,c
  1894   000BB6  D7D9               	goto	l988
  1895   000BB8  0A03               	xorlw	3	; case 2
  1896   000BBA  B4D8               	btfsc	status,2,c
  1897   000BBC  D7DE               	goto	l990
  1898   000BBE  0A01               	xorlw	1	; case 3
  1899   000BC0  B4D8               	btfsc	status,2,c
  1900   000BC2  D7EC               	goto	l992
  1901   000BC4  0A07               	xorlw	7	; case 4
  1902   000BC6  A4D8               	btfss	status,2,c
  1903   000BC8  0012               	return	
  1904   000BCA  D7ED               	goto	l994
  1905   000BCC                     __end_of_RetardoLCD:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function _HabilitaLCD *****************
  1909 ;; Defined at:
  1910 ;;		line 98 in file "LibLCDXC8.h"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;		None
  1913 ;; Auto vars:     Size  Location     Type
  1914 ;;		None
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      void 
  1917 ;; Registers used:
  1918 ;;		wreg
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        0 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; Hardware stack levels required when called: 3
  1931 ;; This function calls:
  1932 ;;		Nothing
  1933 ;; This function is called by:
  1934 ;;		_EnviaDato
  1935 ;;		_InicializaLCD
  1936 ;;		_BorraLCD
  1937 ;;		_EscribeLCD_c
  1938 ;;		_DireccionaLCD
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text14
  1943   000E06                     __ptext14:
  1944                           	callstack 0
  1945   000E06                     _HabilitaLCD:
  1946                           	callstack 24
  1947                           
  1948                           ;LibLCDXC8.h: 100: LATD3=1;
  1949                           
  1950                           ;incstack = 0
  1951   000E06  868C               	bsf	3980,3,c	;volatile
  1952                           
  1953                           ;LibLCDXC8.h: 101: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1954   000E08  0E42               	movlw	66
  1955   000E0A                     u687:
  1956   000E0A  2EE8               	decfsz	wreg,f,c
  1957   000E0C  D7FE               	bra	u687
  1958   000E0E  D000               	nop2	
  1959                           
  1960                           ;LibLCDXC8.h: 103: LATD3=0;
  1961   000E10  968C               	bcf	3980,3,c	;volatile
  1962   000E12  0012               	return		;funcret
  1963   000E14                     __end_of_HabilitaLCD:
  1964                           	callstack 0
  1965                           
  1966 ;; *************** function _ConfiguraLCD *****************
  1967 ;; Defined at:
  1968 ;;		line 50 in file "LibLCDXC8.h"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  a               1    wreg     unsigned char 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  a               1    7[COMRAM] unsigned char 
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  1    wreg      void 
  1975 ;; Registers used:
  1976 ;;		wreg, status,2, status,0
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1982 ;;      Params:         0       0       0       0       0       0       0       0       0
  1983 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1984 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1985 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1986 ;;Total ram usage:        1 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 3
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text15
  1997   000DAE                     __ptext15:
  1998                           	callstack 0
  1999   000DAE                     _ConfiguraLCD:
  2000                           	callstack 27
  2001                           
  2002                           ;incstack = 0
  2003                           ;ConfiguraLCD@a stored from wreg
  2004   000DAE  6E08               	movwf	ConfiguraLCD@a^0,c
  2005                           
  2006                           ;LibLCDXC8.h: 51: if(a==4 | a ==8)
  2007   000DB0  0E04               	movlw	4
  2008   000DB2  1808               	xorwf	ConfiguraLCD@a^0,w,c
  2009   000DB4  B4D8               	btfsc	status,2,c
  2010   000DB6  D004               	goto	u120
  2011   000DB8  0E08               	movlw	8
  2012   000DBA  1808               	xorwf	ConfiguraLCD@a^0,w,c
  2013   000DBC  A4D8               	btfss	status,2,c
  2014   000DBE  0012               	return	
  2015   000DC0                     u120:
  2016                           
  2017                           ;LibLCDXC8.h: 52: interfaz=a;
  2018   000DC0  C008  F01B         	movff	ConfiguraLCD@a,_interfaz
  2019   000DC4  0012               	return		;funcret
  2020   000DC6                     __end_of_ConfiguraLCD:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _ISRL *****************
  2024 ;; Defined at:
  2025 ;;		line 156 in file "Proyecto.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;		None
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        5 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 2
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		Interrupt level 1
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	intcodelo
  2054   000018                     __pintcodelo:
  2055                           	callstack 0
  2056   000018                     _ISRL:
  2057                           	callstack 23
  2058                           
  2059                           ;incstack = 0
  2060   000018  801C               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  2061   00001A  CFD8 F005          	movff	status,??_ISRL+2
  2062   00001E  CFE8 F006          	movff	wreg,??_ISRL+3
  2063   000022  CFE0 F007          	movff	bsr,??_ISRL+4
  2064                           
  2065                           ;Proyecto.c: 157: if(RBIF==1){
  2066   000026  A0F2               	btfss	4082,0,c	;volatile
  2067   000028  D04D               	goto	i1l226
  2068                           
  2069                           ;Proyecto.c: 158: if(PORTB!=0b11110000){
  2070   00002A  0EF0               	movlw	240
  2071   00002C  1881               	xorwf	129,w,c	;volatile
  2072   00002E  B4D8               	btfsc	status,2,c
  2073   000030  D03C               	goto	i1l1366
  2074                           
  2075                           ;Proyecto.c: 159: Tecla=16;
  2076   000032  0E10               	movlw	16
  2077   000034  6E19               	movwf	_Tecla^0,c
  2078                           
  2079                           ;Proyecto.c: 160: LATB=0b11111110;
  2080   000036  0EFE               	movlw	254
  2081   000038  6E8A               	movwf	138,c	;volatile
  2082                           
  2083                           ;Proyecto.c: 161: if(RB5==0) Tecla='=';
  2084   00003A  BA81               	btfsc	3969,5,c	;volatile
  2085   00003C  D002               	goto	i1l203
  2086   00003E  0E3D               	movlw	61
  2087   000040  D031               	goto	L14
  2088   000042                     i1l203:
  2089                           
  2090                           ;Proyecto.c: 162: else if(RB6==0) Tecla='0';
  2091   000042  BC81               	btfsc	3969,6,c	;volatile
  2092   000044  D002               	goto	i1l205
  2093   000046  0E30               	movlw	48
  2094   000048  D02D               	goto	L14
  2095   00004A                     i1l205:
  2096                           
  2097                           ;Proyecto.c: 163: else if(RB7==0) Tecla='C';
  2098   00004A  BE81               	btfsc	3969,7,c	;volatile
  2099   00004C  D002               	goto	i1l1336
  2100   00004E  0E43               	movlw	67
  2101   000050  D029               	goto	L14
  2102   000052                     i1l1336:
  2103                           
  2104                           ;Proyecto.c: 164: else{;Proyecto.c: 165: LATB=0b11111101;
  2105   000052  0EFD               	movlw	253
  2106   000054  6E8A               	movwf	138,c	;volatile
  2107                           
  2108                           ;Proyecto.c: 166: if(RB5==0) Tecla='9';
  2109   000056  BA81               	btfsc	3969,5,c	;volatile
  2110   000058  D002               	goto	i1l209
  2111   00005A  0E39               	movlw	57
  2112   00005C  D023               	goto	L14
  2113   00005E                     i1l209:
  2114                           
  2115                           ;Proyecto.c: 167: else if(RB6==0) Tecla='8';
  2116   00005E  BC81               	btfsc	3969,6,c	;volatile
  2117   000060  D002               	goto	i1l211
  2118   000062  0E38               	movlw	56
  2119   000064  D01F               	goto	L14
  2120   000066                     i1l211:
  2121                           
  2122                           ;Proyecto.c: 168: else if(RB7==0) Tecla='7';
  2123   000066  BE81               	btfsc	3969,7,c	;volatile
  2124   000068  D002               	goto	i1l1346
  2125   00006A  0E37               	movlw	55
  2126   00006C  D01B               	goto	L14
  2127   00006E                     i1l1346:
  2128                           
  2129                           ;Proyecto.c: 169: else{;Proyecto.c: 170: LATB=0b11111011;
  2130   00006E  0EFB               	movlw	251
  2131   000070  6E8A               	movwf	138,c	;volatile
  2132                           
  2133                           ;Proyecto.c: 171: if(RB5==0) Tecla='6';
  2134   000072  BA81               	btfsc	3969,5,c	;volatile
  2135   000074  D002               	goto	i1l215
  2136   000076  0E36               	movlw	54
  2137   000078  D015               	goto	L14
  2138   00007A                     i1l215:
  2139                           
  2140                           ;Proyecto.c: 172: else if(RB6==0) Tecla='5';
  2141   00007A  BC81               	btfsc	3969,6,c	;volatile
  2142   00007C  D002               	goto	i1l217
  2143   00007E  0E35               	movlw	53
  2144   000080  D011               	goto	L14
  2145   000082                     i1l217:
  2146                           
  2147                           ;Proyecto.c: 173: else if(RB7==0) Tecla='4';
  2148   000082  BE81               	btfsc	3969,7,c	;volatile
  2149   000084  D002               	goto	i1l1356
  2150   000086  0E34               	movlw	52
  2151   000088  D00D               	goto	L14
  2152   00008A                     i1l1356:
  2153                           
  2154                           ;Proyecto.c: 174: else{;Proyecto.c: 175: LATB=0b11110111;
  2155   00008A  0EF7               	movlw	247
  2156   00008C  6E8A               	movwf	138,c	;volatile
  2157                           
  2158                           ;Proyecto.c: 176: if(RB5==0) Tecla='3';
  2159   00008E  BA81               	btfsc	3969,5,c	;volatile
  2160   000090  D002               	goto	i1l221
  2161   000092  0E33               	movlw	51
  2162   000094  D007               	goto	L14
  2163   000096                     i1l221:
  2164                           
  2165                           ;Proyecto.c: 177: else if(RB6==0) Tecla='2';
  2166   000096  BC81               	btfsc	3969,6,c	;volatile
  2167   000098  D002               	goto	i1l223
  2168   00009A  0E32               	movlw	50
  2169   00009C  D003               	goto	L14
  2170   00009E                     i1l223:
  2171                           
  2172                           ;Proyecto.c: 178: else if(RB7==0) Tecla='1';
  2173   00009E  BE81               	btfsc	3969,7,c	;volatile
  2174   0000A0  D002               	goto	i1l220
  2175   0000A2  0E31               	movlw	49
  2176   0000A4                     L14:
  2177   0000A4  6E19               	movwf	_Tecla^0,c
  2178   0000A6                     i1l220:
  2179                           
  2180                           ;Proyecto.c: 179: };Proyecto.c: 180: };Proyecto.c: 181: };Proyecto.c: 182: LATB=0b111100
      +                          00;
  2181   0000A6  0EF0               	movlw	240
  2182   0000A8  6E8A               	movwf	138,c	;volatile
  2183   0000AA                     i1l1366:
  2184                           
  2185                           ;Proyecto.c: 183: };Proyecto.c: 184: _delay((unsigned long)((100)*(8000000/4000.0)));
  2186   0000AA  0E02               	movlw	2
  2187   0000AC  6E04               	movwf	(??_ISRL+1)^0,c
  2188   0000AE  0E04               	movlw	4
  2189   0000B0  6E03               	movwf	??_ISRL^0,c
  2190   0000B2  0EBA               	movlw	186
  2191   0000B4                     i1u69_27:
  2192   0000B4  2EE8               	decfsz	wreg,f,c
  2193   0000B6  D7FE               	bra	i1u69_27
  2194   0000B8  2E03               	decfsz	??_ISRL^0,f,c
  2195   0000BA  D7FC               	bra	i1u69_27
  2196   0000BC  2E04               	decfsz	(??_ISRL+1)^0,f,c
  2197   0000BE  D7FA               	bra	i1u69_27
  2198   0000C0  D000               	nop2	
  2199                           
  2200                           ;Proyecto.c: 185: RBIF=0;
  2201   0000C2  90F2               	bcf	4082,0,c	;volatile
  2202   0000C4                     i1l226:
  2203   0000C4  C007  FFE0         	movff	??_ISRL+4,bsr
  2204   0000C8  C006  FFE8         	movff	??_ISRL+3,wreg
  2205   0000CC  C005  FFD8         	movff	??_ISRL+2,status
  2206   0000D0  901C               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  2207   0000D2  0010               	retfie	
  2208   0000D4                     __end_of_ISRL:
  2209                           	callstack 0
  2210                           
  2211 ;; *************** function _ISR *****************
  2212 ;; Defined at:
  2213 ;;		line 143 in file "Proyecto.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, cstack
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         0       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2230 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:        2 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; Hardware stack levels required when called: 1
  2234 ;; This function calls:
  2235 ;;		_Recibir
  2236 ;; This function is called by:
  2237 ;;		Interrupt level 2
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	intcode
  2242   000008                     __pintcode:
  2243                           	callstack 0
  2244   000008                     _ISR:
  2245                           	callstack 23
  2246                           
  2247                           ;incstack = 0
  2248   000008  821C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2249   00000A  ED5B  F006         	call	int_func,f	;refresh shadow registers
  2250                           
  2251                           	psect	intcode_body
  2252   000CB6                     __pintcode_body:
  2253                           	callstack 23
  2254   000CB6                     int_func:
  2255                           	callstack 23
  2256   000CB6  0006               	pop		; remove dummy address from shadow register refresh
  2257                           
  2258                           ;Proyecto.c: 144: if(TMR0IF){
  2259   000CB8  A4F2               	btfss	4082,2,c	;volatile
  2260   000CBA  D00A               	goto	i2l1316
  2261                           
  2262                           ;Proyecto.c: 145: TMR0IF=0;
  2263   000CBC  94F2               	bcf	4082,2,c	;volatile
  2264                           
  2265                           ;Proyecto.c: 146: RE2 = !RE2;
  2266   000CBE  B484               	btfsc	3972,2,c	;volatile
  2267   000CC0  D002               	goto	i2u25_40
  2268   000CC2  8484               	bsf	3972,2,c	;volatile
  2269   000CC4  D001               	goto	i2u26_45
  2270   000CC6                     i2u25_40:
  2271   000CC6  9484               	bcf	3972,2,c	;volatile
  2272   000CC8                     i2u26_45:
  2273                           
  2274                           ;Proyecto.c: 147: TMR0 = 3036;
  2275   000CC8  0E0B               	movlw	11
  2276   000CCA  6ED7               	movwf	215,c	;volatile
  2277   000CCC  0EDC               	movlw	220
  2278   000CCE  6ED6               	movwf	214,c	;volatile
  2279   000CD0                     i2l1316:
  2280                           
  2281                           ;Proyecto.c: 149: };Proyecto.c: 150: if(RCIF){
  2282   000CD0  AA9E               	btfss	3998,5,c	;volatile
  2283   000CD2  D00F               	goto	i2l196
  2284                           
  2285                           ;Proyecto.c: 151: Minimo_Consola=Recibir();
  2286   000CD4  EC10  F007         	call	_Recibir	;wreg free
  2287   000CD8  6E17               	movwf	_Minimo_Consola^0,c
  2288                           
  2289                           ;Proyecto.c: 152: _delay((unsigned long)((100)*(8000000/4000.0)));
  2290   000CDA  0E02               	movlw	2
  2291   000CDC  6E02               	movwf	(??_ISR+1)^0,c
  2292   000CDE  0E04               	movlw	4
  2293   000CE0  6E01               	movwf	??_ISR^0,c
  2294   000CE2  0EBA               	movlw	186
  2295   000CE4                     i2u70_47:
  2296   000CE4  2EE8               	decfsz	wreg,f,c
  2297   000CE6  D7FE               	bra	i2u70_47
  2298   000CE8  2E01               	decfsz	??_ISR^0,f,c
  2299   000CEA  D7FC               	bra	i2u70_47
  2300   000CEC  2E02               	decfsz	(??_ISR+1)^0,f,c
  2301   000CEE  D7FA               	bra	i2u70_47
  2302   000CF0  D000               	nop2	
  2303   000CF2                     i2l196:
  2304   000CF2  921C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2305   000CF4  0011               	retfie		f
  2306   000CF6                     __end_of_ISR:
  2307                           	callstack 0
  2308                           
  2309 ;; *************** function _Recibir *****************
  2310 ;; Defined at:
  2311 ;;		line 109 in file "Proyecto.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;		None
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;		None
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  1    wreg      unsigned char 
  2318 ;; Registers used:
  2319 ;;		wreg, status,2
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:         0       0       0       0       0       0       0       0       0
  2326 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2328 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:        0 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_ISR
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text18
  2339   000E20                     __ptext18:
  2340                           	callstack 0
  2341   000E20                     _Recibir:
  2342                           	callstack 23
  2343                           
  2344                           ;Proyecto.c: 110: while(RCIF==0);
  2345                           
  2346                           ;incstack = 0
  2347   000E20  AA9E               	btfss	3998,5,c	;volatile
  2348   000E22  D7FE               	goto	__ptext18
  2349                           
  2350                           ;Proyecto.c: 111: return RCREG;
  2351   000E24  50AE               	movf	174,w,c	;volatile
  2352   000E26  0012               	return		;funcret
  2353   000E28                     __end_of_Recibir:
  2354                           	callstack 0
  2355                           
  2356                           	psect	rparam
  2357   000000                     
  2358                           	psect	temp
  2359   00001C                     btemp:
  2360                           	callstack 0
  2361   00001C                     	ds	1
  2362   000000                     int$flags	set	btemp
  2363   000000                     wtemp8	set	btemp+1
  2364   000000                     ttemp5	set	btemp+1
  2365   000000                     ttemp6	set	btemp+4
  2366   000000                     ttemp7	set	btemp+8
  2367                           
  2368                           	psect	idloc
  2369                           
  2370                           ;Config register IDLOC0 @ 0x200000
  2371                           ;	unspecified, using default values
  2372   200000                     	org	2097152
  2373   200000  FF                 	db	255
  2374                           
  2375                           ;Config register IDLOC1 @ 0x200001
  2376                           ;	unspecified, using default values
  2377   200001                     	org	2097153
  2378   200001  FF                 	db	255
  2379                           
  2380                           ;Config register IDLOC2 @ 0x200002
  2381                           ;	unspecified, using default values
  2382   200002                     	org	2097154
  2383   200002  FF                 	db	255
  2384                           
  2385                           ;Config register IDLOC3 @ 0x200003
  2386                           ;	unspecified, using default values
  2387   200003                     	org	2097155
  2388   200003  FF                 	db	255
  2389                           
  2390                           ;Config register IDLOC4 @ 0x200004
  2391                           ;	unspecified, using default values
  2392   200004                     	org	2097156
  2393   200004  FF                 	db	255
  2394                           
  2395                           ;Config register IDLOC5 @ 0x200005
  2396                           ;	unspecified, using default values
  2397   200005                     	org	2097157
  2398   200005  FF                 	db	255
  2399                           
  2400                           ;Config register IDLOC6 @ 0x200006
  2401                           ;	unspecified, using default values
  2402   200006                     	org	2097158
  2403   200006  FF                 	db	255
  2404                           
  2405                           ;Config register IDLOC7 @ 0x200007
  2406                           ;	unspecified, using default values
  2407   200007                     	org	2097159
  2408   200007  FF                 	db	255
  2409                           
  2410                           	psect	config
  2411                           
  2412                           ;Config register CONFIG1L @ 0x300000
  2413                           ;	unspecified, using default values
  2414                           ;	PLL Prescaler Selection bits
  2415                           ;	PLLDIV = 0x0, unprogrammed default
  2416                           ;	System Clock Postscaler Selection bits
  2417                           ;	CPUDIV = 0x0, unprogrammed default
  2418                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2419                           ;	USBDIV = 0x0, unprogrammed default
  2420   300000                     	org	3145728
  2421   300000  00                 	db	0
  2422                           
  2423                           ;Config register CONFIG1H @ 0x300001
  2424                           ;	Oscillator Selection bits
  2425                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2426                           ;	Fail-Safe Clock Monitor Enable bit
  2427                           ;	FCMEN = 0x0, unprogrammed default
  2428                           ;	Internal/External Oscillator Switchover bit
  2429                           ;	IESO = 0x0, unprogrammed default
  2430   300001                     	org	3145729
  2431   300001  09                 	db	9
  2432                           
  2433                           ;Config register CONFIG2L @ 0x300002
  2434                           ;	unspecified, using default values
  2435                           ;	Power-up Timer Enable bit
  2436                           ;	PWRT = 0x1, unprogrammed default
  2437                           ;	Brown-out Reset Enable bits
  2438                           ;	BOR = 0x3, unprogrammed default
  2439                           ;	Brown-out Reset Voltage bits
  2440                           ;	BORV = 0x3, unprogrammed default
  2441                           ;	USB Voltage Regulator Enable bit
  2442                           ;	VREGEN = 0x0, unprogrammed default
  2443   300002                     	org	3145730
  2444   300002  1F                 	db	31
  2445                           
  2446                           ;Config register CONFIG2H @ 0x300003
  2447                           ;	Watchdog Timer Enable bit
  2448                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2449                           ;	Watchdog Timer Postscale Select bits
  2450                           ;	WDTPS = 0xF, unprogrammed default
  2451   300003                     	org	3145731
  2452   300003  1E                 	db	30
  2453                           
  2454                           ; Padding undefined space
  2455   300004                     	org	3145732
  2456   300004  FF                 	db	255
  2457                           
  2458                           ;Config register CONFIG3H @ 0x300005
  2459                           ;	CCP2 MUX bit
  2460                           ;	CCP2MX = 0x1, unprogrammed default
  2461                           ;	PORTB A/D Enable bit
  2462                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2463                           ;	Low-Power Timer 1 Oscillator Enable bit
  2464                           ;	LPT1OSC = 0x0, unprogrammed default
  2465                           ;	MCLR Pin Enable bit
  2466                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2467   300005                     	org	3145733
  2468   300005  81                 	db	129
  2469                           
  2470                           ;Config register CONFIG4L @ 0x300006
  2471                           ;	Stack Full/Underflow Reset Enable bit
  2472                           ;	STVREN = 0x1, unprogrammed default
  2473                           ;	Single-Supply ICSP Enable bit
  2474                           ;	LVP = OFF, Single-Supply ICSP disabled
  2475                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2476                           ;	ICPRT = 0x0, unprogrammed default
  2477                           ;	Extended Instruction Set Enable bit
  2478                           ;	XINST = 0x0, unprogrammed default
  2479                           ;	Background Debugger Enable bit
  2480                           ;	DEBUG = 0x1, unprogrammed default
  2481   300006                     	org	3145734
  2482   300006  81                 	db	129
  2483                           
  2484                           ; Padding undefined space
  2485   300007                     	org	3145735
  2486   300007  FF                 	db	255
  2487                           
  2488                           ;Config register CONFIG5L @ 0x300008
  2489                           ;	unspecified, using default values
  2490                           ;	Code Protection bit
  2491                           ;	CP0 = 0x1, unprogrammed default
  2492                           ;	Code Protection bit
  2493                           ;	CP1 = 0x1, unprogrammed default
  2494                           ;	Code Protection bit
  2495                           ;	CP2 = 0x1, unprogrammed default
  2496                           ;	Code Protection bit
  2497                           ;	CP3 = 0x1, unprogrammed default
  2498   300008                     	org	3145736
  2499   300008  0F                 	db	15
  2500                           
  2501                           ;Config register CONFIG5H @ 0x300009
  2502                           ;	unspecified, using default values
  2503                           ;	Boot Block Code Protection bit
  2504                           ;	CPB = 0x1, unprogrammed default
  2505                           ;	Data EEPROM Code Protection bit
  2506                           ;	CPD = 0x1, unprogrammed default
  2507   300009                     	org	3145737
  2508   300009  C0                 	db	192
  2509                           
  2510                           ;Config register CONFIG6L @ 0x30000A
  2511                           ;	unspecified, using default values
  2512                           ;	Write Protection bit
  2513                           ;	WRT0 = 0x1, unprogrammed default
  2514                           ;	Write Protection bit
  2515                           ;	WRT1 = 0x1, unprogrammed default
  2516                           ;	Write Protection bit
  2517                           ;	WRT2 = 0x1, unprogrammed default
  2518                           ;	Write Protection bit
  2519                           ;	WRT3 = 0x1, unprogrammed default
  2520   30000A                     	org	3145738
  2521   30000A  0F                 	db	15
  2522                           
  2523                           ;Config register CONFIG6H @ 0x30000B
  2524                           ;	unspecified, using default values
  2525                           ;	Configuration Register Write Protection bit
  2526                           ;	WRTC = 0x1, unprogrammed default
  2527                           ;	Boot Block Write Protection bit
  2528                           ;	WRTB = 0x1, unprogrammed default
  2529                           ;	Data EEPROM Write Protection bit
  2530                           ;	WRTD = 0x1, unprogrammed default
  2531   30000B                     	org	3145739
  2532   30000B  E0                 	db	224
  2533                           
  2534                           ;Config register CONFIG7L @ 0x30000C
  2535                           ;	unspecified, using default values
  2536                           ;	Table Read Protection bit
  2537                           ;	EBTR0 = 0x1, unprogrammed default
  2538                           ;	Table Read Protection bit
  2539                           ;	EBTR1 = 0x1, unprogrammed default
  2540                           ;	Table Read Protection bit
  2541                           ;	EBTR2 = 0x1, unprogrammed default
  2542                           ;	Table Read Protection bit
  2543                           ;	EBTR3 = 0x1, unprogrammed default
  2544   30000C                     	org	3145740
  2545   30000C  0F                 	db	15
  2546                           
  2547                           ;Config register CONFIG7H @ 0x30000D
  2548                           ;	unspecified, using default values
  2549                           ;	Boot Block Table Read Protection bit
  2550                           ;	EBTRB = 0x1, unprogrammed default
  2551   30000D                     	org	3145741
  2552   30000D  40                 	db	64
  2553                           tosu	equ	0xFFF
  2554                           tosh	equ	0xFFE
  2555                           tosl	equ	0xFFD
  2556                           stkptr	equ	0xFFC
  2557                           pclatu	equ	0xFFB
  2558                           pclath	equ	0xFFA
  2559                           pcl	equ	0xFF9
  2560                           tblptru	equ	0xFF8
  2561                           tblptrh	equ	0xFF7
  2562                           tblptrl	equ	0xFF6
  2563                           tablat	equ	0xFF5
  2564                           prodh	equ	0xFF4
  2565                           prodl	equ	0xFF3
  2566                           indf0	equ	0xFEF
  2567                           postinc0	equ	0xFEE
  2568                           postdec0	equ	0xFED
  2569                           preinc0	equ	0xFEC
  2570                           plusw0	equ	0xFEB
  2571                           fsr0h	equ	0xFEA
  2572                           fsr0l	equ	0xFE9
  2573                           wreg	equ	0xFE8
  2574                           indf1	equ	0xFE7
  2575                           postinc1	equ	0xFE6
  2576                           postdec1	equ	0xFE5
  2577                           preinc1	equ	0xFE4
  2578                           plusw1	equ	0xFE3
  2579                           fsr1h	equ	0xFE2
  2580                           fsr1l	equ	0xFE1
  2581                           bsr	equ	0xFE0
  2582                           indf2	equ	0xFDF
  2583                           postinc2	equ	0xFDE
  2584                           postdec2	equ	0xFDD
  2585                           preinc2	equ	0xFDC
  2586                           plusw2	equ	0xFDB
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8

Data Sizes:
    Strings     73
    Constant    0
    Data        2
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     22      27
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 

    MensajeLCD_Var@a	PTR unsigned char  size(1) Largest target is 14
		 -> STR_7(CODE[3]), STR_6(CODE[11]), STR_5(CODE[10]), STR_4(CODE[11]), 
		 -> STR_3(CODE[13]), STR_2(CODE[11]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_TransmitirDatos
    _TransmitirDatos->_MensajeLCD_Var
    ___lbdiv->___lbmod
    _MensajeLCD_Var->_EscribeLCD_c
    _EscribeLCD_c->_EnviaDato
    _DireccionaLCD->_EnviaDato
    _InicializaLCD->_EnviaDato
    _BorraLCD->_EnviaDato
    _EnviaDato->_RetardoLCD

Critical Paths under _ISRL in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISRL in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISRL in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISRL in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISRL in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISRL in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISRL in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISRL in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISRL in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3908
                                             20 COMRAM     2     2      0
                           _BorraLCD
                       _ConfiguraLCD
                      _DireccionaLCD
                       _EscribeLCD_c
                      _InicializaLCD
                     _MensajeLCD_Var
                    _TransmitirDatos
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     314
                                              7 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _TransmitirDatos                                      6     4      2    2222
                                             16 COMRAM     4     2      2
                      _DireccionaLCD
                       _EscribeLCD_c
                     _MensajeLCD_Var
                         _Transmitir
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (2) ___lbmod                                              4     3      1     463
                                              7 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lbdiv                                              4     3      1     466
                                             11 COMRAM     4     3      1
                            ___lbmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _Transmitir                                           1     1      0      15
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _MensajeLCD_Var                                       4     3      1     922
                                             12 COMRAM     4     3      1
                       _EscribeLCD_c
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2     166
                                              7 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _EscribeLCD_c                                         1     1      0      90
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _DireccionaLCD                                        1     1      0      90
                                             11 COMRAM     1     1      0
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        0     0      0     150
                           _BorraLCD
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (2) _BorraLCD                                             0     0      0      75
                          _EnviaDato
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _EnviaDato                                            2     2      0      60
                                              9 COMRAM     2     2      0
                        _HabilitaLCD
                         _RetardoLCD
 ---------------------------------------------------------------------------------
 (4) _RetardoLCD                                           2     2      0      15
                                              7 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _HabilitaLCD                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiguraLCD                                         1     1      0      45
                                              7 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISRL                                                 5     5      0       0
                                              2 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                  2     2      0       0
                                              0 COMRAM     2     2      0
                            _Recibir
 ---------------------------------------------------------------------------------
 (8) _Recibir                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BorraLCD
     _EnviaDato
       _HabilitaLCD
       _RetardoLCD
     _HabilitaLCD
     _RetardoLCD
   _ConfiguraLCD
   _DireccionaLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _EscribeLCD_c
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _InicializaLCD
     _BorraLCD
     _EnviaDato
     _HabilitaLCD
     _RetardoLCD
   _MensajeLCD_Var
     _EscribeLCD_c
     _strlen
   _TransmitirDatos
     _DireccionaLCD
     _EscribeLCD_c
     _MensajeLCD_Var
     _Transmitir
     ___lbdiv
       ___lbmod (ARG)
     ___lbmod
   ___lwdiv

 _ISRL (ROOT)

 _ISR (ROOT)
   _Recibir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      36        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     16      1B       1       28.7%
BITBIGSFRhhlhhh     19      0       0      21        0.0%
BITBIGSFRlhl        11      0       0      33        0.0%
BITBIGSFRll          F      0       0      34        0.0%
BITBIGSFRhhh         D      0       0      20        0.0%
BITBIGSFRhhlhll      C      0       0      27        0.0%
BITBIGSFRhhlhlh      C      0       0      24        0.0%
BITBIGSFRhhlhlh      8      0       0      26        0.0%
BITBIGSFRhhlhll      7      0       0      28        0.0%
BITBIGSFRhl          6      0       0      29        0.0%
BITBIGSFRlhhhl       5      0       0      31        0.0%
BITBIGSFRhhlhlh      4      0       0      25        0.0%
BITBIGSFRhhlhlh      3      0       0      23        0.0%
BITBIGSFRlhhhh       1      0       0      30        0.0%
BITBIGSFRlhhl        1      0       0      32        0.0%
BITBIGSFRhhlhhl      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1B      35        0.0%
DATA                 0      0      1B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Mon Jun 05 22:12:43 2023

      Transmitir@BufferT 0008               EnviaDato@a 000B                       bsr 000FE0  
          _InicializaLCD 0ACA                      l164 09A6                      l167 09AC  
                    l708 0C14                      l990 0B7A                      l992 0B9C  
                    l994 0BA6                      _GIE 007F97                      l988 0B6A  
                    l998 0BB0                      _RC1 007C11                      _RC2 007C12  
                    _RB5 007C0D                      _RB6 007C0E                      _RE1 007C21  
                    _RB7 007C0F                      _RE2 007C22                      u120 0DC0  
                    u500 0BEE                      u460 0D12                      _ISR 0008  
                    u607 0958                      u617 0974                      u627 099E  
                    u637 0B70                      u557 0868                      u647 0B80  
                    u567 08CE                      u657 0B90                      u577 08FE  
                    u667 0B9E                      u587 0920                      u677 0BA8  
                    u597 093C                      u687 0E0A                      wreg 000FE8  
                   ?_ISR 0001                     l1010 0CA8                     l1116 0ADC  
                   l1060 0E16                     l1126 0AFA                     l1136 0B18  
                   l1410 0D24                     l1402 0D0E                     l1156 0B50  
                   l1420 0D66                     l1414 0D2C                     l1372 0D8C  
                   l1428 0D7E                     l1460 0BE2                     l1374 0D8E  
                   l1382 0C28                     l1390 0C5A                     l1462 0BEA  
                   l1472 0C0A                     l1554 098C                     l1572 09DC  
                   l1398 0D08                     STR_1 0801                     STR_2 0827  
                   STR_3 080F                     STR_4 0832                     STR_5 083D  
                   STR_6 081C                     STR_7 0847                     _LATB 000F8A  
                   _LATD 000F8C                     _RBIF 007F90                     _RCIF 007CF5  
                   _ISRL 0018                     _RBPU 007F8F                     _TMR0 000FD6  
                   _TMR1 000FCE                     _TMR2 000FCC                     _TRMT 007D61  
         ??_EscribeLCD_c 000C                     _main 084C                     btemp 001C  
                   start 00D4             ___param_bank 000000                    ??_ISR 0001  
        __end_of_Recibir 0E28                    ?_ISRL 0001           ?_InicializaLCD 0001  
                  ?_main 0001          __end_of___lbdiv 0D30                    _CCPR1 000FBE  
          EscribeLCD_c@a 000C          __end_of___lbmod 0D86                    _T0CON 000FD5  
                  _T1CON 000FCD                    _LATD2 007C62                    _LATD3 007C63  
        __end_of___lwdiv 0C1E                    i1l211 0066                    i1l203 0042  
                  i1l220 00A6                    i1l221 0096                    i1l205 004A  
                  i1l223 009E                    i1l215 007A                    i1l217 0082  
                  i1l209 005E                    i1l226 00C4                    i2l196 0CF2  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISC 000F94  
                  _TRISD 000F95                    _TRISE 000F96                    _TXREG 000FAD  
                  _TXSTA 000FAC                    _Tecla 0019                    tablat 000FF5  
            _HabilitaLCD 0E06                    ttemp5 001D                    ttemp6 0020  
                  ttemp7 0024                    status 000FD8                    wtemp8 001D  
        ___lbdiv@divisor 000C          ___lbdiv@counter 000E             __end_of_ISRL 00D4  
       __end_of_BorraLCD 0E06          __initialization 0D30             __end_of_main 09E8  
                 ??_ISRL 0003                   ??_main 0015     __end_of_ConfiguraLCD 0DC6  
          __activetblptr 000002                   _CCP1IF 007CF2           DireccionaLCD@a 000C  
                 i1l1336 0052                   i1l1346 006E                   i1l1356 008A  
                 i1l1366 00AA                   i2l1316 0CD0                   _OSCCON 000FD3  
                 _TMR0IE 007F95                   _TMR0IF 007F92                   _TMR0ON 007EAF  
                 _TMR1ON 007E68    __end_of_DireccionaLCD 0DF2                   _UTRDIS 007B7B  
             _RetardoLCD 0B66                ??_Recibir 0001      TransmitirDatos@MinC 0013  
              ??___lbdiv 000D                ??___lbmod 0009                ??___lwdiv 000C  
        ??_InicializaLCD 000C                   isa$std 000001     __end_of_EscribeLCD_c 0DDC  
                 _strlen 0D86             __pdataCOMRAM 001A             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             _Transmitir 0E14         ___lbdiv@dividend 000D          ___lbmod@divisor 0008  
             __accesstop 0060  __end_of__initialization 0D4E          ___lbmod@counter 000A  
          ___rparam_used 000001           __pcstackCOMRAM 0001        __end_of_EnviaDato 0CB6  
       ___lbdiv@quotient 000F                ?_BorraLCD 0001           _MensajeLCD_Var 0C1E  
        MensajeLCD_Var@a 000D          MensajeLCD_Var@i 000F              ?_RetardoLCD 0001  
            RetardoLCD@a 0009                  _CCP1CON 000FBD                  _BAUDCON 000FB8  
                ?_strlen 0008   __end_of_MensajeLCD_Var 0C70                  i2u25_40 0CC6  
                i2u26_45 0CC8                  i1u69_27 00B4                  i2u70_47 0CE4  
             ??_BorraLCD 000C              ?_Transmitir 0001             ?_HabilitaLCD 0001  
           _ConfiguraLCD 0DAE                  _Recibir 0E20                  __Hparam 0000  
                __Lparam 0000                  ___lbdiv 0CF6                  ___lbmod 0D5C  
                ___lwdiv 0BCC             __psmallconst 0800                  __pcinit 0D30  
                __ramtop 0800                  __ptext0 084C                  __ptext1 0BCC  
                __ptext2 09E8                  __ptext3 0D5C                  __ptext4 0CF6  
                __ptext5 0E14                  __ptext6 0C1E                  __ptext7 0D86  
                __ptext8 0DC6                  __ptext9 0DDC          ?_MensajeLCD_Var 000D  
         __pintcode_body 0CB6     end_of_initialization 0D4E            __Lmediumconst 0000  
                int_func 0CB6             _EscribeLCD_c 0DC6        ??_TransmitirDatos 0013  
                strlen@s 0008         ___lbmod@dividend 0009              ___lbmod@rem 000B  
          __pidataCOMRAM 0E28           _Minimo_Consola 0017                _Distancia 0018  
  __end_of_InicializaLCD 0B66                _EnviaDato 0C70           _Minimo_Teclado 001A  
         __end_of_strlen 0DAE      start_initialization 0D30              __end_of_ISR 0CF6  
           ??_RetardoLCD 0008                 ??_strlen 000A               ?_EnviaDato 0001  
            __pbssCOMRAM 0017       __end_of_RetardoLCD 0BCC             ??_Transmitir 0008  
          _DireccionaLCD 0DDC                 ?_Recibir 0001         ___lwdiv@dividend 0008  
              __pintcode 0008                 ?___lbdiv 000C                 ?___lbmod 0008  
               ?___lwdiv 0008              __pintcodelo 0018       __end_of_Transmitir 0E20  
       ??_MensajeLCD_Var 000E              __smallconst 0800         ___lwdiv@quotient 000C  
        _TransmitirDatos 09E8           ?_DireccionaLCD 0001              ??_EnviaDato 000A  
               _BorraLCD 0DF2                 __Hrparam 0000                 __Lrparam 0000  
  TransmitirDatos@Minimo 0011            ConfiguraLCD@a 0008  __end_of_TransmitirDatos 0ACA  
        ___lwdiv@divisor 000A          ___lwdiv@counter 000E                 __ptext10 0ACA  
               __ptext11 0DF2                 __ptext12 0C70                 __ptext13 0B66  
               __ptext14 0E06                 __ptext15 0DAE                 __ptext18 0E20  
        ??_DireccionaLCD 000C                 _interfaz 001B                 isa$xinst 000000  
               int$flags 001C                 intlevel1 0000                 intlevel2 0000  
          ??_HabilitaLCD 0008            ?_ConfiguraLCD 0001                 strlen@cp 000A  
       ?_TransmitirDatos 0011           ??_ConfiguraLCD 0008            ?_EscribeLCD_c 0001  
    __end_of_HabilitaLCD 0E14  
